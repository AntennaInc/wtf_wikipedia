{"version":3,"file":"wtf_wikipedia-client.js","sources":["../src/_fetch/00-parseUrl.js","../src/_fetch/01-makeUrl.js","../src/_fetch/02-getResult.js","../src/01-document/_sectionMap.js","../src/_lib/setDefaults.js","../src/01-document/toJson.js","../src/image/toJson.js","../src/image/Image.js","../src/01-document/Document.js","../src/_data/categories.js","../src/_data/disambig.js","../src/_data/images.js","../src/_data/infoboxes.js","../src/_data/redirects.js","../src/_data/references.js","../src/_data/i18n.js","../src/_data/languages.js","../src/04-sentence/interwiki.js","../src/link/parse.js","../src/01-document/redirects.js","../src/01-document/disambig.js","../src/01-document/preProcess/kill_xml.js","../src/01-document/preProcess/index.js","../src/_lib/encode.js","../src/02-section/toJson.js","../src/02-section/Section.js","../src/_lib/helpers.js","../src/_data/interwiki.js","../src/link/Link.js","../src/link/index.js","../src/04-sentence/formatting.js","../src/04-sentence/toJson.js","../src/04-sentence/Sentence.js","../src/04-sentence/_abbreviations.js","../src/04-sentence/parse.js","../src/04-sentence/index.js","../src/template/_parsers/_strip.js","../src/template/_parsers/_fmtName.js","../src/template/_parsers/01-pipe-splitter.js","../src/template/_parsers/02-keyMaker.js","../src/template/_parsers/03-cleanup.js","../src/template/_parsers/parse.js","../src/reference/Reference.js","../src/reference/index.js","../src/02-section/heading.js","../src/table/parse/_findRows.js","../src/table/parse/_spans.js","../src/table/parse/index.js","../src/table/toJson.js","../src/table/Table.js","../src/table/index.js","../src/03-paragraph/toJson.js","../src/03-paragraph/Paragraph.js","../src/image/nested_find.js","../src/image/index.js","../src/list/List.js","../src/list/index.js","../src/03-paragraph/index.js","../src/infobox/toJson.js","../src/infobox/Infobox.js","../src/template/find/flat.js","../src/template/_parsers/_getName.js","../src/template/find/index.js","../src/template/_ignore.js","../src/template/_infobox.js","../src/template/templates/dates/_months.js","../src/template/templates/dates/_format.js","../src/template/templates/dates/misc.js","../src/template/templates/dates/_delta.js","../src/template/templates/dates/parsers.js","../src/template/templates/dates/_timeSince.js","../src/template/templates/dates/index.js","../src/template/templates/formatting/format.js","../src/template/templates/formatting/lists.js","../src/template/templates/formatting/misc.js","../src/template/templates/formatting/index.js","../src/template/templates/geo/dms-format.js","../src/template/templates/geo/coor.js","../src/template/templates/geo/index.js","../src/template/templates/wikipedia/links.js","../src/template/templates/wikipedia/page.js","../src/template/templates/wikipedia/table-cell.js","../src/template/templates/wikipedia/index.js","../src/template/templates/brackets.js","../src/template/templates/currency.js","../src/template/templates/elections.js","../src/_data/flags.js","../src/template/templates/flags.js","../src/template/templates/ipa.js","../src/template/templates/languages.js","../src/template/templates/math.js","../src/template/templates/misc.js","../src/template/templates/punctuation.js","../src/template/templates/science.js","../src/template/templates/soccer.js","../src/template/templates/sports.js","../src/template/templates/stock-exchanges.js","../src/template/templates/weather.js","../src/template/templates/websites.js","../src/template/templates/wiktionary.js","../src/template/templates/index.js","../src/template/parse.js","../src/template/Template.js","../src/template/index.js","../src/02-section/start-to-end/gallery.js","../src/02-section/start-to-end/election.js","../src/02-section/start-to-end/nba.js","../src/02-section/start-to-end/mlb.js","../src/02-section/start-to-end/mma.js","../src/02-section/start-to-end/math.js","../src/02-section/start-to-end/index.js","../src/02-section/index.js","../src/01-document/categories.js","../src/01-document/index.js","../src/_fetch/03-parseDoc.js","../src/_fetch/http/client.js","../src/_fetch/_headers.js","../src/_fetch/index.js","../src/_fetch/random.js","../src/_fetch/category.js","../src/_version.js","../src/index.js"],"sourcesContent":["const parseUrl = function(url) {\n  let parsed = new URL(url) //eslint-disable-line\n  let title = parsed.pathname.replace(/^\\/(wiki\\/)?/, '')\n  title = decodeURIComponent(title)\n  return {\n    domain: parsed.host,\n    title: title\n  }\n}\nmodule.exports = parseUrl\n","const isInterWiki = /(wiktionary|wikinews|wikibooks|wikiquote|wikisource|wikispecies|wikiversity|wikivoyage|wikipedia|wikimedia|foundation|meta)\\.org/\n\nconst defaults = {\n  action: 'query',\n  prop: 'revisions', //we use the 'revisions' api here, instead of the Raw api, for its CORS-rules..\n  rvprop: 'content',\n  maxlag: 5,\n  rvslots: 'main',\n  origin: '*',\n  format: 'json',\n  redirects: 'true'\n}\n\nconst toQueryString = function(obj) {\n  return Object.entries(obj)\n    .map(([key, value]) => {\n      return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`\n    })\n    .join('&')\n}\n\nconst isArray = function(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\nconst cleanTitle = page => {\n  page = page.replace(/ /g, '_')\n  page = page.trim()\n  // page = encodeURIComponent(page)\n  return page\n}\n\nconst makeUrl = function(options) {\n  let params = Object.assign({}, defaults)\n  // default url\n  let url = `https://${options.lang}.${options.wiki}.org/w/api.php?`\n  // from a 3rd party wiki\n  options.domain = options.domain || options.wikiUrl //support old syntax\n  if (options.domain) {\n    let path = options.path\n    //wikimedia api uses ./w/api path. no others do\n    if (isInterWiki.test(options.domain)) {\n      path = 'w/api.php'\n    }\n    url = `https://${options.domain}/${path}?`\n  }\n  if (!options.follow_redirects) {\n    delete params.redirects\n  }\n  // support numerical ids\n  let page = options.title\n  if (typeof page === 'number') {\n    params.pageids = page //single pageId\n  } else if (isArray(page) && typeof page[0] === 'number') {\n    params.pageids = page.join('|') //pageid array\n  } else if (isArray(page) === true) {\n    //support array\n    params.titles = page.map(cleanTitle).join('|')\n  } else {\n    // single page\n    params.titles = cleanTitle(page)\n  }\n  // make it!\n  url += toQueryString(params)\n  return url\n}\nmodule.exports = makeUrl\n","//this data-format from mediawiki api is nutso\nconst getResult = function(data, options) {\n  options = options || {}\n  let pages = Object.keys(data.query.pages)\n  let docs = pages.map(id => {\n    let page = data.query.pages[id] || {}\n    if (page.hasOwnProperty('missing') || page.hasOwnProperty('invalid')) {\n      return null\n    }\n    let text = page.revisions[0]['*']\n    // console.log(page.revisions[0])\n    //us the 'generator' result format, for the random() method\n    if (!text && page.revisions[0].slots) {\n      text = page.revisions[0].slots.main['*']\n    }\n    let meta = Object.assign({}, options, {\n      title: page.title,\n      pageID: page.pageid,\n      namespace: page.ns\n    })\n    try {\n      return { wiki: text, meta: meta }\n    } catch (e) {\n      console.error(e)\n      throw e\n    }\n  })\n  return docs\n}\nmodule.exports = getResult\n","//helper for looping around all sections of a document\nconst sectionMap = function(doc, fn, clue) {\n  let arr = []\n  doc.sections().forEach(sec => {\n    let list = []\n    if (typeof clue === 'string') {\n      list = sec[fn](clue)\n    } else {\n      list = sec[fn]()\n    }\n    list.forEach(t => {\n      arr.push(t)\n    })\n  })\n  if (typeof clue === 'number') {\n    return arr[clue]\n  }\n  return arr\n}\nmodule.exports = sectionMap\n","//\nconst setDefaults = function(options, defaults) {\n  return Object.assign({}, defaults, options)\n}\nmodule.exports = setDefaults\n","const setDefaults = require('../_lib/setDefaults')\nconst defaults = {\n  title: true,\n  sections: true,\n  pageID: true,\n  categories: true\n}\n\n//an opinionated output of the most-wanted data\nconst toJSON = function(doc, options) {\n  options = setDefaults(options, defaults)\n  let data = {}\n  if (options.title) {\n    data.title = doc.title()\n  }\n  if (options.pageID) {\n    data.pageID = doc.pageID()\n  }\n  if (options.categories) {\n    data.categories = doc.categories()\n  }\n  if (options.sections) {\n    data.sections = doc.sections().map(i => i.json(options))\n  }\n  if (doc.isRedirect() === true) {\n    data.isRedirect = true\n    data.redirectTo = doc.data.redirectTo\n    data.sections = []\n  }\n\n  //these are default-off\n  if (options.coordinates) {\n    data.coordinates = doc.coordinates()\n  }\n  if (options.infoboxes) {\n    data.infoboxes = doc.infoboxes().map(i => i.json(options))\n  }\n  if (options.images) {\n    data.images = doc.images().map(i => i.json(options))\n  }\n  if (options.plaintext) {\n    data.plaintext = doc.text(options)\n  }\n  if (options.citations || options.references) {\n    data.references = doc.references()\n  }\n  return data\n}\nmodule.exports = toJSON\n","const setDefaults = require('../_lib/setDefaults')\n\nconst defaults = {\n  caption: true,\n  alt: true,\n  links: true,\n  thumb: true,\n  url: true\n}\n//\nconst toJson = function(img, options) {\n  options = setDefaults(options, defaults)\n  let json = {\n    file: img.file()\n  }\n  if (options.thumb !== false) {\n    json.thumb = img.thumbnail()\n  }\n  if (options.url !== false) {\n    json.url = img.url()\n  }\n  //add captions\n  if (options.caption !== false && img.data.caption) {\n    json.caption = img.caption()\n    if (options.links !== false && img.data.caption.links()) {\n      json.links = img.links()\n    }\n  }\n  if (options.alt !== false && img.data.alt) {\n    json.alt = img.alt()\n  }\n  return json\n}\nmodule.exports = toJson\n","const toJson = require('./toJson')\nconst server = 'https://wikipedia.org/wiki/Special:Redirect/file/'\n\nconst encodeTitle = function(file) {\n  let title = file.replace(/^(image|file?)\\:/i, '')\n  //titlecase it\n  title = title.charAt(0).toUpperCase() + title.substring(1)\n  //spaces to underscores\n  title = title.trim().replace(/ /g, '_')\n  return title\n}\n\n//the wikimedia image url is a little silly:\nconst makeSrc = function(file) {\n  let title = encodeTitle(file)\n  title = encodeURIComponent(title)\n  return title\n}\n\n//the class for our image generation functions\nconst Image = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  file() {\n    return this.data.file || ''\n  },\n  alt() {\n    let str = this.data.alt || this.data.file || ''\n    str = str.replace(/^(file|image):/i, '')\n    str = str.replace(/\\.(jpg|jpeg|png|gif|svg)/i, '')\n    return str.replace(/_/g, ' ')\n  },\n  caption() {\n    if (this.data.caption) {\n      return this.data.caption.text()\n    }\n    return ''\n  },\n  links() {\n    if (this.data.caption) {\n      return this.data.caption.links()\n    }\n    return []\n  },\n  url() {\n    return server + makeSrc(this.file())\n  },\n  thumbnail(size) {\n    size = size || 300\n    let path = makeSrc(this.file())\n    return server + path + '?width=' + size\n  },\n  format() {\n    let arr = this.file().split('.')\n    if (arr[arr.length - 1]) {\n      return arr[arr.length - 1].toLowerCase()\n    }\n    return null\n  },\n  json: function(options) {\n    options = options || {}\n    return toJson(this, options)\n  },\n  text: function() {\n    return ''\n  }\n}\n\nObject.keys(methods).forEach(k => {\n  Image.prototype[k] = methods[k]\n})\n\nImage.prototype.src = Image.prototype.url\nImage.prototype.thumb = Image.prototype.thumbnail\nmodule.exports = Image\n","const sectionMap = require('./_sectionMap')\nconst toJSON = require('./toJson')\nconst setDefaults = require('../_lib/setDefaults')\nconst Image = require('../image/Image')\n\nconst defaults = {\n  tables: true,\n  lists: true,\n  paragraphs: true\n}\n\n//\nconst Document = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  title: function(str) {\n    //use like a setter\n    if (str !== undefined) {\n      this.data.title = str\n      return str\n    }\n    //if we have it already\n    if (this.data.title) {\n      return this.data.title\n    }\n    //guess the title of this page from first sentence bolding\n    let guess = null\n    let sen = this.sentences(0)\n    if (sen) {\n      guess = sen.bolds(0)\n    }\n    return guess\n  },\n  pageID: function(id) {\n    if (id !== undefined) {\n      this.data.pageID = id\n    }\n    return this.data.pageID\n  },\n  language: function(lang) {\n    if (lang !== undefined) {\n      this.data.lang = lang\n    }\n    return this.data.lang\n  },\n  url: function() {\n    let title = this.title()\n    if (!title) {\n      return null\n    }\n    let lang = this.language() || 'en'\n    let domain = this.data.domain || 'wikipedia.org'\n    // replace blank to underscore\n    title = title.replace(/ /g, '_')\n    title = encodeURIComponent(title)\n    return `https://${lang}.${domain}.org/wiki/${title}`\n  },\n  namespace: function(ns) {\n    if (ns !== undefined) {\n      this.data.namespace = ns\n    }\n    return this.data.namespace\n  },\n  isRedirect: function() {\n    return this.data.type === 'redirect'\n  },\n  redirectTo: function() {\n    return this.data.redirectTo\n  },\n  isDisambiguation: function() {\n    return this.data.type === 'disambiguation'\n  },\n  categories: function(clue) {\n    if (typeof clue === 'number') {\n      return this.data.categories[clue]\n    }\n    return this.data.categories || []\n  },\n  sections: function(clue) {\n    let arr = this.data.sections || []\n    arr.forEach(sec => (sec.doc = this))\n    //grab a specific section, by its title\n    if (typeof clue === 'string') {\n      let str = clue.toLowerCase().trim()\n      return arr.find(s => {\n        return s.title().toLowerCase() === str\n      })\n    }\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr\n  },\n  paragraphs: function(n) {\n    let arr = []\n    this.data.sections.forEach(s => {\n      arr = arr.concat(s.paragraphs())\n    })\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr\n  },\n  paragraph: function(n) {\n    let arr = this.paragraphs() || []\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr[0]\n  },\n  sentences: function(n) {\n    let arr = []\n    this.sections().forEach(sec => {\n      arr = arr.concat(sec.sentences())\n    })\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr\n  },\n  sentence: function() {\n    return this.sentences(0)\n  },\n  images: function(clue) {\n    let arr = sectionMap(this, 'images', null)\n    //grab image from infobox, first\n    this.infoboxes().forEach(info => {\n      let img = info.image()\n      if (img) {\n        arr.unshift(img) //put it at the top\n      }\n    })\n    //look for 'gallery' templates, too\n    this.templates().forEach(obj => {\n      if (obj.template === 'gallery') {\n        obj.images = obj.images || []\n        obj.images.forEach(img => {\n          if (img instanceof Image === false) {\n            img = new Image(img)\n          }\n          arr.push(img)\n        })\n      }\n    })\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr\n  },\n  image: function() {\n    return this.images(0)\n  },\n  links: function(clue) {\n    return sectionMap(this, 'links', clue)\n  },\n  interwiki: function(clue) {\n    return sectionMap(this, 'interwiki', clue)\n  },\n  lists: function(clue) {\n    return sectionMap(this, 'lists', clue)\n  },\n  tables: function(clue) {\n    return sectionMap(this, 'tables', clue)\n  },\n  templates: function(clue) {\n    return sectionMap(this, 'templates', clue)\n  },\n  references: function(clue) {\n    return sectionMap(this, 'references', clue)\n  },\n  coordinates: function(clue) {\n    return sectionMap(this, 'coordinates', clue)\n  },\n  infoboxes: function(clue) {\n    let arr = sectionMap(this, 'infoboxes')\n    //sort them by biggest-first\n    arr = arr.sort((a, b) => {\n      if (Object.keys(a.data).length > Object.keys(b.data).length) {\n        return -1\n      }\n      return 1\n    })\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr\n  },\n  text: function(options) {\n    options = setDefaults(options, defaults)\n    //nah, skip these.\n    if (this.isRedirect() === true) {\n      return ''\n    }\n    let arr = this.sections().map(sec => sec.text(options))\n    return arr.join('\\n\\n')\n  },\n  json: function(options) {\n    options = setDefaults(options, defaults)\n    return toJSON(this, options)\n  },\n  debug: function() {\n    console.log('\\n')\n    this.sections().forEach(sec => {\n      let indent = ' - '\n      for (let i = 0; i < sec.depth; i += 1) {\n        indent = ' -' + indent\n      }\n      console.log(indent + (sec.title() || '(Intro)'))\n    })\n    return this\n  }\n}\n\nconst isArray = function(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n//add singular-methods, too\nlet plurals = [\n  'sections',\n  'infoboxes',\n  'sentences',\n  'citations',\n  'references',\n  'coordinates',\n  'tables',\n  'lists',\n  'links',\n  'images',\n  'templates',\n  'categories'\n]\nplurals.forEach(fn => {\n  let sing = fn.replace(/ies$/, 'y')\n  sing = sing.replace(/oxes$/, 'ox')\n  sing = sing.replace(/s$/, '')\n  methods[sing] = function(n) {\n    n = n || 0\n    let res = this[fn](n)\n    if (isArray(res)) {\n      return res[0]\n    }\n    return res\n  }\n})\n\nObject.keys(methods).forEach(k => {\n  Document.prototype[k] = methods[k]\n})\n\n//alias these ones\nDocument.prototype.lang = Document.prototype.language\nDocument.prototype.ns = Document.prototype.namespace\nDocument.prototype.plaintext = Document.prototype.text\nDocument.prototype.isDisambig = Document.prototype.isDisambiguation\nDocument.prototype.citations = Document.prototype.references\nDocument.prototype.redirectsTo = Document.prototype.redirectTo\nDocument.prototype.redirect = Document.prototype.redirectTo\nDocument.prototype.redirects = Document.prototype.redirectTo\n\nmodule.exports = Document\n","module.exports = [\n  'category', //en\n\n  'abdeeling', //\tpdc\n  'bólkur', //\tfo\n  'catagóir', //\tga\n  'categori', //\tcy\n  'categoria',\n  'categoria', //\tco\n  'categoría', //\tes\n  'categorîa', //\tlij\n  'categorìa', //\tpms\n  'catégorie',\n  'categorie',\n  'catègorie', //\tfrp\n  'category',\n  'categuria', //\tlmo\n  'catigurìa', //\tscn\n  'class', //\tkw\n  'ẹ̀ka', //\tyo\n  'flocc',\n  'flocc', //\tang\n  'flokkur',\n  'grup', //\ttpi\n  'jamii', //\tsw\n  'kaarangay', //\twar\n  'kateggoría', //\tlad\n  'kategooria', //\tet\n  'kategori', //\tda\n  'kategorî', //\tku\n  'kategoria', //\teu\n  'kategória', //\thu\n  'kategorie', //de\n  'kategoriija', //\tse\n  'kategorija', //\tsl\n  'kategorio', //\teo\n  'kategoriya',\n  'kategoriýa', //\ttk\n  'kategoriye', //\tdiq\n  'kategory', //\tfy\n  'kategorya', //\ttl\n  'kateqoriya', //\taz\n  'katiguriya', //\tqu\n  'klad', //\tvo\n  'luokka',\n  'ñemohenda', //\tgn\n  'roinn', //-seòrsa\tgd\n  'ronney', //\tgv\n  'rummad', //\tbr\n  'setensele', //\tnso\n  'sokajy', //\tmg\n  'sumut', // atassuseq\tkl\n  'thể', // loại\tvi\n  'turkum', //\tuz\n  'категорија',\n  'категория', //\tru\n  'категорія', //\tuk\n  'катэгорыя',\n  'төркем', //\ttt\n  'קטגוריה', //\the\n  'تصنيف',\n  'تۈر', //\tug\n  'رده',\n  'श्रेणी',\n  'श्रेणी', //\thi\n  'বিষয়শ্রেণী', //\tbn\n  'หมวดหมู่', //\tth\n  '분류', //\tko\n  '분류', //ko\n  '分类' //\tza\n  //--\n]\n","module.exports = [\n  'dab', //en\n  'disamb', //en\n  'disambig', //en\n  'disambiguation', //en\n\n  'aðgreining', //is\n  'aimai', //ja\n  'ałtsʼáʼáztiin', //nv\n  'anlam ayrımı', //gag\n  'anlam ayrımı', //tr\n  'apartigilo', //eo\n  'argipen', //eu\n  'begriepskloorenge', //stq\n  'begriffsklärung', //als\n  'begriffsklärung', //de\n  'begriffsklärung', //pdc\n  'begriffsklearung', //bar\n  'bisongidila', //kg\n  'bkl', //pfl\n  'bokokani', //ln\n  'caddayn', //so\n  'clerheans', //kw\n  'cudakirin', //ku\n  'čvor', //bs\n  'db', //vls\n  'desambig', //nov\n  'desambigación', //an\n  'desambiguação', //pt\n  'desambiguació', //ca\n  'desambiguación', //es\n  'desambiguáncia', //ext\n  'desambiguasion', //lad\n  'desambiguassiù', //lmo\n  'desambigui', //lfn\n  'dezambiguizare', //ro\n  'dəqiqləşdirmə', //az\n  'disambigua', //it\n  'disambigua', //lij\n  'disambigua', //nap\n  'disambìgua', //sc\n  'disambigua', //scn\n  'disambiguasi', //id\n  'disambiguasi', //su\n  'discretiva', //la\n  'disheñvelout', //br\n  'disingkek', //min\n  'dixanbigua', //vec\n  'dixebra', //ast\n  'diżambigwazzjoni', //mt\n  'doorverwijspagina', //nl\n  'dp', //nl\n  'dp', //zea\n  'dubbelsinnig', //af\n  'dudalipen', //rmy\n  'dv', //nds_nl\n  'egyért', //hu\n  'fleiri týdningar', //fo\n  'fleirtyding', //nn\n  'flertydig', //da\n  'förgrening', //sv\n  'gì-ngiê', //cdo\n  'giklaro', //ceb\n  'gwahaniaethu', //cy\n  'homonimo', //io\n  'homónimos', //gl\n  'homonymie', //fr\n  'huaʻōlelo puana like', //haw\n  'idirdhealú', //ga\n  'khu-pia̍t', //zh_min_nan\n  'kthjellim', //sq\n  'kujekesa', //sn\n  'maana', //sw\n  'maneo bin', //diq\n  'mehrdüdig begreep', //nds\n  'menm non', //ht\n  'muardüüdag artiikel', //frr\n  'neibetsjuttings', //fy\n  'nozīmju atdalīšana', //lv\n  'nuorodinis', //lt\n  'nyahkekaburan', //ms\n  'omonimeye', //wa\n  'omonimia', //oc\n  'page dé frouque', //nrm\n  'paglilinaw', //tl\n  'panangilawlawag', //ilo\n  'pansayod', //war\n  'pejy mitovy anarana', //mg\n  'peker', //no\n  'razdvojba', //hr\n  'razločitev', //sl\n  'razvrstavanje', //sh\n  'reddaghey', //gv\n  'rozcestník', //cs\n  'rozlišovacia stránka', //sk\n  'sclerir noziun', //rm\n  'selvendyssivu', //olo\n  'soilleireachadh', //gd\n  'suzmunski', //jbo\n  'täpsustuslehekülg', //et\n  'täsmennyssivu', //fi\n  'telplänov', //vo\n  'tlahtolmelahuacatlaliztli', //nah\n  'trang định hướng', //vi\n  'ujednoznacznienie', //pl\n  'verdudeliking', //li\n  'wěcejwóznamowosć', //dsb\n  'wjacezmyslnosć', //hsb\n  'zambiguaçon', //mwl\n  'zeimeibu škiršona', //ltg\n  'αποσαφήνιση', //el\n  'айрық', //kk\n  'аҵакырацәа', //ab\n  'вишезначна одредница', //sr\n  'ибҳомзудоӣ', //tg\n  'кёб магъаналы', //krc\n  'күп мәгънәләр', //tt\n  'күп мәғәнәлелек', //ba\n  'мъногосъмꙑслиѥ', //cu\n  'неадназначнасць', //be\n  'неадназначнасьць', //be_x_old\n  'неоднозначность', //ru\n  'олон удхатай', //bxr\n  'појаснување', //mk\n  'пояснение', //bg\n  'са шумуд манавал', //lez\n  'салаа утгатай', //mn\n  'суолталар', //sah\n  'текмаанисиздик', //ky\n  'цо магіна гуреб', //av\n  'чеперушка', //rue\n  'чолхалла', //ce\n  'шуко ончыктымаш-влак', //mhr\n  'მრავალმნიშვნელოვანი', //ka\n  'բազմիմաստութիւն', //hyw\n  'բազմիմաստություն', //hy\n  'באדייטן', //yi\n  'פירושונים', //he\n  'ابهام‌زدایی', //fa\n  'توضيح', //ar\n  'توضيح', //arz\n  'دقیقلشدیرمه', //azb\n  'ڕوونکردنەوە', //ckb\n  'سلجهائپ', //sd\n  'ضد ابہام', //ur\n  'گجگجی بیری', //mzn\n  'نامبهمېدنه', //ps\n  'መንታ', //am\n  'अस्पष्टता', //ne\n  'बहुअर्थी', //bh\n  'बहुविकल्पी शब्द', //hi\n  'দ্ব্যর্থতা নিরসন', //bn\n  'ਗੁੰਝਲ-ਖੋਲ੍ਹ', //pa\n  'સંદિગ્ધ શીર્ષક', //gu\n  'பக்கவழி நெறிப்படுத்தல்', //ta\n  'అయోమయ నివృత్తి', //te\n  'ದ್ವಂದ್ವ ನಿವಾರಣೆ', //kn\n  'വിവക്ഷകൾ', //ml\n  'වක්‍රෝත්ති', //si\n  'แก้ความกำกวม', //th\n  'သံတူကြောင်းကွဲ', //my\n  'ណែនាំ', //km\n  '동음이의', //ko\n  '扤清楚', //gan\n  '搞清楚', //zh_yue\n  '曖昧さ回避', //ja\n  '消歧义', //zh\n  '釋義', //zh_classical\n  \"gestion dj'omònim\", //pms\n  \"sut'ichana qillqa\" //qu\n  // 'z', //vep\n  // 'သဵင်မိူၼ် တူၼ်ႈထႅဝ်ပႅၵ်ႇ', //shn\n]\n","module.exports = [\n  'file', //en\n  'image', //en\n  'चित्र', //img\n\n  'archivo', //es\n  'attēls', //lv\n  'berkas', //id\n  'bestand', //nl\n  'datei', //de\n  'dosiero', //eo\n  'dosya', //lad\n  'fájl', //hu\n  'fasciculus', //la\n  'fichier', //fr\n  'fil', //da\n  'fitxategi', //eu\n  'fitxer', //ca\n  'gambar', //su\n  'imagem', //pt\n  'imej', //ms\n  'immagine', //it\n  'larawan', //tl\n  'lêer', //af\n  'plik', //pl\n  'restr', //br\n  'slika', //bs\n  'wêne', //ku\n  'wobraz', //dsb\n  'выява', //be\n  'податотека', //mk\n  'слика', //sr\n  'файл', //ru\n  'სურათი', //ka\n  'պատկեր', //hy\n  'קובץ', //he\n  'پرونده', //fa\n  'دوتنه', //ps\n  'ملف', //ar\n  'وێنە', //ckb\n  'चित्र', //hi\n  'ไฟล์', //th\n  '파일', //ko\n  'ファイル' //ja\n]\n","module.exports = [\n  'infobox', //en\n\n  'anfo', //mwl\n  'anuāmapa', //haw\n  'bilgi kutusu', //tr\n  'bilgi', //tr\n  'bilgiquti', //uz\n  'boaty', //mg\n  'boestkelaouiñ', //br\n  'bosca', //ga\n  'capsa', //la\n  'diehtokássa', //se\n  'faktamall', //sv\n  'ficha', //es\n  'generalni', //hr\n  'gwybodlen3', //cy\n  'info', //pt\n  'infobokis', //tpi\n  'infoboks', //da\n  'infochascha', //rm\n  'infokašćik', //dsb\n  'infokast', //et\n  'infokutija', //bs\n  'infolentelė', //lt\n  'infopolje', //sl\n  'informkesto', //eo\n  'infoskreine', //ltg\n  'infotaula', //eu\n  'inligtingskas',\n  'inligtingskas3', //af\n  'inligtingskas4', //af\n  'kishtey', //gv\n  'kotak', //su\n  'tertcita', //jbo\n  'tietolaatikko', //fi\n  'yerleşim bilgi kutusu',\n  'ynfoboks', //fy\n  'πλαίσιο', //el\n  'акарточка', //ab\n  'аҥа', //mhr\n  'инфобокс', //kk\n  'инфокутија', //sr\n  'инфокутия', //bg\n  'інфобокс', //rue\n  'канадский',\n  'картка', //be\n  'карточка', //ru\n  'карточка2', //mdf\n  'карточкарус', //ba\n  'картуш', //koi\n  'қуттӣ', //tg\n  'ინფოდაფა', //ka\n  'տեղեկաքարտ', //hy\n  'אינפאקעסטל', //yi\n  'תבנית', //he\n  'بطاقة', //ar\n  'ڄاڻخانو', //sd\n  'خانہ', //ur\n  'لغة',\n  'ज्ञानसन्दूक', //hi\n  'তথ্যছক', //bn\n  'ਜਾਣਕਾਰੀਡੱਬਾ', //pa\n  'సమాచారపెట్టె', //te\n  'තොරතුරුකොටුව', //si\n  'กล่องข้อมูล', //th\n  'ប្រអប់ព័ត៌មាន', //km\n  '정보상자', //ko\n  '明細' //zh_yue\n]\n","module.exports = [\n  'adkas', //br\n  'aýdaw',\n  'doorverwijzing',\n  'ohjaus',\n  'patrz', //pl\n  'přesměruj',\n  'redirección',\n  'redireccion',\n  'redirección', //es\n  'redirecionamento', //pt\n  'redirect', //en\n  'redirection',\n  'redirection', //fr\n  'rinvia', //it\n  'tilvísun',\n  'uudelleenohjaus',\n  'weiterleitung',\n  'weiterleitung', //de\n  'yönlendi̇r',\n  'yönlendirme',\n  'yönlendi̇rme', //tr\n  'ανακατευθυνση', //el\n  'айдау',\n  'перанакіраваньне',\n  'перенаправлення', //uk\n  'пренасочување', //mk\n  'преусмери',\n  'преусмјери',\n  'تغییر_مسیر',\n  'تغییرمسیر',\n  'تغییرمسیر', //fa\n  'เปลี่ยนทาง', //th\n  'ប្តូរទីតាំងទៅ', //km\n  '転送', //ja\n  '重定向'\n]\n","module.exports = [\n  'references',\n  'reference',\n  'einzelnachweise',\n  'referencias',\n  'références',\n  'notes et références',\n  '脚注',\n  'referenser',\n  'bronnen',\n  'примечания'\n]\n","// wikipedia special terms lifted and augmented from parsoid parser april 2015\n// and then manually on March 2020\nmodule.exports = {\n  categories: require('./categories'),\n  disambig: require('./disambig'),\n  images: require('./images'),\n  infoboxes: require('./infoboxes'),\n  redirects: require('./redirects'),\n  references: require('./references')\n\n  // specials: [\n  //   'спэцыяльныя',\n  //   'especial',\n  //   'speciální',\n  //   'spezial',\n  //   'special',\n  //   'ویژه',\n  //   'toiminnot',\n  //   'kerfissíða',\n  //   'arnawlı',\n  //   'spécial',\n  //   'speciaal',\n  //   'посебно',\n  //   'özel',\n  //   '特別'\n  // ],\n  // users: [\n  //   'удзельнік',\n  //   'usuari',\n  //   'uživatel',\n  //   'benutzer',\n  //   'user',\n  //   'usuario',\n  //   'کاربر',\n  //   'käyttäjä',\n  //   'notandi',\n  //   'paydalanıwshı',\n  //   'utilisateur',\n  //   'gebruiker',\n  //   'корисник',\n  //   'kullanıcı',\n  //   '利用者'\n  // ],\n  // sources: [\n  //   //blacklist these headings, as they're not plain-text\n  //   'references',\n  //   'see also',\n  //   'external links',\n  //   'further reading',\n  //   'notes et références',\n  //   'voir aussi',\n  //   'liens externes',\n  //   '参考文献', //references (ja)\n  //   '脚注', //citations (ja)\n  //   '関連項目', //see also (ja)\n  //   '外部リンク' //external links (ja)\n  // ]\n}\n","module.exports = {\n  aa: 'Afar', //Afar\n  ab: 'Аҧсуа', //Abkhazian\n  af: 'Afrikaans', //Afrikaans\n  ak: 'Akana', //Akan\n  als: 'Alemannisch', //Alemannic\n  am: 'አማርኛ', //Amharic\n  an: 'Aragonés', //Aragonese\n  ang: 'Englisc', //Anglo-Saxon\n  ar: 'العربية', //Arabic\n  arc: 'ܣܘܪܬ', //Aramaic\n  as: 'অসমীয়া', //Assamese\n  ast: 'Asturianu', //Asturian\n  av: 'Авар', //Avar\n  ay: 'Aymar', //Aymara\n  az: 'Azərbaycanca', //Azerbaijani\n  ba: 'Башҡорт', //Bashkir\n  bar: 'Boarisch', //Bavarian\n  'bat-smg': 'Žemaitėška', //Samogitian\n  bcl: 'Bikol', //Bikol\n  be: 'Беларуская', //Belarusian\n  'be-x-old': 'ltr', //Belarusian\n  bg: 'Български', //Bulgarian\n  bh: 'भोजपुरी', //Bihari\n  bi: 'Bislama', //Bislama\n  bm: 'Bamanankan', //Bambara\n  bn: 'বাংলা', //Bengali\n  bo: 'བོད་ཡིག', //Tibetan\n  bpy: 'ltr', //Bishnupriya\n  br: 'Brezhoneg', //Breton\n  bs: 'Bosanski', //Bosnian\n  bug: 'ᨅᨔ', //Buginese\n  bxr: 'ltr', //Buriat\n  ca: 'Català', //Catalan\n  cdo: 'Chinese', //Min\n  ce: 'Нохчийн', //Chechen\n  ceb: 'Sinugboanong', //Cebuano\n  ch: 'Chamoru', //Chamorro\n  cho: 'Choctaw', //Choctaw\n  chr: 'ᏣᎳᎩ', //Cherokee\n  chy: 'Tsetsêhestâhese', //Cheyenne\n  co: 'Corsu', //Corsican\n  cr: 'Nehiyaw', //Cree\n  cs: 'Česky', //Czech\n  csb: 'Kaszëbsczi', //Kashubian\n  cu: 'Slavonic', //Old\n  cv: 'Чăваш', //Chuvash\n  cy: 'Cymraeg', //Welsh\n  da: 'Dansk', //Danish\n  de: 'Deutsch', //German\n  diq: 'Zazaki', //Dimli\n  dsb: 'ltr', //Lower\n  dv: 'ދިވެހިބަސް', //Divehi\n  dz: 'ཇོང་ཁ', //Dzongkha\n  ee: 'Ɛʋɛ', //Ewe\n  far: 'فارسی', //Farsi\n  el: 'Ελληνικά', //Greek\n  en: 'English', //English\n  eo: 'Esperanto', //Esperanto\n  es: 'Español', //Spanish\n  et: 'Eesti', //Estonian\n  eu: 'Euskara', //Basque\n  ext: 'Estremeñu', //Extremaduran\n  ff: 'Fulfulde', //Peul\n  fi: 'Suomi', //Finnish\n  'fiu-vro': 'Võro', //Võro\n  fj: 'Na', //Fijian\n  fo: 'Føroyskt', //Faroese\n  fr: 'Français', //French\n  frp: 'Arpitan', //Arpitan\n  fur: 'Furlan', //Friulian\n  fy: 'ltr', //West\n  ga: 'Gaeilge', //Irish\n  gan: 'ltr', //Gan\n  gd: 'ltr', //Scottish\n  gil: 'Taetae', //Gilbertese\n  gl: 'Galego', //Galician\n  gn: \"Avañe'ẽ\", //Guarani\n  got: 'gutisk', //Gothic\n  gu: 'ગુજરાતી', //Gujarati\n  gv: 'Gaelg', //Manx\n  ha: 'هَوُسَ', //Hausa\n  hak: 'ltr', //Hakka\n  haw: 'Hawai`i', //Hawaiian\n  he: 'עברית', //Hebrew\n  hi: 'हिन्दी', //Hindi\n  ho: 'ltr', //Hiri\n  hr: 'Hrvatski', //Croatian\n  ht: 'Krèyol', //Haitian\n  hu: 'Magyar', //Hungarian\n  hy: 'Հայերեն', //Armenian\n  hz: 'Otsiherero', //Herero\n  ia: 'Interlingua', //Interlingua\n  id: 'Bahasa', //Indonesian\n  ie: 'Interlingue', //Interlingue\n  ig: 'Igbo', //Igbo\n  ii: 'ltr', //Sichuan\n  ik: 'Iñupiak', //Inupiak\n  ilo: 'Ilokano', //Ilokano\n  io: 'Ido', //Ido\n  is: 'Íslenska', //Icelandic\n  it: 'Italiano', //Italian\n  iu: 'ᐃᓄᒃᑎᑐᑦ', //Inuktitut\n  ja: '日本語', //Japanese\n  jbo: 'Lojban', //Lojban\n  jv: 'Basa', //Javanese\n  ka: 'ქართული', //Georgian\n  kg: 'KiKongo', //Kongo\n  ki: 'Gĩkũyũ', //Kikuyu\n  kj: 'Kuanyama', //Kuanyama\n  kk: 'Қазақша', //Kazakh\n  kl: 'Kalaallisut', //Greenlandic\n  km: 'ភាសាខ្មែរ', //Cambodian\n  kn: 'ಕನ್ನಡ', //Kannada\n  khw: 'کھوار', //Khowar\n  ko: '한국어', //Korean\n  kr: 'Kanuri', //Kanuri\n  ks: 'कश्मीरी', //Kashmiri\n  ksh: 'Ripoarisch', //Ripuarian\n  ku: 'Kurdî', //Kurdish\n  kv: 'Коми', //Komi\n  kw: 'Kernewek', //Cornish\n  ky: 'Kırgızca', //Kirghiz\n  la: 'Latina', //Latin\n  lad: 'Dzhudezmo', //Ladino\n  lan: 'Leb', //Lango\n  lb: 'Lëtzebuergesch', //Luxembourgish\n  lg: 'Luganda', //Ganda\n  li: 'Limburgs', //Limburgian\n  lij: 'Líguru', //Ligurian\n  lmo: 'Lumbaart', //Lombard\n  ln: 'Lingála', //Lingala\n  lo: 'ລາວ', //Laotian\n  lt: 'Lietuvių', //Lithuanian\n  lv: 'Latviešu', //Latvian\n  'map-bms': 'Basa', //Banyumasan\n  mg: 'Malagasy', //Malagasy\n  man: '官話', //Mandarin\n  mh: 'Kajin', //Marshallese\n  mi: 'Māori', //Maori\n  min: 'Minangkabau', //Minangkabau\n  mk: 'Македонски', //Macedonian\n  ml: 'മലയാളം', //Malayalam\n  mn: 'Монгол', //Mongolian\n  mo: 'Moldovenească', //Moldovan\n  mr: 'मराठी', //Marathi\n  ms: 'Bahasa', //Malay\n  mt: 'bil-Malti', //Maltese\n  mus: 'Muskogee', //Creek\n  my: 'Myanmasa', //Burmese\n  na: 'Dorerin', //Nauruan\n  nah: 'Nahuatl', //Nahuatl\n  nap: 'Nnapulitano', //Neapolitan\n  nd: 'ltr', //North\n  nds: 'Plattdüütsch', //Low German\n  'nds-nl': 'Saxon', //Dutch\n  ne: 'नेपाली', //Nepali\n  new: 'नेपालभाषा', //Newar\n  ng: 'Oshiwambo', //Ndonga\n  nl: 'Nederlands', //Dutch\n  nn: 'ltr', //Norwegian\n  no: 'Norsk', //Norwegian\n  nr: 'ltr', //South\n  nso: 'ltr', //Northern\n  nrm: 'Nouormand', //Norman\n  nv: 'Diné', //Navajo\n  ny: 'Chi-Chewa', //Chichewa\n  oc: 'Occitan', //Occitan\n  oj: 'ᐊᓂᔑᓈᐯᒧᐎᓐ', //Ojibwa\n  om: 'Oromoo', //Oromo\n  or: 'ଓଡ଼ିଆ', //Oriya\n  os: 'Иронау', //Ossetian\n  pa: 'ਪੰਜਾਬੀ', //Panjabi\n  pag: 'Pangasinan', //Pangasinan\n  pam: 'Kapampangan', //Kapampangan\n  pap: 'Papiamentu', //Papiamentu\n  pdc: 'ltr', //Pennsylvania\n  pi: 'Pāli', //Pali\n  pih: 'Norfuk', //Norfolk\n  pl: 'Polski', //Polish\n  pms: 'Piemontèis', //Piedmontese\n  ps: 'پښتو', //Pashto\n  pt: 'Português', //Portuguese\n  qu: 'Runa', //Quechua\n  rm: 'ltr', //Raeto\n  rmy: 'Romani', //Romani\n  rn: 'Kirundi', //Kirundi\n  ro: 'Română', //Romanian\n  'roa-rup': 'Armâneashti', //Aromanian\n  ru: 'Русский', //Russian\n  rw: 'Kinyarwandi', //Rwandi\n  sa: 'संस्कृतम्', //Sanskrit\n  sc: 'Sardu', //Sardinian\n  scn: 'Sicilianu', //Sicilian\n  sco: 'Scots', //Scots\n  sd: 'सिनधि', //Sindhi\n  se: 'ltr', //Northern\n  sg: 'Sängö', //Sango\n  sh: 'Srpskohrvatski', //Serbo-Croatian\n  si: 'සිංහල', //Sinhalese\n  simple: 'ltr', //Simple\n  sk: 'Slovenčina', //Slovak\n  sl: 'Slovenščina', //Slovenian\n  sm: 'Gagana', //Samoan\n  sn: 'chiShona', //Shona\n  so: 'Soomaaliga', //Somalia\n  sq: 'Shqip', //Albanian\n  sr: 'Српски', //Serbian\n  ss: 'SiSwati', //Swati\n  st: 'ltr', //Southern\n  su: 'Basa', //Sundanese\n  sv: 'Svenska', //Swedish\n  sw: 'Kiswahili', //Swahili\n  ta: 'தமிழ்', //Tamil\n  te: 'తెలుగు', //Telugu\n  tet: 'Tetun', //Tetum\n  tg: 'Тоҷикӣ', //Tajik\n  th: 'ไทย', //Thai\n  ti: 'ትግርኛ', //Tigrinya\n  tk: 'Туркмен', //Turkmen\n  tl: 'Tagalog', //Tagalog\n  tlh: 'tlhIngan-Hol', //Klingon\n  tn: 'Setswana', //Tswana\n  to: 'Lea', //Tonga\n  tpi: 'ltr', //Tok\n  tr: 'Türkçe', //Turkish\n  ts: 'Xitsonga', //Tsonga\n  tt: 'Tatarça', //Tatar\n  tum: 'chiTumbuka', //Tumbuka\n  tw: 'Twi', //Twi\n  ty: 'Reo', //Tahitian\n  udm: 'Удмурт', //Udmurt\n  ug: 'Uyƣurqə', //Uyghur\n  uk: 'Українська', //Ukrainian\n  ur: 'اردو', //Urdu\n  uz: 'Ўзбек', //Uzbek\n  ve: 'Tshivenḓa', //Venda\n  vi: 'Việtnam', //Vietnamese\n  vec: 'Vèneto', //Venetian\n  vls: 'ltr', //West\n  vo: 'Volapük', //Volapük\n  wa: 'Walon', //Walloon\n  war: 'Winaray', //Waray-Waray\n  wo: 'Wollof', //Wolof\n  xal: 'Хальмг', //Kalmyk\n  xh: 'isiXhosa', //Xhosa\n  yi: 'ייִדיש', //Yiddish\n  yo: 'Yorùbá', //Yoruba\n  za: 'Cuengh', //Zhuang\n  zh: '中文', //Chinese\n  'zh-classical': 'ltr', //Classical\n  'zh-min-nan': 'Bân-lâm-gú', //Minnan\n  'zh-yue': '粵語', //Cantonese\n  zu: 'isiZulu' //Zulu\n}\n","const languages = require('../_data/languages')\n//some colon symbols are valid links, like `America: That place`\n//so we have to whitelist allowable interwiki links\nconst interwikis = [\n  'wiktionary',\n  'wikinews',\n  'wikibooks',\n  'wikiquote',\n  'wikisource',\n  'wikispecies',\n  'wikiversity',\n  'wikivoyage',\n  'wikipedia',\n  'wikimedia',\n  'foundation',\n  'meta',\n  'metawikipedia',\n  'w',\n  'wikt',\n  'n',\n  'b',\n  'q',\n  's',\n  'v',\n  'voy',\n  'wmf',\n  'c',\n  'm',\n  'mw',\n  'phab',\n  'd'\n]\nlet allowed = interwikis.reduce((h, wik) => {\n  h[wik] = true\n  return h\n}, {})\n//add language prefixes too..\nObject.keys(languages).forEach(k => (allowed[k] = true))\n\n//this is predictably very complicated.\n// https://meta.wikimedia.org/wiki/Help:Interwiki_linking\nconst parseInterwiki = function(obj) {\n  let str = obj.page || ''\n  if (str.indexOf(':') !== -1) {\n    let m = str.match(/^(.*):(.*)/)\n    if (m === null) {\n      return obj\n    }\n    let site = m[1] || ''\n    site = site.toLowerCase()\n    //only allow interwikis to these specific places\n    if (allowed.hasOwnProperty(site) === false) {\n      return obj\n    }\n    obj.wiki = site\n    obj.page = m[2]\n  }\n  return obj\n}\nmodule.exports = parseInterwiki\n","const parse_interwiki = require('../04-sentence/interwiki')\nconst ignore_links = /^:?(category|catégorie|Kategorie|Categoría|Categoria|Categorie|Kategoria|تصنيف|image|file|image|fichier|datei|media):/i\nconst external_link = /\\[(https?|news|ftp|mailto|gopher|irc)(:\\/\\/[^\\]\\| ]{4,1500})([\\| ].*?)?\\]/g\nconst link_reg = /\\[\\[(.{0,160}?)\\]\\]([a-z]+)?(\\w{0,10})/gi //allow dangling suffixes - \"[[flanders]]s\"\n\nconst external_links = function(links, str) {\n  str.replace(external_link, function(raw, protocol, link, text) {\n    text = text || ''\n    links.push({\n      type: 'external',\n      site: protocol + link,\n      text: text.trim(),\n      raw: raw\n    })\n    return text\n  })\n  return links\n}\n\nconst internal_links = function(links, str) {\n  //regular links\n  str.replace(link_reg, function(raw, s, suffix) {\n    let txt = null\n    //make a copy of original\n    let link = s\n    if (s.match(/\\|/)) {\n      //replacement link [[link|text]]\n      s = s.replace(/\\[\\[(.{2,100}?)\\]\\](\\w{0,10})/g, '$1$2') //remove ['s and keep suffix\n      link = s.replace(/(.{2,100})\\|.{0,200}/, '$1') //replaced links\n      txt = s.replace(/.{2,100}?\\|/, '')\n      //handle funky case of [[toronto|]]\n      if (txt === null && link.match(/\\|$/)) {\n        link = link.replace(/\\|$/, '')\n        txt = link\n      }\n    }\n    //kill off non-wikipedia namespaces\n    if (link.match(ignore_links)) {\n      return s\n    }\n    //kill off just these just-anchor links [[#history]]\n    // if (link.match(/^#/i)) {\n    //   console.log(s)\n    //   return s\n    // }\n    //remove anchors from end [[toronto#history]]\n    let obj = {\n      page: link,\n      raw: raw\n    }\n    obj.page = obj.page.replace(/#(.*)/, (a, b) => {\n      obj.anchor = b\n      return ''\n    })\n    //grab any fr:Paris parts\n    obj = parse_interwiki(obj)\n    if (obj.wiki) {\n      obj.type = 'interwiki'\n    }\n    if (txt !== null && txt !== obj.page) {\n      obj.text = txt\n    }\n    //finally, support [[link]]'s apostrophe\n    if (suffix) {\n      obj.text = obj.text || obj.page\n      obj.text += suffix.trim()\n    }\n    //titlecase it, if necessary\n    if (obj.page && /^[A-Z]/.test(obj.page) === false) {\n      if (!obj.text) {\n        obj.text = obj.page\n      }\n      obj.page = obj.page\n    }\n    links.push(obj)\n    return s\n  })\n  return links\n}\n\n//grab an array of internal links in the text\nconst parse_links = function(str) {\n  let links = []\n  //first, parse external links\n  links = external_links(links, str)\n  //internal links\n  links = internal_links(links, str)\n  if (links.length === 0) {\n    return undefined\n  }\n  return links\n}\nmodule.exports = parse_links\n","const i18n = require('../_data/i18n')\nconst parseLink = require('../link/parse')\n//pulls target link out of redirect page\nconst REDIRECT_REGEX = new RegExp(\n  '^[ \\n\\t]*?#(' + i18n.redirects.join('|') + ') *?(\\\\[\\\\[.{2,180}?\\\\]\\\\])',\n  'i'\n)\n\nconst isRedirect = function(wiki) {\n  //too long to be a redirect?\n  if (!wiki || wiki.length > 500) {\n    return false\n  }\n  return REDIRECT_REGEX.test(wiki)\n}\n\nconst parse = function(wiki) {\n  let m = wiki.match(REDIRECT_REGEX)\n  if (m && m[2]) {\n    let links = parseLink(m[2]) || []\n    return links[0]\n  }\n  return {}\n}\n\nmodule.exports = {\n  isRedirect: isRedirect,\n  parse: parse\n}\n","const i18n = require('../_data/i18n')\n\nconst getReg = function(templates) {\n  const allowedCharacters = '(\\\\|[a-z, =]*?)*?'\n  return new RegExp('\\\\{\\\\{ ?(' + templates.join('|') + ')' + allowedCharacters + ' ?\\\\}\\\\}', 'i')\n}\n\nconst templateReg = getReg(i18n.disambig)\n\n//special disambig-templates en-wikipedia uses\nlet d = ' disambiguation'\nconst english = [\n  'airport',\n  'biology' + d,\n  'call sign' + d,\n  'caselaw' + d,\n  'chinese title' + d,\n  'dab',\n  'dab',\n  'disamb',\n  'disambig',\n  'disambiguation cleanup',\n  'genus' + d,\n  'geodis',\n  'hndis',\n  'hospital' + d,\n  'lake index',\n  'letter' + d,\n  'letter-number combination' + d,\n  'mathematical' + d,\n  'military unit' + d,\n  'mountainindex',\n  'number' + d,\n  'phonetics' + d,\n  'place name' + d,\n  'place name' + d,\n  'portal' + d,\n  'road' + d,\n  'school' + d,\n  'setindex',\n  'ship index',\n  'species latin name abbreviation' + d,\n  'species latin name' + d,\n  'split dab',\n  'sport index',\n  'station' + d,\n  'synagogue' + d,\n  'taxonomic authority' + d,\n  'taxonomy' + d,\n  'wp disambig'\n]\nconst enDisambigs = getReg(english)\n\nconst isDisambig = function(wiki) {\n  //test for {{disambiguation}} templates\n  if (templateReg.test(wiki) === true) {\n    return true\n  }\n  //more english-centric disambiguation templates\n\n  //{{hndis}}, etc\n  if (enDisambigs.test(wiki) === true) {\n    return true\n  }\n\n  //try 'may refer to' on first line for en-wiki?\n  // let firstLine = wiki.match(/^.+?\\n/);\n  // if (firstLine !== null && firstLine[0]) {\n  //   if (/ may refer to/i.test(firstLine) === true) {\n  //     return true;\n  //   }\n  // }\n  return false\n}\n\nmodule.exports = {\n  isDisambig: isDisambig\n}\n","//okay, i know you're not supposed to regex html, but...\n//https://en.wikipedia.org/wiki/Help:HTML_in_wikitext\n\n//these are things we throw-away\n//these will mess-up if they're nested, but they're not usually.\nconst ignore = [\n  'table',\n  'code',\n  'score',\n  'data',\n  'categorytree',\n  'charinsert',\n  'hiero',\n  'imagemap',\n  'inputbox',\n  'nowiki',\n  'poem',\n  'references',\n  'source',\n  'syntaxhighlight',\n  'timeline'\n]\nconst openTag = `< ?(${ignore.join('|')}) ?[^>]{0,200}?>`\nconst closeTag = `< ?/ ?(${ignore.join('|')}) ?>`\nconst anyChar = '\\\\s\\\\S' //including newline\nconst noThanks = new RegExp(`${openTag}[${anyChar}]+?${closeTag}`, 'ig')\n\nconst kill_xml = function(wiki) {\n  //(<ref> tags are parsed in Section class) - luckily, refs can't be recursive.\n  //types of html/xml that we want to trash completely.\n  wiki = wiki.replace(noThanks, ' ')\n  //some xml-like fragments we can also kill\n  wiki = wiki.replace(/ ?< ?(span|div|table|data) [a-zA-Z0-9=%\\.#:;'\" ]{2,100}\\/? ?> ?/g, ' ') //<ref name=\"asd\">\n  //only kill ref tags if they are selfclosing\n  wiki = wiki.replace(/ ?< ?(ref) [a-zA-Z0-9=\" ]{2,100}\\/ ?> ?/g, ' ') //<ref name=\"asd\"/>\n  //some formatting xml, we'll keep their insides though\n  wiki = wiki.replace(/ ?<[ \\/]?(p|sub|sup|span|nowiki|div|table|br|tr|td|th|pre|pre2|hr)[ \\/]?> ?/g, ' ') //<sub>, </sub>\n  wiki = wiki.replace(/ ?<[ \\/]?(abbr|bdi|bdo|blockquote|cite|del|dfn|em|i|ins|kbd|mark|q|s|small)[ \\/]?> ?/g, ' ') //<abbr>, </abbr>\n  wiki = wiki.replace(/ ?<[ \\/]?h[0-9][ \\/]?> ?/g, ' ') //<h2>, </h2>\n  wiki = wiki.replace(/ ?< ?br ?\\/> ?/g, '\\n') //<br />\n  return wiki.trim()\n}\nmodule.exports = kill_xml\n","const kill_xml = require('./kill_xml')\n\n//this mostly-formatting stuff can be cleaned-up first, to make life easier\nfunction preProcess(doc) {\n  let wiki = doc.wiki\n  //remove comments\n  wiki = wiki.replace(/<!--[\\s\\S]{0,2000}?-->/g, '')\n  wiki = wiki.replace(/__(NOTOC|NOEDITSECTION|FORCETOC|TOC)__/gi, '')\n  //signitures\n  wiki = wiki.replace(/~~{1,3}/g, '')\n  //windows newlines\n  wiki = wiki.replace(/\\r/g, '')\n  //japanese periods - '。'\n  wiki = wiki.replace(/\\u3002/g, '. ')\n  //horizontal rule\n  wiki = wiki.replace(/----/g, '')\n  //formatting for templates-in-templates...\n  wiki = wiki.replace(/\\{\\{\\}\\}/g, ' – ')\n  wiki = wiki.replace(/\\{\\{\\\\\\}\\}/g, ' / ')\n  //space\n  wiki = wiki.replace(/&nbsp;/g, ' ')\n  //give it the inglorious send-off it deserves..\n  wiki = kill_xml(wiki)\n  //({{template}},{{template}}) leaves empty parentheses\n  wiki = wiki.replace(/\\([,;: ]+?\\)/g, '')\n  //these templates just screw things up, too\n  wiki = wiki.replace(/{{(baseball|basketball) (primary|secondary) (style|color).*?\\}\\}/i, '')\n  doc.wiki = wiki\n}\nmodule.exports = preProcess\n","// dumpster-dive throws everything into mongodb  - github.com/spencermountain/dumpster-dive\n// mongo has some opinions about what characters are allowed as keys and ids.\n//https://stackoverflow.com/questions/12397118/mongodb-dot-in-key-name/30254815#30254815\nconst specialChar = /[\\\\\\.$]/\n\nconst encodeStr = function(str) {\n  if (typeof str !== 'string') {\n    str = ''\n  }\n  str = str.replace(/\\\\/g, '\\\\\\\\')\n  str = str.replace(/^\\$/, '\\\\u0024')\n  str = str.replace(/\\./g, '\\\\u002e')\n  return str\n}\n\nconst encodeObj = function(obj = {}) {\n  let keys = Object.keys(obj)\n  for (let i = 0; i < keys.length; i += 1) {\n    if (specialChar.test(keys[i]) === true) {\n      let str = encodeStr(keys[i])\n      if (str !== keys[i]) {\n        obj[str] = obj[keys[i]]\n        delete obj[keys[i]]\n      }\n    }\n  }\n  return obj\n}\n\nmodule.exports = {\n  encodeObj: encodeObj\n}\n","const setDefaults = require('../_lib/setDefaults')\nconst encode = require('../_lib/encode')\n\nconst defaults = {\n  headers: true,\n  depth: true,\n  paragraphs: true,\n  images: true,\n  tables: true,\n  templates: true,\n  infoboxes: true,\n  lists: true,\n  references: true\n}\n//\nconst toJSON = function(section, options) {\n  options = setDefaults(options, defaults)\n  let data = {}\n  if (options.headers === true) {\n    data.title = section.title()\n  }\n  if (options.depth === true) {\n    data.depth = section.depth\n  }\n  //these return objects\n  if (options.paragraphs === true) {\n    let paragraphs = section.paragraphs().map(p => p.json(options))\n    if (paragraphs.length > 0) {\n      data.paragraphs = paragraphs\n    }\n  }\n  //image json data\n  if (options.images === true) {\n    let images = section.images().map(img => img.json(options))\n    if (images.length > 0) {\n      data.images = images\n    }\n  }\n  //table json data\n  if (options.tables === true) {\n    let tables = section.tables().map(t => t.json(options))\n    if (tables.length > 0) {\n      data.tables = tables\n    }\n  }\n  //template json data\n  if (options.templates === true) {\n    let templates = section.templates()\n    if (templates.length > 0) {\n      data.templates = templates\n      //encode them, for mongodb\n      if (options.encode === true) {\n        data.templates.forEach(t => encode.encodeObj(t))\n      }\n    }\n  }\n  //infobox json data\n  if (options.infoboxes === true) {\n    let infoboxes = section.infoboxes().map(i => i.json(options))\n    if (infoboxes.length > 0) {\n      data.infoboxes = infoboxes\n    }\n  }\n  //list json data\n  if (options.lists === true) {\n    let lists = section.lists().map(list => list.json(options))\n    if (lists.length > 0) {\n      data.lists = lists\n    }\n  }\n  //list references - default true\n  if (options.references === true || options.citations === true) {\n    let references = section.references().map(ref => ref.json(options))\n    if (references.length > 0) {\n      data.references = references\n    }\n  }\n  //default off\n  if (options.sentences === true) {\n    data.sentences = section.sentences().map(s => s.json(options))\n  }\n  return data\n}\nmodule.exports = toJSON\n","const toJSON = require('./toJson')\nconst setDefaults = require('../_lib/setDefaults')\n\nconst defaults = {\n  tables: true,\n  references: true,\n  paragraphs: true,\n  templates: true,\n  infoboxes: true\n}\n\n//the stuff between headings - 'History' section for example\nconst Section = function(data) {\n  this.depth = data.depth\n  this.doc = null\n  this._title = data.title || ''\n  Object.defineProperty(this, 'doc', {\n    enumerable: false,\n    value: null\n  })\n  data.templates = data.templates || []\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  title: function() {\n    return this._title || ''\n  },\n  index: function() {\n    if (!this.doc) {\n      return null\n    }\n    let index = this.doc.sections().indexOf(this)\n    if (index === -1) {\n      return null\n    }\n    return index\n  },\n  indentation: function() {\n    return this.depth\n  },\n  sentences: function(n) {\n    let arr = this.paragraphs().reduce((list, p) => {\n      return list.concat(p.sentences())\n    }, [])\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr || []\n  },\n  paragraphs: function(n) {\n    let arr = this.data.paragraphs || []\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr || []\n  },\n  paragraph: function(n) {\n    let arr = this.data.paragraphs || []\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr[0]\n  },\n  links: function(n) {\n    let arr = []\n    this.infoboxes().forEach(templ => {\n      templ.links(n).forEach(link => arr.push(link))\n    })\n    this.sentences().forEach(s => {\n      s.links(n).forEach(link => arr.push(link))\n    })\n    this.tables().forEach(t => {\n      t.links(n).forEach(link => arr.push(link))\n    })\n    this.lists().forEach(list => {\n      list.links(n).forEach(link => arr.push(link))\n    })\n    if (typeof n === 'number') {\n      return arr[n]\n    } else if (typeof n === 'string') {\n      //grab a link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1) //titlecase it\n      let link = arr.find(o => o.page() === n)\n      return link === undefined ? [] : [link]\n    }\n    return arr\n  },\n  tables: function(clue) {\n    let arr = this.data.tables || []\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr\n  },\n  templates: function(clue) {\n    let arr = this.data.templates || []\n    arr = arr.map(t => t.json())\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    if (typeof clue === 'string') {\n      clue = clue.toLowerCase()\n      return arr.filter(o => o.template === clue || o.name === clue)\n    }\n    return arr\n  },\n  infoboxes: function(clue) {\n    let arr = this.data.infoboxes || []\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr\n  },\n  coordinates: function(clue) {\n    let arr = [].concat(this.templates('coord'), this.templates('coor'))\n    if (typeof clue === 'number') {\n      if (!arr[clue]) {\n        return []\n      }\n      return arr[clue]\n    }\n    return arr\n  },\n  lists: function(clue) {\n    let arr = []\n    this.paragraphs().forEach(p => {\n      arr = arr.concat(p.lists())\n    })\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr\n  },\n  interwiki(num) {\n    let arr = []\n    this.paragraphs().forEach(p => {\n      arr = arr.concat(p.interwiki())\n    })\n    if (typeof num === 'number') {\n      return arr[num]\n    }\n    return arr || []\n  },\n  images: function(clue) {\n    let arr = []\n    this.paragraphs().forEach(p => {\n      arr = arr.concat(p.images())\n    })\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr || []\n  },\n  references: function(clue) {\n    let arr = this.data.references || []\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr\n  },\n\n  //transformations\n  remove: function() {\n    if (!this.doc) {\n      return null\n    }\n    let bads = {}\n    bads[this.title()] = true\n    //remove children too\n    this.children().forEach(sec => (bads[sec.title()] = true))\n    let arr = this.doc.data.sections\n    arr = arr.filter(sec => bads.hasOwnProperty(sec.title()) !== true)\n    this.doc.data.sections = arr\n    return this.doc\n  },\n\n  //move-around sections like in jquery\n  nextSibling: function() {\n    if (!this.doc) {\n      return null\n    }\n    let sections = this.doc.sections()\n    let index = this.index()\n    for (let i = index + 1; i < sections.length; i += 1) {\n      if (sections[i].depth < this.depth) {\n        return null\n      }\n      if (sections[i].depth === this.depth) {\n        return sections[i]\n      }\n    }\n    return null\n  },\n  lastSibling: function() {\n    if (!this.doc) {\n      return null\n    }\n    let sections = this.doc.sections()\n    let index = this.index()\n    return sections[index - 1] || null\n  },\n  children: function(n) {\n    if (!this.doc) {\n      return null\n    }\n\n    let sections = this.doc.sections()\n    let index = this.index()\n    let children = []\n    //(immediately preceding sections with higher depth)\n    if (sections[index + 1] && sections[index + 1].depth > this.depth) {\n      for (let i = index + 1; i < sections.length; i += 1) {\n        if (sections[i].depth > this.depth) {\n          children.push(sections[i])\n        } else {\n          break\n        }\n      }\n    }\n    if (typeof n === 'string') {\n      n = n.toLowerCase()\n      return children.find(s => s.title().toLowerCase() === n)\n    }\n    if (typeof n === 'number') {\n      return children[n]\n    }\n    return children\n  },\n  parent: function() {\n    if (!this.doc) {\n      return null\n    }\n    let sections = this.doc.sections()\n    let index = this.index()\n    for (let i = index; i >= 0; i -= 1) {\n      if (sections[i] && sections[i].depth < this.depth) {\n        return sections[i]\n      }\n    }\n    return null\n  },\n  text: function(options) {\n    options = setDefaults(options, defaults)\n    let pList = this.paragraphs()\n    pList = pList.map(p => p.text(options))\n    return pList.join('\\n\\n')\n  },\n  json: function(options) {\n    options = setDefaults(options, defaults)\n    return toJSON(this, options)\n  }\n}\n//aliases\nmethods.next = methods.nextSibling\nmethods.last = methods.lastSibling\nmethods.previousSibling = methods.lastSibling\nmethods.previous = methods.lastSibling\nmethods.citations = methods.references\nmethods.sections = methods.children\nObject.keys(methods).forEach(k => {\n  Section.prototype[k] = methods[k]\n})\n\nmodule.exports = Section\n","module.exports = {\n  capitalise: function(str) {\n    if (str && typeof str === 'string') {\n      return str.charAt(0).toUpperCase() + str.slice(1)\n    }\n    return ''\n  },\n  trim_whitespace: function(str) {\n    if (str && typeof str === 'string') {\n      str = str.replace(/^\\s\\s*/, '')\n      str = str.replace(/\\s\\s*$/, '')\n      str = str.replace(/ {2}/, ' ')\n      str = str.replace(/\\s, /, ', ')\n      return str\n    }\n    return ''\n  }\n}\n","module.exports = {\n  acronym: 'https://www.acronymfinder.com/$1.html',\n  advisory: 'https://advisory.wikimedia.org/wiki/$1',\n  advogato: 'http://www.advogato.org/$1',\n  aew: 'https://wiki.arabeyes.org/$1',\n  appropedia: 'http://www.appropedia.org/$1',\n  aquariumwiki: 'https://www.theaquariumwiki.com/$1',\n  arborwiki: 'https://localwiki.org/ann-arbor/$1',\n  arxiv: 'https://arxiv.org/abs/$1',\n  atmwiki: 'http://www.otterstedt.de/wiki/index.php/$1',\n  baden: 'http://www.stadtwiki-baden-baden.de/wiki/$1/',\n  battlestarwiki: 'http://en.battlestarwiki.org/wiki/$1',\n  bcnbio: 'http://historiapolitica.bcn.cl/resenas_parlamentarias/wiki/$1',\n  beacha: 'http://www.beachapedia.org/$1',\n  betawiki: 'https://translatewiki.net/wiki/$1',\n  bibcode: 'http://adsabs.harvard.edu/abs/$1',\n  bibliowiki: 'https://wikilivres.org/wiki/$1',\n  bluwiki: 'http://bluwiki.com/go/$1',\n  blw: 'http://britainloveswikipedia.org/wiki/$1',\n  botwiki: 'http://botwiki.sno.cc/wiki/$1',\n  boxrec: 'http://www.boxrec.com/media/index.php?$1',\n  brickwiki: 'http://www.brickwiki.info/wiki/$1',\n  bugzilla: 'https://bugzilla.wikimedia.org/show_bug.cgi?id=$1',\n  bulba: 'https://bulbapedia.bulbagarden.net/wiki/$1',\n  c: 'https://commons.wikimedia.org/wiki/$1',\n  c2: 'http://c2.com/cgi/wiki?$1',\n  c2find: 'http://c2.com/cgi/wiki?FindPage&value=$1',\n  cache: 'https://www.google.com/search?q=cache:$1',\n  ĉej: 'http://esperanto.blahus.cz/cxej/vikio/index.php/$1',\n  cellwiki: 'http://cell.wikia.com/wiki/$1',\n  centralwikia: 'http://community.wikia.com/wiki/$1',\n  chej: 'http://esperanto.blahus.cz/cxej/vikio/index.php/$1',\n  choralwiki: 'http://www.cpdl.org/wiki/index.php/$1',\n  citizendium: 'http://en.citizendium.org/wiki/$1',\n  ckwiss: 'http://www.ck-wissen.de/ckwiki/index.php?title=$1',\n  comixpedia: 'http://www.comixpedia.org/index.php?title=$1',\n  commons: 'https://commons.wikimedia.org/wiki/$1',\n  communityscheme: 'http://community.schemewiki.org/?c=s&key=$1',\n  communitywiki: 'https://communitywiki.org/$1',\n  comune: 'http://rete.comuni-italiani.it/wiki/$1',\n  creativecommons: 'https://creativecommons.org/licenses/$1',\n  creativecommonswiki: 'https://wiki.creativecommons.org/$1',\n  cxej: 'http://esperanto.blahus.cz/cxej/vikio/index.php/$1',\n  dcc: 'http://www.dccwiki.com/$1',\n  dcdatabase: 'http://dc.wikia.com/$1',\n  dcma: 'http://christian-morgenstern.de/dcma/index.php?title=$1',\n  debian: 'https://wiki.debian.org/$1',\n  delicious: 'https://www.delicious.com/tag/$1',\n  devmo: 'https://developer.mozilla.org/en/docs/$1',\n  dictionary: 'http://www.dict.org/bin/Dict?Database=*&Form=Dict1&Strategy=*&Query=$1',\n  dict: 'http://www.dict.org/bin/Dict?Database=*&Form=Dict1&Strategy=*&Query=$1',\n  disinfopedia: 'https://sourcewatch.org/index.php/$1',\n  distributedproofreaders: 'http://www.pgdp.net/wiki/$1',\n  distributedproofreadersca: 'http://www.pgdpcanada.net/wiki/index.php/$1',\n  dmoz: 'https://curlie.org/$1',\n  dmozs: 'https://curlie.org/search?q=$1',\n  doi: 'https://doi.org/$1',\n  donate: 'https://donate.wikimedia.org/wiki/$1',\n  doom_wiki: 'http://doom.wikia.com/wiki/$1',\n  download: 'https://releases.wikimedia.org/$1',\n  dbdump: 'https://dumps.wikimedia.org/$1/latest/',\n  dpd: 'http://lema.rae.es/dpd/?key=$1',\n  drae: 'http://dle.rae.es/?w=$1',\n  dreamhost: 'http://wiki.dreamhost.com/index.php/$1',\n  drumcorpswiki: 'http://www.drumcorpswiki.com/index.php/$1',\n  dwjwiki: 'http://www.suberic.net/cgi-bin/dwj/wiki.cgi?$1',\n  eĉei: 'http://www.ikso.net/cgi-bin/wiki.pl?$1',\n  ecoreality: 'http://www.EcoReality.org/wiki/$1',\n  ecxei: 'http://www.ikso.net/cgi-bin/wiki.pl?$1',\n  elibre: 'http://enciclopedia.us.es/index.php/$1',\n  emacswiki: 'https://www.emacswiki.org/emacs?$1',\n  encyc: 'http://encyc.org/wiki/$1',\n  energiewiki: 'http://www.netzwerk-energieberater.de/wiki/index.php/$1',\n  englyphwiki: 'http://en.glyphwiki.org/wiki/$1',\n  enkol: 'http://enkol.pl/$1',\n  eokulturcentro: 'http://esperanto.toulouse.free.fr/nova/wikini/wakka.php?wiki=$1',\n  esolang: 'http://esolangs.org/wiki/$1',\n  etherpad: 'https://etherpad.wikimedia.org/$1',\n  ethnologue: 'https://www.ethnologue.com/language/$1',\n  ethnologuefamily: 'https://www.ethnologue.com/show_family.asp?subid=$1',\n  evowiki: 'http://wiki.cotch.net/index.php/$1',\n  exotica: 'https://www.exotica.org.uk/wiki/$1',\n  fanimutationwiki: 'http://wiki.animutationportal.com/index.php/$1',\n  fedora: 'https://fedoraproject.org/wiki/$1',\n  finalfantasy: 'http://finalfantasy.wikia.com/wiki/$1',\n  finnix: 'https://www.finnix.org/$1',\n  flickruser: 'https://www.flickr.com/people/$1',\n  flickrphoto: 'https://www.flickr.com/photo.gne?id=$1',\n  floralwiki: 'http://www.floralwiki.co.uk/wiki/$1',\n  foldoc: 'http://foldoc.org/$1',\n  foundation: 'https://foundation.wikimedia.org/wiki/$1',\n  foundationsite: 'https://wikimediafoundation.org/$1',\n  foxwiki: 'http://fox.wikis.com/wc.dll?Wiki~$1',\n  freebio: 'http://freebiology.org/wiki/$1',\n  freebsdman: 'https://www.FreeBSD.org/cgi/man.cgi?apropos=1&query=$1',\n  freeculturewiki: 'http://wiki.freeculture.org/index.php/$1',\n  freedomdefined: 'https://freedomdefined.org/$1',\n  freefeel: 'http://freefeel.org/wiki/$1',\n  freekiwiki: 'http://wiki.freegeek.org/index.php/$1',\n  freenode: 'irc://irc.freenode.net/$1',\n  freesoft: 'https://directory.fsf.org/wiki/$1',\n  ganfyd: 'http://ganfyd.org/index.php?title=$1',\n  gardenology: 'http://www.gardenology.org/wiki/$1',\n  gausswiki: 'http://gauss.ffii.org/$1',\n  gentoo: 'https://wiki.gentoo.org/wiki/$1',\n  genwiki: 'http://wiki.genealogy.net/index.php/$1',\n  gerrit: 'https://gerrit.wikimedia.org/r/$1',\n  git: 'https://gerrit.wikimedia.org/g/$1',\n  google: 'https://www.google.com/search?q=$1',\n  googledefine: 'https://www.google.com/search?q=define:$1',\n  googlegroups: 'https://groups.google.com/groups?q=$1',\n  guildwarswiki: 'https://wiki.guildwars.com/wiki/$1',\n  guildwiki: 'http://guildwars.wikia.com/wiki/$1',\n  guc: 'https://tools.wmflabs.org/guc/?user=$1',\n  gucprefix: 'https://tools.wmflabs.org/guc/?isPrefixPattern=1&src=rc&user=$1',\n  gutenberg: 'http://www.gutenberg.org/etext/$1',\n  gutenbergwiki: 'http://www.gutenberg.org/wiki/$1',\n  hackerspaces: 'http://hackerspaces.org/wiki/$1',\n  h2wiki: 'http://halowiki.net/p/$1',\n  hammondwiki: 'http://www.dairiki.org/HammondWiki/index.php3?$1',\n  hdl: 'http://hdl.handle.net/$1',\n  heraldik: 'https://heraldik-wiki.de/wiki/$1',\n  heroeswiki: 'http://heroeswiki.com/$1',\n  horizonlabs: 'https://horizon.wikimedia.org/$1',\n  hrwiki: 'http://www.hrwiki.org/index.php/$1',\n  hrfwiki: 'http://fanstuff.hrwiki.org/index.php/$1',\n  hupwiki: 'http://wiki.hup.hu/index.php/$1',\n  iarchive: 'https://archive.org/details/$1',\n  imdbname: 'https://www.imdb.com/name/nm$1/',\n  imdbtitle: 'https://www.imdb.com/title/tt$1/',\n  imdbcompany: 'https://www.imdb.com/company/co$1/',\n  imdbcharacter: 'https://www.imdb.com/character/ch$1/',\n  incubator: 'https://incubator.wikimedia.org/wiki/$1',\n  infosecpedia: 'http://infosecpedia.org/wiki/$1',\n  infosphere: 'https://theinfosphere.org/$1',\n  irc: 'irc://irc.freenode.net/$1',\n  ircs: 'ircs://irc.freenode.net/$1',\n  ircrc: 'irc://irc.wikimedia.org/$1',\n  rcirc: 'irc://irc.wikimedia.org/$1',\n  'iso639-3': 'https://iso639-3.sil.org/code/$1',\n  issn: 'https://www.worldcat.org/issn/$1',\n  iuridictum: 'https://iuridictum.pecina.cz/w/$1',\n  jaglyphwiki: 'http://glyphwiki.org/wiki/$1',\n  jefo: 'http://esperanto-jeunes.org/wiki/$1',\n  jerseydatabase: 'http://jerseydatabase.com/wiki.php?id=$1',\n  jira: 'https://jira.toolserver.org/browse/$1',\n  jspwiki: 'http://www.ecyrd.com/JSPWiki/Wiki.jsp?page=$1',\n  jstor: 'http://www.jstor.org/journals/$1',\n  kamelo: 'http://kamelopedia.mormo.org/index.php/$1',\n  karlsruhe: 'https://ka.stadtwiki.net/$1',\n  kinowiki: 'http://kino.skripov.com/index.php/$1',\n  komicawiki: 'https://wiki.komica.org/?$1',\n  kontuwiki: 'http://kontu.wiki/$1',\n  wikitech: 'https://wikitech.wikimedia.org/wiki/$1',\n  libreplanet: 'https://libreplanet.org/wiki/$1',\n  linguistlist: 'https://linguistlist.org/forms/langs/LLDescription.cfm?code=$1',\n  linuxwiki: 'http://www.linuxwiki.de/$1',\n  linuxwikide: 'http://www.linuxwiki.de/$1',\n  liswiki: 'https://liswiki.org/wiki/$1',\n  literateprograms: 'http://en.literateprograms.org/$1',\n  livepedia: 'http://www.livepedia.gr/index.php?title=$1',\n  localwiki: 'https://localwiki.org/$1',\n  lojban: 'https://mw.lojban.org/papri/$1',\n  lostpedia: 'http://lostpedia.wikia.com/wiki/$1',\n  lqwiki: 'http://wiki.linuxquestions.org/wiki/$1',\n  luxo: 'https://tools.wmflabs.org/guc/?user=$1',\n  mail: 'https://lists.wikimedia.org/mailman/listinfo/$1',\n  mailarchive: 'https://lists.wikimedia.org/pipermail/$1',\n  mariowiki: 'https://www.mariowiki.com/$1',\n  marveldatabase: 'http://www.marveldatabase.com/wiki/index.php/$1',\n  meatball: 'http://meatballwiki.org/wiki/$1',\n  mw: 'https://www.mediawiki.org/wiki/$1',\n  mediazilla: 'https://bugzilla.wikimedia.org/$1',\n  memoryalpha: 'https://memory-alpha.fandom.com/wiki/$1',\n  metawiki: 'https://meta.wikimedia.org/wiki/$1',\n  metawikimedia: 'https://meta.wikimedia.org/wiki/$1',\n  metawikipedia: 'https://meta.wikimedia.org/wiki/$1',\n  mineralienatlas: 'https://www.mineralienatlas.de/lexikon/index.php/$1',\n  moinmoin: 'https://moinmo.in/$1',\n  monstropedia: 'http://www.monstropedia.org/?title=$1',\n  mosapedia: 'http://mosapedia.de/wiki/index.php/$1',\n  mozcom: 'http://mozilla.wikia.com/wiki/$1',\n  mozillawiki: 'https://wiki.mozilla.org/$1',\n  mozillazinekb: 'http://kb.mozillazine.org/$1',\n  musicbrainz: 'http://musicbrainz.org/doc/$1',\n  mediawikiwiki: 'https://www.mediawiki.org/wiki/$1',\n  mwod: 'https://www.merriam-webster.com/dictionary/$1',\n  mwot: 'https://www.merriam-webster.com/thesaurus/$1',\n  nkcells: 'http://www.nkcells.info/index.php?title=$1',\n  nara: 'https://catalog.archives.gov/id/$1',\n  nosmoke: 'http://no-smok.net/nsmk/$1',\n  nost: 'https://nostalgia.wikipedia.org/wiki/$1',\n  nostalgia: 'https://nostalgia.wikipedia.org/wiki/$1',\n  oeis: 'https://oeis.org/$1',\n  oldwikisource: 'https://wikisource.org/wiki/$1',\n  olpc: 'http://wiki.laptop.org/go/$1',\n  omegawiki: 'http://www.omegawiki.org/Expression:$1',\n  onelook: 'https://www.onelook.com/?ls=b&w=$1',\n  openlibrary: 'http://openlibrary.org/$1',\n  openstreetmap: 'https://wiki.openstreetmap.org/wiki/$1',\n  openwetware: 'https://openwetware.org/wiki/$1',\n  opera7wiki: 'http://operawiki.info/$1',\n  organicdesign: 'https://www.organicdesign.co.nz/$1',\n  orthodoxwiki: 'https://orthodoxwiki.org/$1',\n  osmwiki: 'https://wiki.openstreetmap.org/wiki/$1',\n  otrs: 'https://ticket.wikimedia.org/otrs/index.pl?Action=AgentTicketZoom&TicketID=$1',\n  otrswiki: 'https://otrs-wiki.wikimedia.org/wiki/$1',\n  ourmedia: 'https://www.socialtext.net/ourmedia/index.cgi?$1',\n  outreach: 'https://outreach.wikimedia.org/wiki/$1',\n  outreachwiki: 'https://outreach.wikimedia.org/wiki/$1',\n  owasp: 'https://www.owasp.org/index.php/$1',\n  panawiki: 'http://wiki.alairelibre.net/index.php?title=$1',\n  patwiki: 'http://gauss.ffii.org/$1',\n  personaltelco: 'https://personaltelco.net/wiki/$1',\n  petscan: 'https://petscan.wmflabs.org/?psid=$1',\n  phab: 'https://phabricator.wikimedia.org/$1',\n  phabricator: 'https://phabricator.wikimedia.org/$1',\n  phwiki: 'http://www.pocketheaven.com/ph/wiki/index.php?title=$1',\n  phpwiki: 'http://phpwiki.sourceforge.net/phpwiki/index.php?$1',\n  planetmath: 'http://planetmath.org/node/$1',\n  pmeg: 'http://www.bertilow.com/pmeg/$1',\n  pmid: 'https://www.ncbi.nlm.nih.gov/pubmed/$1?dopt=Abstract',\n  pokewiki: 'http://pokewiki.de/$1',\n  pokéwiki: 'http://pokewiki.de/$1',\n  policy: 'https://policy.wikimedia.org/$1',\n  proofwiki: 'https://www.proofwiki.org/wiki/$1',\n  pyrev: 'https://www.mediawiki.org/wiki/Special:Code/pywikipedia/$1',\n  pythoninfo: 'https://wiki.python.org/moin/$1',\n  pythonwiki: 'http://www.pythonwiki.de/$1',\n  pywiki: 'http://c2.com/cgi/wiki?$1',\n  psycle: 'http://psycle.sourceforge.net/wiki/$1',\n  quality: 'https://quality.wikimedia.org/wiki/$1',\n  quarry: 'https://quarry.wmflabs.org/$1',\n  regiowiki: 'https://regiowiki.at/wiki/$1',\n  rev: 'https://www.mediawiki.org/wiki/Special:Code/MediaWiki/$1',\n  revo: 'http://purl.org/NET/voko/revo/art/$1.html',\n  rfc: 'https://tools.ietf.org/html/rfc$1',\n  rheinneckar: 'http://rhein-neckar-wiki.de/$1',\n  robowiki: 'http://robowiki.net/?$1',\n  rodovid: 'http://en.rodovid.org/wk/$1',\n  reuterswiki: 'http://glossary.reuters.com/index.php/$1',\n  rowiki: 'http://wiki.rennkuckuck.de/index.php/$1',\n  rt: 'https://rt.wikimedia.org/Ticket/Display.html?id=$1',\n  rtfm: 'ftp://rtfm.mit.edu/pub/faqs/$1',\n  s23wiki: 'http://s23.org/wiki/$1',\n  scholar: 'https://scholar.google.com/scholar?q=$1',\n  schoolswp: 'http://schools-wikipedia.org/wiki/$1',\n  scores: 'https://imslp.org/wiki/$1',\n  scoutwiki: 'http://en.scoutwiki.org/$1',\n  scramble: 'http://www.scramble.nl/wiki/index.php?title=$1',\n  seapig: 'http://www.seapig.org/$1',\n  seattlewiki: 'http://seattle.wikia.com/wiki/$1',\n  slwiki: 'http://wiki.secondlife.com/wiki/$1',\n  'semantic-mw': 'https://www.semantic-mediawiki.org/wiki/$1',\n  senseislibrary: 'https://senseis.xmp.net/?$1',\n  sharemap: 'https://sharemap.org/$1',\n  silcode: 'http://www.sil.org/iso639-3/documentation.asp?id=$1',\n  slashdot: 'https://slashdot.org/article.pl?sid=$1',\n  sourceforge: 'https://sourceforge.net/$1',\n  spcom: 'https://spcom.wikimedia.org/wiki/$1',\n  species: 'https://species.wikimedia.org/wiki/$1',\n  squeak: 'http://wiki.squeak.org/squeak/$1',\n  stats: 'https://stats.wikimedia.org/$1',\n  stewardry: 'https://tools.wmflabs.org/meta/stewardry/?wiki=$1',\n  strategy: 'https://strategy.wikimedia.org/wiki/$1',\n  strategywiki: 'http://strategywiki.org/wiki/$1',\n  sulutil: 'https://meta.wikimedia.org/wiki/Special:CentralAuth/$1',\n  swtrain: 'http://train.spottingworld.com/$1',\n  svn: 'https://svn.wikimedia.org/viewvc/mediawiki/$1?view=log',\n  swinbrain: 'https://swinbrain.ict.swin.edu.au/wiki/$1',\n  tabwiki: 'http://www.tabwiki.com/index.php/$1',\n  tclerswiki: 'http://wiki.tcl.tk/$1',\n  technorati: 'http://www.technorati.com/search/$1',\n  tenwiki: 'https://ten.wikipedia.org/wiki/$1',\n  testwiki: 'https://test.wikipedia.org/wiki/$1',\n  testwikidata: 'https://test.wikidata.org/wiki/$1',\n  test2wiki: 'https://test2.wikipedia.org/wiki/$1',\n  tfwiki: 'https://tfwiki.net/wiki/$1',\n  thelemapedia: 'http://www.thelemapedia.org/index.php/$1',\n  theopedia: 'http://www.theopedia.com/$1',\n  thinkwiki: 'http://www.thinkwiki.org/wiki/$1',\n  ticket: 'https://ticket.wikimedia.org/otrs/index.pl?Action=AgentTicketZoom&TicketNumber=$1',\n  tmbw: 'http://tmbw.net/wiki/$1',\n  tmnet: 'http://www.technomanifestos.net/?$1',\n  tmwiki: 'http://www.EasyTopicMaps.com/?page=$1',\n  toolforge: 'https://tools.wmflabs.org/$1',\n  toollabs: 'https://tools.wmflabs.org/$1',\n  tools: 'https://toolserver.org/$1',\n  tswiki: 'https://www.mediawiki.org/wiki/Toolserver:$1',\n  translatewiki: 'https://translatewiki.net/wiki/$1',\n  tviv: 'http://tviv.org/wiki/$1',\n  tvtropes: 'http://www.tvtropes.org/pmwiki/pmwiki.php/Main/$1',\n  twiki: 'http://twiki.org/cgi-bin/view/$1',\n  tyvawiki: 'http://www.tyvawiki.org/wiki/$1',\n  umap: 'https://umap.openstreetmap.fr/$1',\n  uncyclopedia: 'http://en.uncyclopedia.co/wiki/$1',\n  unihan: 'http://www.unicode.org/cgi-bin/GetUnihanData.pl?codepoint=$1',\n  unreal: 'http://wiki.beyondunreal.com/wiki/$1',\n  urbandict: 'http://www.urbandictionary.com/define.php?term=$1',\n  usej: 'http://www.tejo.org/usej/$1',\n  usemod: 'http://www.usemod.com/cgi-bin/wiki.pl?$1',\n  usability: 'https://usability.wikimedia.org/wiki/$1',\n  utrs: 'https://utrs.wmflabs.org/appeal.php?id=$1',\n  vikidia: 'https://fr.vikidia.org/wiki/$1',\n  vlos: 'https://tusach.thuvienkhoahoc.com/wiki/$1',\n  vkol: 'http://kol.coldfront.net/thekolwiki/index.php/$1',\n  voipinfo: 'https://www.voip-info.org/wiki/view/$1',\n  votewiki: 'https://vote.wikimedia.org/wiki/$1',\n  werelate: 'https://www.werelate.org/wiki/$1',\n  wg: 'https://wg-en.wikipedia.org/wiki/$1',\n  wikia: 'http://www.wikia.com/wiki/w:c:$1',\n  wikiasite: 'http://www.wikia.com/wiki/w:c:$1',\n  wikiapiary: 'https://wikiapiary.com/wiki/$1',\n  wikibooks: 'https://en.wikibooks.org/wiki/$1',\n  wikichristian: 'http://www.wikichristian.org/index.php?title=$1',\n  wikicities: 'http://www.wikia.com/wiki/w:$1',\n  wikicity: 'http://www.wikia.com/wiki/w:c:$1',\n  wikiconference: 'https://wikiconference.org/wiki/$1',\n  wikidata: 'https://www.wikidata.org/wiki/$1',\n  wikif1: 'http://www.wikif1.org/$1',\n  wikifur: 'https://en.wikifur.com/wiki/$1',\n  wikihow: 'https://www.wikihow.com/$1',\n  wikiindex: 'http://wikiindex.org/$1',\n  wikilemon: 'http://wiki.illemonati.com/$1',\n  wikilivres: 'https://wikilivres.org/wiki/$1',\n  wikilivresru: 'http://wikilivres.ru/$1',\n  'wikimac-de': 'http://apfelwiki.de/wiki/Main/$1',\n  wikimedia: 'https://foundation.wikimedia.org/wiki/$1',\n  wikinews: 'https://en.wikinews.org/wiki/$1',\n  wikinfo: 'http://wikinfo.org/w/index.php/$1',\n  wikinvest: 'https://meta.wikimedia.org/wiki/Interwiki_map/discontinued#Wikinvest',\n  wikiotics: 'https://wikiotics.org/$1',\n  wikipapers: 'http://wikipapers.referata.com/wiki/$1',\n  wikipedia: 'https://en.wikipedia.org/wiki/$1',\n  wikipediawikipedia: 'https://en.wikipedia.org/wiki/Wikipedia:$1',\n  wikiquote: 'https://en.wikiquote.org/wiki/$1',\n  wikisophia: 'http://wikisophia.org/index.php?title=$1',\n  wikisource: 'https://en.wikisource.org/wiki/$1',\n  wikispecies: 'https://species.wikimedia.org/wiki/$1',\n  wikispot: 'http://wikispot.org/?action=gotowikipage&v=$1',\n  wikiskripta: 'http://www.wikiskripta.eu/index.php/$1',\n  labsconsole: 'https://wikitech.wikimedia.org/wiki/$1',\n  wikiti: 'http://wikiti.denglend.net/index.php?title=$1',\n  wikiversity: 'https://en.wikiversity.org/wiki/$1',\n  wikivoyage: 'https://en.wikivoyage.org/wiki/$1',\n  betawikiversity: 'https://beta.wikiversity.org/wiki/$1',\n  wikiwikiweb: 'http://c2.com/cgi/wiki?$1',\n  wiktionary: 'https://en.wiktionary.org/wiki/$1',\n  wipipedia: 'http://wipipedia.org/index.php/$1',\n  wlug: 'http://www.wlug.org.nz/$1',\n  wmam: 'https://am.wikimedia.org/wiki/$1',\n  wmar: 'http://www.wikimedia.org.ar/wiki/$1',\n  wmat: 'https://mitglieder.wikimedia.at/$1',\n  wmau: 'https://wikimedia.org.au/wiki/$1',\n  wmbd: 'https://bd.wikimedia.org/wiki/$1',\n  wmbe: 'https://be.wikimedia.org/wiki/$1',\n  wmbr: 'https://br.wikimedia.org/wiki/$1',\n  wmca: 'https://ca.wikimedia.org/wiki/$1',\n  wmch: 'https://www.wikimedia.ch/$1',\n  wmcl: 'https://www.wikimediachile.cl/index.php?title=$1',\n  wmcn: 'https://cn.wikimedia.org/wiki/$1',\n  wmco: 'https://co.wikimedia.org/wiki/$1',\n  wmcz: 'https://www.wikimedia.cz/web/$1',\n  wmdc: 'https://wikimediadc.org/wiki/$1',\n  securewikidc: 'https://secure.wikidc.org/$1',\n  wmde: 'https://wikimedia.de/wiki/$1',\n  wmdk: 'https://dk.wikimedia.org/wiki/$1',\n  wmee: 'https://ee.wikimedia.org/wiki/$1',\n  wmec: 'https://ec.wikimedia.org/wiki/$1',\n  wmes: 'https://www.wikimedia.es/wiki/$1',\n  wmet: 'https://ee.wikimedia.org/wiki/$1',\n  wmfdashboard: 'https://outreachdashboard.wmflabs.org/$1',\n  wmfi: 'https://fi.wikimedia.org/wiki/$1',\n  wmfr: 'https://wikimedia.fr/$1',\n  wmge: 'https://ge.wikimedia.org/wiki/$1',\n  wmhi: 'https://hi.wikimedia.org/wiki/$1',\n  wmhk: 'https://meta.wikimedia.org/wiki/Wikimedia_Hong_Kong',\n  wmhu: 'https://wikimedia.hu/wiki/$1',\n  wmid: 'https://id.wikimedia.org/wiki/$1',\n  wmil: 'http://www.wikimedia.org.il/$1',\n  wmin: 'http://wiki.wikimedia.in/$1',\n  wmit: 'https://wiki.wikimedia.it/wiki/$1',\n  wmke: 'https://meta.wikimedia.org/wiki/Wikimedia_Kenya',\n  wmmk: 'https://mk.wikimedia.org/wiki/$1',\n  wmmx: 'https://mx.wikimedia.org/wiki/$1',\n  wmnl: 'https://nl.wikimedia.org/wiki/$1',\n  wmnyc: 'https://nyc.wikimedia.org/wiki/$1',\n  wmno: 'https://no.wikimedia.org/wiki/$1',\n  'wmpa-us': 'https://pa-us.wikimedia.org/wiki/$1',\n  wmph: 'https://meta.wikimedia.org/wiki/Wikimedia_Philippines',\n  wmpl: 'https://pl.wikimedia.org/wiki/$1',\n  wmpt: 'https://pt.wikimedia.org/wiki/$1',\n  wmpunjabi: 'https://punjabi.wikimedia.org/wiki/$1',\n  wmromd: 'https://romd.wikimedia.org/wiki/$1',\n  wmrs: 'https://rs.wikimedia.org/wiki/$1',\n  wmru: 'https://ru.wikimedia.org/wiki/$1',\n  wmse: 'https://se.wikimedia.org/wiki/$1',\n  wmsk: 'http://wikimedia.sk/$1',\n  wmtr: 'https://tr.wikimedia.org/wiki/$1',\n  wmtw: 'http://wikimedia.tw/wiki/index.php5/$1',\n  wmua: 'https://ua.wikimedia.org/wiki/$1',\n  wmuk: 'https://wikimedia.org.uk/wiki/$1',\n  wmve: 'https://wikimedia.org.ve/wiki/$1',\n  wmza: 'http://wikimedia.org.za/wiki/$1',\n  wm2005: 'https://wikimania2005.wikimedia.org/wiki/$1',\n  wm2006: 'https://wikimania2006.wikimedia.org/wiki/$1',\n  wm2007: 'https://wikimania2007.wikimedia.org/wiki/$1',\n  wm2008: 'https://wikimania2008.wikimedia.org/wiki/$1',\n  wm2009: 'https://wikimania2009.wikimedia.org/wiki/$1',\n  wm2010: 'https://wikimania2010.wikimedia.org/wiki/$1',\n  wm2011: 'https://wikimania2011.wikimedia.org/wiki/$1',\n  wm2012: 'https://wikimania2012.wikimedia.org/wiki/$1',\n  wm2013: 'https://wikimania2013.wikimedia.org/wiki/$1',\n  wm2014: 'https://wikimania2014.wikimedia.org/wiki/$1',\n  wm2015: 'https://wikimania2015.wikimedia.org/wiki/$1',\n  wm2016: 'https://wikimania2016.wikimedia.org/wiki/$1',\n  wm2017: 'https://wikimania2017.wikimedia.org/wiki/$1',\n  wm2018: 'https://wikimania2018.wikimedia.org/wiki/$1',\n  wmania: 'https://wikimania.wikimedia.org/wiki/$1',\n  wikimania: 'https://wikimania.wikimedia.org/wiki/$1',\n  wmteam: 'https://wikimaniateam.wikimedia.org/wiki/$1',\n  wmf: 'https://foundation.wikimedia.org/wiki/$1',\n  wmfblog: 'https://blog.wikimedia.org/$1',\n  wmdeblog: 'https://blog.wikimedia.de/$1',\n  wookieepedia: 'http://starwars.wikia.com/wiki/$1',\n  wowwiki: 'http://www.wowwiki.com/$1',\n  wqy: 'http://wqy.sourceforge.net/cgi-bin/index.cgi?$1',\n  wurmpedia: 'https://wurmpedia.com/index.php/$1',\n  viaf: 'http://viaf.org/viaf/$1',\n  zrhwiki: 'http://www.zrhwiki.ch/wiki/$1',\n  zum: 'https://wiki.zum.de/$1',\n  zwiki: 'http://www.zwiki.org/$1',\n  m: 'https://meta.wikimedia.org/wiki/$1',\n  meta: 'https://meta.wikimedia.org/wiki/$1',\n  sep11: 'https://sep11.wikipedia.org/wiki/$1',\n  d: 'https://www.wikidata.org/wiki/$1',\n  aa: 'https://aa.wikipedia.org/wiki/$1',\n  ab: 'https://ab.wikipedia.org/wiki/$1',\n  ace: 'https://ace.wikipedia.org/wiki/$1',\n  ady: 'https://ady.wikipedia.org/wiki/$1',\n  af: 'https://af.wikipedia.org/wiki/$1',\n  ak: 'https://ak.wikipedia.org/wiki/$1',\n  als: 'https://als.wikipedia.org/wiki/$1',\n  am: 'https://am.wikipedia.org/wiki/$1',\n  an: 'https://an.wikipedia.org/wiki/$1',\n  ang: 'https://ang.wikipedia.org/wiki/$1',\n  ar: 'https://ar.wikipedia.org/wiki/$1',\n  arc: 'https://arc.wikipedia.org/wiki/$1',\n  arz: 'https://arz.wikipedia.org/wiki/$1',\n  as: 'https://as.wikipedia.org/wiki/$1',\n  ast: 'https://ast.wikipedia.org/wiki/$1',\n  atj: 'https://atj.wikipedia.org/wiki/$1',\n  av: 'https://av.wikipedia.org/wiki/$1',\n  ay: 'https://ay.wikipedia.org/wiki/$1',\n  az: 'https://az.wikipedia.org/wiki/$1',\n  azb: 'https://azb.wikipedia.org/wiki/$1',\n  ba: 'https://ba.wikipedia.org/wiki/$1',\n  ban: 'https://ban.wikipedia.org/wiki/$1',\n  bar: 'https://bar.wikipedia.org/wiki/$1',\n  'bat-smg': 'https://bat-smg.wikipedia.org/wiki/$1',\n  bcl: 'https://bcl.wikipedia.org/wiki/$1',\n  be: 'https://be.wikipedia.org/wiki/$1',\n  'be-x-old': 'https://be-x-old.wikipedia.org/wiki/$1',\n  bg: 'https://bg.wikipedia.org/wiki/$1',\n  bh: 'https://bh.wikipedia.org/wiki/$1',\n  bi: 'https://bi.wikipedia.org/wiki/$1',\n  bjn: 'https://bjn.wikipedia.org/wiki/$1',\n  bm: 'https://bm.wikipedia.org/wiki/$1',\n  bn: 'https://bn.wikipedia.org/wiki/$1',\n  bo: 'https://bo.wikipedia.org/wiki/$1',\n  bpy: 'https://bpy.wikipedia.org/wiki/$1',\n  br: 'https://br.wikipedia.org/wiki/$1',\n  bs: 'https://bs.wikipedia.org/wiki/$1',\n  bug: 'https://bug.wikipedia.org/wiki/$1',\n  bxr: 'https://bxr.wikipedia.org/wiki/$1',\n  ca: 'https://ca.wikipedia.org/wiki/$1',\n  'cbk-zam': 'https://cbk-zam.wikipedia.org/wiki/$1',\n  cdo: 'https://cdo.wikipedia.org/wiki/$1',\n  ce: 'https://ce.wikipedia.org/wiki/$1',\n  ceb: 'https://ceb.wikipedia.org/wiki/$1',\n  ch: 'https://ch.wikipedia.org/wiki/$1',\n  cho: 'https://cho.wikipedia.org/wiki/$1',\n  chr: 'https://chr.wikipedia.org/wiki/$1',\n  chy: 'https://chy.wikipedia.org/wiki/$1',\n  ckb: 'https://ckb.wikipedia.org/wiki/$1',\n  co: 'https://co.wikipedia.org/wiki/$1',\n  cr: 'https://cr.wikipedia.org/wiki/$1',\n  crh: 'https://crh.wikipedia.org/wiki/$1',\n  cs: 'https://cs.wikipedia.org/wiki/$1',\n  csb: 'https://csb.wikipedia.org/wiki/$1',\n  cu: 'https://cu.wikipedia.org/wiki/$1',\n  cv: 'https://cv.wikipedia.org/wiki/$1',\n  cy: 'https://cy.wikipedia.org/wiki/$1',\n  da: 'https://da.wikipedia.org/wiki/$1',\n  de: 'https://de.wikipedia.org/wiki/$1',\n  din: 'https://din.wikipedia.org/wiki/$1',\n  diq: 'https://diq.wikipedia.org/wiki/$1',\n  dsb: 'https://dsb.wikipedia.org/wiki/$1',\n  dty: 'https://dty.wikipedia.org/wiki/$1',\n  dv: 'https://dv.wikipedia.org/wiki/$1',\n  dz: 'https://dz.wikipedia.org/wiki/$1',\n  ee: 'https://ee.wikipedia.org/wiki/$1',\n  el: 'https://el.wikipedia.org/wiki/$1',\n  eml: 'https://eml.wikipedia.org/wiki/$1',\n  en: 'https://en.wikipedia.org/wiki/$1',\n  eo: 'https://eo.wikipedia.org/wiki/$1',\n  es: 'https://es.wikipedia.org/wiki/$1',\n  et: 'https://et.wikipedia.org/wiki/$1',\n  eu: 'https://eu.wikipedia.org/wiki/$1',\n  ext: 'https://ext.wikipedia.org/wiki/$1',\n  fa: 'https://fa.wikipedia.org/wiki/$1',\n  ff: 'https://ff.wikipedia.org/wiki/$1',\n  fi: 'https://fi.wikipedia.org/wiki/$1',\n  'fiu-vro': 'https://fiu-vro.wikipedia.org/wiki/$1',\n  fj: 'https://fj.wikipedia.org/wiki/$1',\n  fo: 'https://fo.wikipedia.org/wiki/$1',\n  fr: 'https://fr.wikipedia.org/wiki/$1',\n  frp: 'https://frp.wikipedia.org/wiki/$1',\n  frr: 'https://frr.wikipedia.org/wiki/$1',\n  fur: 'https://fur.wikipedia.org/wiki/$1',\n  fy: 'https://fy.wikipedia.org/wiki/$1',\n  ga: 'https://ga.wikipedia.org/wiki/$1',\n  gag: 'https://gag.wikipedia.org/wiki/$1',\n  gan: 'https://gan.wikipedia.org/wiki/$1',\n  gcr: 'https://gcr.wikipedia.org/wiki/$1',\n  gd: 'https://gd.wikipedia.org/wiki/$1',\n  gl: 'https://gl.wikipedia.org/wiki/$1',\n  glk: 'https://glk.wikipedia.org/wiki/$1',\n  gn: 'https://gn.wikipedia.org/wiki/$1',\n  gom: 'https://gom.wikipedia.org/wiki/$1',\n  gor: 'https://gor.wikipedia.org/wiki/$1',\n  got: 'https://got.wikipedia.org/wiki/$1',\n  gu: 'https://gu.wikipedia.org/wiki/$1',\n  gv: 'https://gv.wikipedia.org/wiki/$1',\n  ha: 'https://ha.wikipedia.org/wiki/$1',\n  hak: 'https://hak.wikipedia.org/wiki/$1',\n  haw: 'https://haw.wikipedia.org/wiki/$1',\n  he: 'https://he.wikipedia.org/wiki/$1',\n  hi: 'https://hi.wikipedia.org/wiki/$1',\n  hif: 'https://hif.wikipedia.org/wiki/$1',\n  ho: 'https://ho.wikipedia.org/wiki/$1',\n  hr: 'https://hr.wikipedia.org/wiki/$1',\n  hsb: 'https://hsb.wikipedia.org/wiki/$1',\n  ht: 'https://ht.wikipedia.org/wiki/$1',\n  hu: 'https://hu.wikipedia.org/wiki/$1',\n  hy: 'https://hy.wikipedia.org/wiki/$1',\n  hyw: 'https://hyw.wikipedia.org/wiki/$1',\n  hz: 'https://hz.wikipedia.org/wiki/$1',\n  ia: 'https://ia.wikipedia.org/wiki/$1',\n  id: 'https://id.wikipedia.org/wiki/$1',\n  ie: 'https://ie.wikipedia.org/wiki/$1',\n  ig: 'https://ig.wikipedia.org/wiki/$1',\n  ii: 'https://ii.wikipedia.org/wiki/$1',\n  ik: 'https://ik.wikipedia.org/wiki/$1',\n  ilo: 'https://ilo.wikipedia.org/wiki/$1',\n  inh: 'https://inh.wikipedia.org/wiki/$1',\n  io: 'https://io.wikipedia.org/wiki/$1',\n  is: 'https://is.wikipedia.org/wiki/$1',\n  it: 'https://it.wikipedia.org/wiki/$1',\n  iu: 'https://iu.wikipedia.org/wiki/$1',\n  ja: 'https://ja.wikipedia.org/wiki/$1',\n  jam: 'https://jam.wikipedia.org/wiki/$1',\n  jbo: 'https://jbo.wikipedia.org/wiki/$1',\n  jv: 'https://jv.wikipedia.org/wiki/$1',\n  ka: 'https://ka.wikipedia.org/wiki/$1',\n  kaa: 'https://kaa.wikipedia.org/wiki/$1',\n  kab: 'https://kab.wikipedia.org/wiki/$1',\n  kbd: 'https://kbd.wikipedia.org/wiki/$1',\n  kbp: 'https://kbp.wikipedia.org/wiki/$1',\n  kg: 'https://kg.wikipedia.org/wiki/$1',\n  ki: 'https://ki.wikipedia.org/wiki/$1',\n  kj: 'https://kj.wikipedia.org/wiki/$1',\n  kk: 'https://kk.wikipedia.org/wiki/$1',\n  kl: 'https://kl.wikipedia.org/wiki/$1',\n  km: 'https://km.wikipedia.org/wiki/$1',\n  kn: 'https://kn.wikipedia.org/wiki/$1',\n  ko: 'https://ko.wikipedia.org/wiki/$1',\n  koi: 'https://koi.wikipedia.org/wiki/$1',\n  kr: 'https://kr.wikipedia.org/wiki/$1',\n  krc: 'https://krc.wikipedia.org/wiki/$1',\n  ks: 'https://ks.wikipedia.org/wiki/$1',\n  ksh: 'https://ksh.wikipedia.org/wiki/$1',\n  ku: 'https://ku.wikipedia.org/wiki/$1',\n  kv: 'https://kv.wikipedia.org/wiki/$1',\n  kw: 'https://kw.wikipedia.org/wiki/$1',\n  ky: 'https://ky.wikipedia.org/wiki/$1',\n  la: 'https://la.wikipedia.org/wiki/$1',\n  lad: 'https://lad.wikipedia.org/wiki/$1',\n  lb: 'https://lb.wikipedia.org/wiki/$1',\n  lbe: 'https://lbe.wikipedia.org/wiki/$1',\n  lez: 'https://lez.wikipedia.org/wiki/$1',\n  lfn: 'https://lfn.wikipedia.org/wiki/$1',\n  lg: 'https://lg.wikipedia.org/wiki/$1',\n  li: 'https://li.wikipedia.org/wiki/$1',\n  lij: 'https://lij.wikipedia.org/wiki/$1',\n  lmo: 'https://lmo.wikipedia.org/wiki/$1',\n  ln: 'https://ln.wikipedia.org/wiki/$1',\n  lo: 'https://lo.wikipedia.org/wiki/$1',\n  lrc: 'https://lrc.wikipedia.org/wiki/$1',\n  lt: 'https://lt.wikipedia.org/wiki/$1',\n  ltg: 'https://ltg.wikipedia.org/wiki/$1',\n  lv: 'https://lv.wikipedia.org/wiki/$1',\n  mai: 'https://mai.wikipedia.org/wiki/$1',\n  'map-bms': 'https://map-bms.wikipedia.org/wiki/$1',\n  mdf: 'https://mdf.wikipedia.org/wiki/$1',\n  mg: 'https://mg.wikipedia.org/wiki/$1',\n  mh: 'https://mh.wikipedia.org/wiki/$1',\n  mhr: 'https://mhr.wikipedia.org/wiki/$1',\n  mi: 'https://mi.wikipedia.org/wiki/$1',\n  min: 'https://min.wikipedia.org/wiki/$1',\n  mk: 'https://mk.wikipedia.org/wiki/$1',\n  ml: 'https://ml.wikipedia.org/wiki/$1',\n  mn: 'https://mn.wikipedia.org/wiki/$1',\n  mnw: 'https://mnw.wikipedia.org/wiki/$1',\n  mo: 'https://mo.wikipedia.org/wiki/$1',\n  mr: 'https://mr.wikipedia.org/wiki/$1',\n  mrj: 'https://mrj.wikipedia.org/wiki/$1',\n  ms: 'https://ms.wikipedia.org/wiki/$1',\n  mt: 'https://mt.wikipedia.org/wiki/$1',\n  mus: 'https://mus.wikipedia.org/wiki/$1',\n  mwl: 'https://mwl.wikipedia.org/wiki/$1',\n  my: 'https://my.wikipedia.org/wiki/$1',\n  myv: 'https://myv.wikipedia.org/wiki/$1',\n  mzn: 'https://mzn.wikipedia.org/wiki/$1',\n  na: 'https://na.wikipedia.org/wiki/$1',\n  nah: 'https://nah.wikipedia.org/wiki/$1',\n  nap: 'https://nap.wikipedia.org/wiki/$1',\n  nds: 'https://nds.wikipedia.org/wiki/$1',\n  'nds-nl': 'https://nds-nl.wikipedia.org/wiki/$1',\n  ne: 'https://ne.wikipedia.org/wiki/$1',\n  new: 'https://new.wikipedia.org/wiki/$1',\n  ng: 'https://ng.wikipedia.org/wiki/$1',\n  nl: 'https://nl.wikipedia.org/wiki/$1',\n  nn: 'https://nn.wikipedia.org/wiki/$1',\n  no: 'https://no.wikipedia.org/wiki/$1',\n  nov: 'https://nov.wikipedia.org/wiki/$1',\n  nqo: 'https://nqo.wikipedia.org/wiki/$1',\n  nrm: 'https://nrm.wikipedia.org/wiki/$1',\n  nso: 'https://nso.wikipedia.org/wiki/$1',\n  nv: 'https://nv.wikipedia.org/wiki/$1',\n  ny: 'https://ny.wikipedia.org/wiki/$1',\n  oc: 'https://oc.wikipedia.org/wiki/$1',\n  olo: 'https://olo.wikipedia.org/wiki/$1',\n  om: 'https://om.wikipedia.org/wiki/$1',\n  or: 'https://or.wikipedia.org/wiki/$1',\n  os: 'https://os.wikipedia.org/wiki/$1',\n  pa: 'https://pa.wikipedia.org/wiki/$1',\n  pag: 'https://pag.wikipedia.org/wiki/$1',\n  pam: 'https://pam.wikipedia.org/wiki/$1',\n  pap: 'https://pap.wikipedia.org/wiki/$1',\n  pcd: 'https://pcd.wikipedia.org/wiki/$1',\n  pdc: 'https://pdc.wikipedia.org/wiki/$1',\n  pfl: 'https://pfl.wikipedia.org/wiki/$1',\n  pi: 'https://pi.wikipedia.org/wiki/$1',\n  pih: 'https://pih.wikipedia.org/wiki/$1',\n  pl: 'https://pl.wikipedia.org/wiki/$1',\n  pms: 'https://pms.wikipedia.org/wiki/$1',\n  pnb: 'https://pnb.wikipedia.org/wiki/$1',\n  pnt: 'https://pnt.wikipedia.org/wiki/$1',\n  ps: 'https://ps.wikipedia.org/wiki/$1',\n  pt: 'https://pt.wikipedia.org/wiki/$1',\n  qu: 'https://qu.wikipedia.org/wiki/$1',\n  rm: 'https://rm.wikipedia.org/wiki/$1',\n  rmy: 'https://rmy.wikipedia.org/wiki/$1',\n  rn: 'https://rn.wikipedia.org/wiki/$1',\n  ro: 'https://ro.wikipedia.org/wiki/$1',\n  'roa-rup': 'https://roa-rup.wikipedia.org/wiki/$1',\n  'roa-tara': 'https://roa-tara.wikipedia.org/wiki/$1',\n  ru: 'https://ru.wikipedia.org/wiki/$1',\n  rue: 'https://rue.wikipedia.org/wiki/$1',\n  rw: 'https://rw.wikipedia.org/wiki/$1',\n  sa: 'https://sa.wikipedia.org/wiki/$1',\n  sah: 'https://sah.wikipedia.org/wiki/$1',\n  sat: 'https://sat.wikipedia.org/wiki/$1',\n  sc: 'https://sc.wikipedia.org/wiki/$1',\n  scn: 'https://scn.wikipedia.org/wiki/$1',\n  sco: 'https://sco.wikipedia.org/wiki/$1',\n  sd: 'https://sd.wikipedia.org/wiki/$1',\n  se: 'https://se.wikipedia.org/wiki/$1',\n  sg: 'https://sg.wikipedia.org/wiki/$1',\n  sh: 'https://sh.wikipedia.org/wiki/$1',\n  shn: 'https://shn.wikipedia.org/wiki/$1',\n  shy: 'https://shy.wikipedia.org/wiki/$1',\n  si: 'https://si.wikipedia.org/wiki/$1',\n  simple: 'https://simple.wikipedia.org/wiki/$1',\n  sk: 'https://sk.wikipedia.org/wiki/$1',\n  sl: 'https://sl.wikipedia.org/wiki/$1',\n  sm: 'https://sm.wikipedia.org/wiki/$1',\n  sn: 'https://sn.wikipedia.org/wiki/$1',\n  so: 'https://so.wikipedia.org/wiki/$1',\n  sq: 'https://sq.wikipedia.org/wiki/$1',\n  sr: 'https://sr.wikipedia.org/wiki/$1',\n  srn: 'https://srn.wikipedia.org/wiki/$1',\n  ss: 'https://ss.wikipedia.org/wiki/$1',\n  st: 'https://st.wikipedia.org/wiki/$1',\n  stq: 'https://stq.wikipedia.org/wiki/$1',\n  su: 'https://su.wikipedia.org/wiki/$1',\n  sv: 'https://sv.wikipedia.org/wiki/$1',\n  sw: 'https://sw.wikipedia.org/wiki/$1',\n  szl: 'https://szl.wikipedia.org/wiki/$1',\n  szy: 'https://szy.wikipedia.org/wiki/$1',\n  ta: 'https://ta.wikipedia.org/wiki/$1',\n  tcy: 'https://tcy.wikipedia.org/wiki/$1',\n  te: 'https://te.wikipedia.org/wiki/$1',\n  tet: 'https://tet.wikipedia.org/wiki/$1',\n  tg: 'https://tg.wikipedia.org/wiki/$1',\n  th: 'https://th.wikipedia.org/wiki/$1',\n  ti: 'https://ti.wikipedia.org/wiki/$1',\n  tk: 'https://tk.wikipedia.org/wiki/$1',\n  tl: 'https://tl.wikipedia.org/wiki/$1',\n  tn: 'https://tn.wikipedia.org/wiki/$1',\n  to: 'https://to.wikipedia.org/wiki/$1',\n  tpi: 'https://tpi.wikipedia.org/wiki/$1',\n  tr: 'https://tr.wikipedia.org/wiki/$1',\n  ts: 'https://ts.wikipedia.org/wiki/$1',\n  tt: 'https://tt.wikipedia.org/wiki/$1',\n  tum: 'https://tum.wikipedia.org/wiki/$1',\n  tw: 'https://tw.wikipedia.org/wiki/$1',\n  ty: 'https://ty.wikipedia.org/wiki/$1',\n  tyv: 'https://tyv.wikipedia.org/wiki/$1',\n  udm: 'https://udm.wikipedia.org/wiki/$1',\n  ug: 'https://ug.wikipedia.org/wiki/$1',\n  uk: 'https://uk.wikipedia.org/wiki/$1',\n  ur: 'https://ur.wikipedia.org/wiki/$1',\n  uz: 'https://uz.wikipedia.org/wiki/$1',\n  ve: 'https://ve.wikipedia.org/wiki/$1',\n  vec: 'https://vec.wikipedia.org/wiki/$1',\n  vep: 'https://vep.wikipedia.org/wiki/$1',\n  vi: 'https://vi.wikipedia.org/wiki/$1',\n  vls: 'https://vls.wikipedia.org/wiki/$1',\n  vo: 'https://vo.wikipedia.org/wiki/$1',\n  wa: 'https://wa.wikipedia.org/wiki/$1',\n  war: 'https://war.wikipedia.org/wiki/$1',\n  wo: 'https://wo.wikipedia.org/wiki/$1',\n  wuu: 'https://wuu.wikipedia.org/wiki/$1',\n  xal: 'https://xal.wikipedia.org/wiki/$1',\n  xh: 'https://xh.wikipedia.org/wiki/$1',\n  xmf: 'https://xmf.wikipedia.org/wiki/$1',\n  yi: 'https://yi.wikipedia.org/wiki/$1',\n  yo: 'https://yo.wikipedia.org/wiki/$1',\n  yue: 'https://zh-yue.wikipedia.org/wiki/$1',\n  za: 'https://za.wikipedia.org/wiki/$1',\n  zea: 'https://zea.wikipedia.org/wiki/$1',\n  zh: 'https://zh.wikipedia.org/wiki/$1',\n  'zh-classical': 'https://zh-classical.wikipedia.org/wiki/$1',\n  'zh-min-nan': 'https://zh-min-nan.wikipedia.org/wiki/$1',\n  'zh-yue': 'https://zh-yue.wikipedia.org/wiki/$1',\n  zu: 'https://zu.wikipedia.org/wiki/$1',\n  cz: 'https://cs.wikipedia.org/wiki/$1',\n  dk: 'https://da.wikipedia.org/wiki/$1',\n  epo: 'https://eo.wikipedia.org/wiki/$1',\n  jp: 'https://ja.wikipedia.org/wiki/$1',\n  minnan: 'https://zh-min-nan.wikipedia.org/wiki/$1',\n  nb: 'https://no.wikipedia.org/wiki/$1',\n  'zh-cfr': 'https://zh-min-nan.wikipedia.org/wiki/$1',\n  'zh-cn': 'https://zh.wikipedia.org/wiki/$1',\n  'zh-tw': 'https://zh.wikipedia.org/wiki/$1',\n  nan: 'https://zh-min-nan.wikipedia.org/wiki/$1',\n  vro: 'https://fiu-vro.wikipedia.org/wiki/$1',\n  cmn: 'https://zh.wikipedia.org/wiki/$1',\n  lzh: 'https://zh-classical.wikipedia.org/wiki/$1',\n  rup: 'https://roa-rup.wikipedia.org/wiki/$1',\n  gsw: 'https://als.wikipedia.org/wiki/$1',\n  'be-tarask': 'https://be-x-old.wikipedia.org/wiki/$1',\n  sgs: 'https://bat-smg.wikipedia.org/wiki/$1',\n  egl: 'https://eml.wikipedia.org/wiki/$1',\n  w: 'https://en.wikipedia.org/wiki/$1',\n  wikt: 'https://en.wiktionary.org/wiki/$1',\n  q: 'https://en.wikiquote.org/wiki/$1',\n  b: 'https://en.wikibooks.org/wiki/$1',\n  n: 'https://en.wikinews.org/wiki/$1',\n  s: 'https://en.wikisource.org/wiki/$1',\n  chapter: 'https://en.wikimedia.org/wiki/$1',\n  v: 'https://en.wikiversity.org/wiki/$1',\n  voy: 'https://en.wikivoyage.org/wiki/$1'\n}\n","const wikis = require('../_data/interwiki')\n\nconst defaults = {\n  type: 'internal'\n}\nconst Link = function(data) {\n  data = data || {}\n  data = Object.assign({}, defaults, data)\n  // console.log(data)\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\nconst methods = {\n  text: function(str) {\n    if (str !== undefined) {\n      this.data.text = str\n    }\n    return this.data.text\n  },\n  json: function() {\n    let obj = {\n      text: this.text(),\n      type: this.type()\n    }\n    if (obj.type === 'internal') {\n      obj.page = this.page()\n    } else if (obj.type === 'interwiki') {\n      obj.wiki = this.wiki()\n    } else {\n      obj.site = this.site()\n    }\n    let anchor = this.anchor()\n    if (anchor) {\n      obj.anchor = anchor\n    }\n    return obj\n  },\n  page: function(str) {\n    if (str !== undefined) {\n      this.data.page = str\n    }\n    return this.data.page\n  },\n  anchor: function(str) {\n    if (str !== undefined) {\n      this.data.anchor = str\n    }\n    return this.data.anchor || ''\n  },\n  wiki: function(str) {\n    if (str !== undefined) {\n      this.data.wiki = str\n    }\n    return this.data.wiki\n  },\n  type: function(str) {\n    if (str !== undefined) {\n      this.data.type = str\n    }\n    return this.data.type\n  },\n  site: function(str) {\n    if (str !== undefined) {\n      this.data.site = str\n    }\n    return this.data.site\n  },\n  // create a url for any type of link\n  href: function() {\n    let type = this.type()\n    if (type === 'external') {\n      return this.site()\n    }\n    if (type === 'interwiki') {\n      let url = wikis[this.wiki()] || 'https://en.wikipedia.org/wiki/$1'\n      let page = this.page()\n      page = page.replace(/ /g, '_')\n      page = encodeURIComponent(page)\n      url = url.replace(/\\$1/g, page)\n      if (this.anchor()) {\n        url += '#' + this.anchor()\n      }\n      return url\n    }\n    if (type === 'internal') {\n      let url = ''\n      if (this.anchor()) {\n        url += '#' + this.anchor()\n      }\n      return url\n    }\n  }\n}\nObject.keys(methods).forEach(k => {\n  Link.prototype[k] = methods[k]\n})\nmodule.exports = Link\n","const Link = require('./Link')\nconst parseLinks = require('./parse')\n// const i18n = require('../_data/i18n')\n// const cat_reg = new RegExp('\\\\[\\\\[:?(' + i18n.categories.join('|') + '):[^\\\\]\\\\]]{2,80}\\\\]\\\\]', 'gi')\n\n//return only rendered text of wiki links\nconst removeLinks = function(line) {\n  // [[File:with|Size]]\n  line = line.replace(/\\[\\[File:(.{2,80}?)\\|([^\\]]+?)\\]\\](\\w{0,5})/g, '$1')\n  return line\n}\n\nconst getLinks = function(data) {\n  let wiki = data.text\n  let links = parseLinks(wiki) || []\n  data.links = links.map(link => {\n    wiki = wiki.replace(link.raw, link.text || link.page || '')\n    delete link.raw\n    return new Link(link)\n  })\n  wiki = removeLinks(wiki)\n  data.text = wiki\n}\nmodule.exports = getLinks\n","//handle the bold/italics\nconst formatting = function(obj) {\n  let bolds = []\n  let italics = []\n  let wiki = obj.text || ''\n  //bold and italics combined 5 's\n  wiki = wiki.replace(/'''''(.{0,200}?)'''''/g, (a, b) => {\n    bolds.push(b)\n    italics.push(b)\n    return b\n  })\n  //''''four'''' → bold with quotes\n  wiki = wiki.replace(/''''(.{0,200}?)''''/g, (a, b) => {\n    bolds.push(`'${b}'`)\n    return `'${b}'`\n  })\n  //'''bold'''\n  wiki = wiki.replace(/'''(.{0,200}?)'''/g, (a, b) => {\n    bolds.push(b)\n    return b\n  })\n  //''italic''\n  wiki = wiki.replace(/''(.{0,200}?)''/g, (a, b) => {\n    italics.push(b)\n    return b\n  })\n\n  //pack it all up..\n  obj.text = wiki\n  if (bolds.length > 0) {\n    obj.fmt = obj.fmt || {}\n    obj.fmt.bold = bolds\n  }\n  if (italics.length > 0) {\n    obj.fmt = obj.fmt || {}\n    obj.fmt.italic = italics\n  }\n  return obj\n}\nmodule.exports = formatting\n","const setDefaults = require('../_lib/setDefaults')\nconst isNumber = /^[0-9,.]+$/\n\nconst defaults = {\n  text: true,\n  links: true,\n  formatting: true,\n  dates: true,\n  numbers: true\n}\n\nconst toJSON = function(s, options) {\n  options = setDefaults(options, defaults)\n  let data = {}\n  let text = s.text()\n  if (options.text === true) {\n    data.text = text\n  }\n  //add number field\n  if (options.numbers === true && isNumber.test(text)) {\n    let num = Number(text.replace(/,/g, ''))\n    if (isNaN(num) === false) {\n      data.number = num\n    }\n  }\n  if (options.links && s.links().length > 0) {\n    data.links = s.links().map(l => l.json())\n  }\n  if (options.formatting && s.data.fmt) {\n    data.formatting = s.data.fmt\n  }\n  if (options.dates && s.data.dates !== undefined) {\n    data.dates = s.data.dates\n  }\n  return data\n}\nmodule.exports = toJSON\n","const toJSON = require('./toJson')\n\n//where we store the formatting, link, date information\nconst Sentence = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  links: function(n) {\n    let arr = this.data.links || []\n    if (typeof n === 'number') {\n      return arr[n]\n    } else if (typeof n === 'string') {\n      //grab a link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1) //titlecase it\n      let link = arr.find(o => o.page === n)\n      return link === undefined ? [] : [link]\n    }\n    return arr\n  },\n  interwiki: function(n) {\n    let arr = this.links().filter(l => l.wiki !== undefined)\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr\n  },\n  bolds: function(n) {\n    let arr = []\n    if (this.data && this.data.fmt && this.data.fmt.bold) {\n      arr = this.data.fmt.bold || []\n    }\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr\n  },\n  italics: function(n) {\n    let arr = []\n    if (this.data && this.data.fmt && this.data.fmt.italic) {\n      arr = this.data.fmt.italic || []\n    }\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr\n  },\n  dates: function(n) {\n    let arr = []\n    if (this.data && this.data.dates) {\n      arr = this.data.dates || []\n    }\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr\n  },\n  text: function(str) {\n    if (str !== undefined && typeof str === 'string') {\n      //set the text?\n      this.data.text = str\n    }\n    return this.data.text || ''\n  },\n  json: function(options) {\n    return toJSON(this, options)\n  }\n}\n\nObject.keys(methods).forEach(k => {\n  Sentence.prototype[k] = methods[k]\n})\nSentence.prototype.italic = Sentence.prototype.italics\nSentence.prototype.bold = Sentence.prototype.bolds\nSentence.prototype.plaintext = Sentence.prototype.text\n\nmodule.exports = Sentence\n","//these are used for the sentence-splitter\nmodule.exports = [\n  'ad',\n  'adj',\n  'adm',\n  'adv',\n  'al',\n  'alta',\n  'approx',\n  'apr',\n  'apt',\n  'arc',\n  'ariz',\n  'assn',\n  'asst',\n  'atty',\n  'aug',\n  'ave',\n  'ba',\n  'bc',\n  'bl',\n  'bldg',\n  'blvd',\n  'brig',\n  'bros',\n  'ca',\n  'cal',\n  'calif',\n  'capt',\n  'cca',\n  'cg',\n  'cl',\n  'cm',\n  'cmdr',\n  'co',\n  'col',\n  'colo',\n  'comdr',\n  'conn',\n  'corp',\n  'cpl',\n  'cres',\n  'ct',\n  'cyn',\n  'dak',\n  'dec',\n  'def',\n  'dept',\n  'det',\n  'dg',\n  'dist',\n  'dl',\n  'dm',\n  'dr',\n  'ea',\n  'eg',\n  'eng',\n  'esp',\n  'esq',\n  'est',\n  'etc',\n  'ex',\n  'exp',\n  'feb',\n  'fem',\n  'fig',\n  'fl oz',\n  'fl',\n  'fla',\n  'fm',\n  'fr',\n  'ft',\n  'fy',\n  'ga',\n  'gal',\n  'gb',\n  'gen',\n  'gov',\n  'hg',\n  'hon',\n  'hr',\n  'hrs',\n  'hwy',\n  'hz',\n  'ia',\n  'ida',\n  'ie',\n  'inc',\n  'inf',\n  'jan',\n  'jd',\n  'jr',\n  'jul',\n  'jun',\n  'kan',\n  'kans',\n  'kb',\n  'kg',\n  'km',\n  'kmph',\n  'lat',\n  'lb',\n  'lit',\n  'llb',\n  'lm',\n  'lng',\n  'lt',\n  'ltd',\n  'lx',\n  'ma',\n  'maj',\n  'mar',\n  'masc',\n  'mb',\n  'md',\n  'messrs',\n  'mg',\n  'mi',\n  'min',\n  'minn',\n  'misc',\n  'mister',\n  'ml',\n  'mlle',\n  'mm',\n  'mme',\n  'mph',\n  'mps',\n  'mr',\n  'mrs',\n  'ms',\n  'mstr',\n  'mt',\n  'neb',\n  'nebr',\n  'nee',\n  'no',\n  'nov',\n  'oct',\n  'okla',\n  'ont',\n  'op',\n  'ord',\n  'oz',\n  'pa',\n  'pd',\n  'penn',\n  'penna',\n  'phd',\n  'pl',\n  'pp',\n  'pref',\n  'prob',\n  'prof',\n  'pron',\n  'ps',\n  'psa',\n  'pseud',\n  'pt',\n  'pvt',\n  'qt',\n  'que',\n  'rb',\n  'rd',\n  'rep',\n  'reps',\n  'res',\n  'rev',\n  'sask',\n  'sec',\n  'sen',\n  'sens',\n  'sep',\n  'sept',\n  'sfc',\n  'sgt',\n  'sir',\n  'situ',\n  'sq ft',\n  'sq',\n  'sr',\n  'ss',\n  'st',\n  'supt',\n  'surg',\n  'tb',\n  'tbl',\n  'tbsp',\n  'tce',\n  'td',\n  'tel',\n  'temp',\n  'tenn',\n  'tex',\n  'tsp',\n  'univ',\n  'usafa',\n  'ut',\n  'va',\n  'vb',\n  'ver',\n  'vet',\n  'vitro',\n  'vivo',\n  'vol',\n  'vs',\n  'vt',\n  'wis',\n  'wisc',\n  'wr',\n  'wy',\n  'wyo',\n  'yb',\n  'µg'\n]\n","//split text into sentences, using regex\n//@spencermountain MIT\n\n//(Rule-based sentence boundary segmentation) - chop given text into its proper sentences.\n// Ignore periods/questions/exclamations used in acronyms/abbreviations/numbers, etc.\n// @spencermountain 2015 MIT\nconst literalAbbreviations = require('./_abbreviations')\nconst abbreviations = literalAbbreviations.concat('[^]][^]]')\nconst abbrev_reg = new RegExp(\"(^| |')(\" + abbreviations.join('|') + `)[.!?] ?$`, 'i')\nconst acronym_reg = new RegExp(\"[ |.|'|[][A-Z].? *?$\", 'i')\nconst elipses_reg = new RegExp('\\\\.\\\\.\\\\.* +?$')\nconst hasWord = new RegExp('[a-zа-яぁ-ゟ][a-zа-яぁ-ゟ゠-ヿ]', 'iu')\n// 3040-309F : hiragana\n// 30A0-30FF : katakana\n\n//turn a nested array into one array\nconst flatten = function(arr) {\n  let all = []\n  arr.forEach(function(a) {\n    all = all.concat(a)\n  })\n  return all\n}\n\nconst naiive_split = function(text) {\n  //first, split by newline\n  let splits = text.split(/(\\n+)/)\n  splits = splits.filter(s => s.match(/\\S/))\n  //split by period, question-mark, and exclamation-mark\n  splits = splits.map(function(str) {\n    return str.split(/(\\S.+?[.!?]\"?)(?=\\s+|$)/g) //\\u3002\n  })\n  return flatten(splits)\n}\n\n// if this looks like a period within a wikipedia link, return false\nconst isBalanced = function(str) {\n  str = str || ''\n  const open = str.split(/\\[\\[/) || []\n  const closed = str.split(/\\]\\]/) || []\n  if (open.length > closed.length) {\n    return false\n  }\n  //make sure quotes are closed too\n  const quotes = str.match(/\"/g)\n  if (quotes && quotes.length % 2 !== 0 && str.length < 900) {\n    return false\n  }\n  return true\n}\n\nconst sentence_parser = function(text) {\n  let sentences = []\n  //first do a greedy-split..\n  let chunks = []\n  //ensure it 'smells like' a sentence\n  if (!text || typeof text !== 'string' || text.trim().length === 0) {\n    return sentences\n  }\n  // This was the splitter regex updated to fix quoted punctuation marks.\n  // let splits = text.split(/(\\S.+?[.\\?!])(?=\\s+|$|\")/g);\n  // todo: look for side effects in this regex replacement:\n  let splits = naiive_split(text)\n  //filter-out the grap ones\n  for (let i = 0; i < splits.length; i++) {\n    let s = splits[i]\n    if (!s || s === '') {\n      continue\n    }\n    //this is meaningful whitespace\n    if (!s.match(/\\S/)) {\n      //add it to the last one\n      if (chunks[chunks.length - 1]) {\n        chunks[chunks.length - 1] += s\n        continue\n      } else if (splits[i + 1]) {\n        //add it to the next one\n        splits[i + 1] = s + splits[i + 1]\n        continue\n      }\n    }\n    chunks.push(s)\n  }\n\n  //detection of non-sentence chunks\n  const isSentence = function(hmm) {\n    if (hmm.match(abbrev_reg) || hmm.match(acronym_reg) || hmm.match(elipses_reg)) {\n      return false\n    }\n    //too short? - no consecutive letters\n    if (hasWord.test(hmm) === false) {\n      return false\n    }\n    if (!isBalanced(hmm)) {\n      return false\n    }\n    return true\n  }\n  //loop through these chunks, and join the non-sentence chunks back together..\n  for (let i = 0; i < chunks.length; i++) {\n    //should this chunk be combined with the next one?\n    if (chunks[i + 1] && !isSentence(chunks[i])) {\n      chunks[i + 1] = chunks[i] + (chunks[i + 1] || '') //.replace(/ +/g, ' ');\n    } else if (chunks[i] && chunks[i].length > 0) {\n      //this chunk is a proper sentence..\n      sentences.push(chunks[i])\n      chunks[i] = ''\n    }\n  }\n  //if we never got a sentence, return the given text\n  if (sentences.length === 0) {\n    return [text]\n  }\n  return sentences\n}\n\nmodule.exports = sentence_parser\n","const helpers = require('../_lib/helpers')\nconst parseLinks = require('../link')\nconst parseFmt = require('./formatting')\nconst Sentence = require('./Sentence')\nconst sentenceParser = require('./parse')\n\n// returns one sentence object\nfunction fromText(str) {\n  let obj = {\n    text: str\n  }\n  //pull-out the [[links]]\n  parseLinks(obj)\n  obj.text = postprocess(obj.text)\n  //pull-out the bolds and ''italics''\n  obj = parseFmt(obj)\n  //pull-out things like {{start date|...}}\n  return new Sentence(obj)\n}\n\nfunction postprocess(line) {\n  //remove empty parentheses (sometimes caused by removing templates)\n  line = line.replace(/\\([,;: ]*\\)/g, '')\n  //these semi-colons in parentheses are particularly troublesome\n  line = line.replace(/\\( *(; ?)+/g, '(')\n  //dangling punctuation\n  line = helpers.trim_whitespace(line)\n  line = line.replace(/ +\\.$/, '.')\n  return line\n}\n\n//used for consistency with other class-definitions\nconst byParagraph = function(paragraph) {\n  // array of texts\n  let sentences = sentenceParser(paragraph.wiki)\n  // sentence objects\n  sentences = sentences.map(fromText)\n  //remove :indented first line, as it is often a disambiguation\n  if (sentences[0] && sentences[0].text() && sentences[0].text()[0] === ':') {\n    sentences = sentences.slice(1)\n  }\n  paragraph.sentences = sentences\n}\n\nmodule.exports = {\n  fromText: fromText,\n  byParagraph: byParagraph\n}\n","//remove the top/bottom off the template\nconst strip = function(tmpl) {\n  tmpl = tmpl.replace(/^\\{\\{/, '')\n  tmpl = tmpl.replace(/\\}\\}$/, '')\n  return tmpl\n}\nmodule.exports = strip\n","//normalize template names\nconst fmtName = function(name) {\n  name = (name || '').trim()\n  name = name.toLowerCase()\n  name = name.replace(/_/g, ' ')\n  return name\n}\nmodule.exports = fmtName\n","//turn {{name|one|two|three}} into [name, one, two, three]\nconst pipeSplitter = function(tmpl) {\n  //start with a naiive '|' split\n  let arr = tmpl.split(/\\n?\\|/)\n  //we've split by '|', which is pretty lame\n  //look for broken-up links and fix them :/\n  arr.forEach((a, i) => {\n    if (a === null) {\n      return\n    }\n    //has '[[' but no ']]'\n    //has equal number of openning and closing tags. handle nested case '[[[[' ']]'\n    if (/\\[\\[[^\\]]+$/.test(a) || /\\{\\{[^\\}]+$/.test(a)\n    || \n      (a.split('{{').length !== a.split('}}').length)\n      || (a.split('[[').length !== a.split(']]').length)\n    ) {\n      arr[i + 1] = arr[i] + '|' + arr[i + 1]\n      arr[i] = null\n    }\n  })\n  //cleanup any mistakes we've made\n  arr = arr.filter(a => a !== null)\n  arr = arr.map(a => (a || '').trim())\n  //remove empty fields, only at the end:\n  for (let i = arr.length - 1; i >= 0; i -= 1) {\n    if (arr[i] === '') {\n      arr.pop()\n    }\n    break\n  }\n  return arr\n}\nmodule.exports = pipeSplitter\n","// every value in {{tmpl|a|b|c}} needs a name\n// here we come up with names for them\nconst hasKey = /^[a-z0-9\\u00C0-\\u00FF\\._\\- '()œ]+=/iu\n\n//templates with these properties are asking for trouble\nconst reserved = {\n  template: true,\n  list: true,\n  prototype: true\n}\n\n//turn 'key=val' into {key:key, val:val}\nconst parseKey = function(str) {\n  let parts = str.split('=')\n  let key = parts[0] || ''\n  key = key.toLowerCase().trim()\n  let val = parts.slice(1).join('=')\n  //don't let it be called 'template'..\n  if (reserved.hasOwnProperty(key)) {\n    key = '_' + key\n  }\n  return {\n    key: key,\n    val: val.trim()\n  }\n}\n\n//turn [a, b=v, c] into {'1':a, b:v, '2':c}\nconst keyMaker = function(arr, order) {\n  let o = 0\n  return arr.reduce((h, str) => {\n    str = (str || '').trim()\n    //support named keys - 'foo=bar'\n    if (hasKey.test(str) === true) {\n      let res = parseKey(str)\n      if (res.key) {\n        h[res.key] = res.val\n        return h\n      }\n    }\n    //try a key from given 'order' names\n    if (order && order[o]) {\n      let key = order[o] //here goes!\n      h[key] = str\n    } else {\n      h.list = h.list || []\n      h.list.push(str)\n    }\n    o += 1\n    return h\n  }, {})\n}\n\nmodule.exports = keyMaker\n","const whoCares = {\n  classname: true,\n  style: true,\n  align: true,\n  margin: true,\n  left: true,\n  break: true,\n  boxsize: true,\n  framestyle: true,\n  item_style: true,\n  collapsible: true,\n  list_style_type: true,\n  'list-style-type': true,\n  colwidth: true\n}\n\n//remove wiki-cruft & some styling info from templates\nconst cleanup = function(obj) {\n  Object.keys(obj).forEach(k => {\n    if (whoCares[k.toLowerCase()] === true) {\n      delete obj[k]\n    }\n    //remove empty values, too\n    if (obj[k] === null || obj[k] === '') {\n      delete obj[k]\n    }\n  })\n  return obj\n}\nmodule.exports = cleanup\n","//remove the top/bottom off the template\nconst strip = require('./_strip')\nconst fmtName = require('./_fmtName')\nconst parseSentence = require('../../04-sentence').fromText\nconst pipeSplitter = require('./01-pipe-splitter')\nconst keyMaker = require('./02-keyMaker')\nconst cleanup = require('./03-cleanup')\n\n// most templates just want plaintext...\nconst makeFormat = function(str, fmt) {\n  let s = parseSentence(str)\n  //support various output formats\n  if (fmt === 'json') {\n    return s.json()\n  } else if (fmt === 'raw') {\n    return s\n  }\n  //default to flat text\n  return s.text()\n}\n\n//\nconst parser = function(tmpl, order, fmt) {\n  order = order || []\n  //renomove {{}}'s\n  tmpl = strip(tmpl || '')\n  let arr = pipeSplitter(tmpl)\n  //get template name\n  let name = arr.shift()\n  //name each value\n  let obj = keyMaker(arr, order)\n  //remove wiki-junk\n  obj = cleanup(obj)\n  //is this a infobox/reference?\n  // let known = isKnown(obj);\n\n  //using '|1=content' is an escaping-thing..\n  if (obj['1'] && order[0] && obj.hasOwnProperty(order[0]) === false) {\n    //move it over..\n    obj[order[0]] = obj['1']\n    delete obj['1']\n  }\n\n  Object.keys(obj).forEach(k => {\n    if (k === 'list') {\n      obj[k] = obj[k].map(v => makeFormat(v, fmt))\n      return\n    }\n    obj[k] = makeFormat(obj[k], fmt)\n  })\n  //add the template name\n  if (name) {\n    obj.template = fmtName(name)\n  }\n  return obj\n}\nmodule.exports = parser\n","//also called 'citations'\nconst Reference = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  title: function() {\n    let data = this.data\n    return data.title || data.encyclopedia || data.author || ''\n  },\n  links: function(n) {\n    let arr = []\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    //grab a specific link..\n    if (typeof n === 'number') {\n      return arr[n]\n    } else if (typeof n === 'string') {\n      //grab a link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1) //titlecase it\n      let link = arr.find(o => o.page() === n)\n      return link === undefined ? [] : [link]\n    }\n    return arr || []\n  },\n  text: function() {\n    return '' //nah, skip these.\n  },\n\n  json: function() {\n    return this.data\n  }\n}\nObject.keys(methods).forEach(k => {\n  Reference.prototype[k] = methods[k]\n})\nmodule.exports = Reference\n","const parse = require('../template/_parsers/parse')\n// const parse = require('../../templates/wikipedia/page').citation;\nconst parseSentence = require('../04-sentence').fromText\nconst Reference = require('./Reference')\n\n//structured Cite templates - <ref>{{Cite..</ref>\nconst hasCitation = function(str) {\n  return /^ *?\\{\\{ *?(cite|citation)/i.test(str) && /\\}\\} *?$/.test(str) && /citation needed/i.test(str) === false\n}\n\nconst parseCitation = function(tmpl) {\n  let obj = parse(tmpl)\n  obj.type = obj.template.replace(/cite /, '')\n  obj.template = 'citation'\n  return obj\n}\n\n//handle unstructured ones - <ref>some text</ref>\nconst parseInline = function(str) {\n  let obj = parseSentence(str) || {}\n  return {\n    template: 'citation',\n    type: 'inline',\n    data: {},\n    inline: obj\n  }\n}\n\n// parse <ref></ref> xml tags\nconst parseRefs = function(section) {\n  let references = []\n  let wiki = section.wiki\n  wiki = wiki.replace(/ ?<ref>([\\s\\S]{0,1800}?)<\\/ref> ?/gi, function(a, tmpl) {\n    if (hasCitation(tmpl)) {\n      let obj = parseCitation(tmpl)\n      if (obj) {\n        references.push(obj)\n      }\n      wiki = wiki.replace(tmpl, '')\n    } else {\n      references.push(parseInline(tmpl))\n    }\n    return ' '\n  })\n  // <ref name=\"\"/>\n  wiki = wiki.replace(/ ?<ref [^>]{0,200}?\\/> ?/gi, ' ')\n  // <ref name=\"\"></ref>\n  wiki = wiki.replace(/ ?<ref [^>]{0,200}?>([\\s\\S]{0,1800}?)<\\/ref> ?/gi, function(a, tmpl) {\n    if (hasCitation(tmpl)) {\n      let obj = parseCitation(tmpl)\n      if (obj) {\n        references.push(obj)\n      }\n      wiki = wiki.replace(tmpl, '')\n    } else {\n      references.push(parseInline(tmpl))\n    }\n    return ' '\n  })\n  //now that we're done with xml, do a generic + dangerous xml-tag removal\n  wiki = wiki.replace(/ ?<[ \\/]?[a-z0-9]{1,8}[a-z0-9=\" ]{2,20}[ \\/]?> ?/g, ' ') //<samp name=\"asd\">\n  section.references = references.map(r => new Reference(r))\n  section.wiki = wiki\n}\nmodule.exports = parseRefs\n","const fns = require('../_lib/helpers')\nconst parseSentence = require('../04-sentence/').fromText\nconst parseReferences = require('../reference/')\nconst heading_reg = /^(={1,5})(.{1,200}?)={1,5}$/\n\n//interpret depth, title of headings like '==See also=='\nconst parseHeading = function(section, str) {\n  let m = str.match(heading_reg)\n  if (!m) {\n    section.title = ''\n    section.depth = 0\n    return section\n  }\n  let title = m[2] || ''\n  title = parseSentence(title).text()\n  //amazingly, you can see inline {{templates}} in this text, too\n  //... let's not think about that now.\n  title = title.replace(/\\{\\{.+?\\}\\}/, '')\n  //same for references (i know..)\n  let obj = { wiki: title }\n  parseReferences(obj)\n  title = obj.wiki\n  //trim leading/trailing whitespace\n  title = fns.trim_whitespace(title)\n  let depth = 0\n  if (m[1]) {\n    depth = m[1].length - 2\n  }\n  section.title = title\n  section.depth = depth\n  return section\n}\nmodule.exports = parseHeading\n","//remove top-bottoms\nconst cleanup = function(lines) {\n  lines = lines.filter(line => {\n    //a '|+' row is a 'table caption', remove it.\n    return line && /^\\|\\+/.test(line) !== true\n  })\n  if (/^{\\|/.test(lines[0]) === true) {\n    lines.shift()\n  }\n  if (/^\\|}/.test(lines[lines.length - 1]) === true) {\n    lines.pop()\n  }\n  if (/^\\|-/.test(lines[0]) === true) {\n    lines.shift()\n  }\n  return lines\n}\n\n//turn newline seperated into '|-' seperated\nconst findRows = function(lines) {\n  let rows = []\n  let row = []\n  lines = cleanup(lines)\n  for (let i = 0; i < lines.length; i += 1) {\n    let line = lines[i]\n    //'|-' is a row-seperator\n    if (/^\\|-/.test(line) === true) {\n      //okay, we're done the row\n      if (row.length > 0) {\n        rows.push(row)\n        row = []\n      }\n    } else {\n      //look for '||' inline row-splitter\n      line = line.split(/(?:\\|\\||!!)/)\n      //support newline -> '||'\n      if (!line[0] && line[1]) {\n        line.shift()\n      }\n      line.forEach(l => {\n        l = l.replace(/^\\| */, '')\n        l = l.trim()\n        row.push(l)\n      })\n    }\n  }\n  //finish the last one\n  if (row.length > 0) {\n    rows.push(row)\n  }\n  return rows\n}\nmodule.exports = findRows\n","const getRowSpan = /.*rowspan *?= *?[\"']?([0-9]+)[\"']?[ \\|]*/\nconst getColSpan = /.*colspan *?= *?[\"']?([0-9]+)[\"']?[ \\|]*/\n\n//colspans stretch ←left/right→\nconst doColSpan = function(rows) {\n  rows.forEach((row, r) => {\n    row.forEach((str, c) => {\n      let m = str.match(getColSpan)\n      if (m !== null) {\n        let num = parseInt(m[1], 10)\n\n        //...maybe if num is so big, and centered, remove it?\n        // if (num > 3) {\n        //   rows[r] = []\n        //   return\n        // }\n        //splice-in n empty columns right here\n        row[c] = str.replace(getColSpan, '')\n        for (let i = 1; i < num; i += 1) {\n          row.splice(c + 1, 0, '')\n        }\n      }\n    })\n  })\n  rows = rows.filter(r => r.length > 0)\n  return rows\n}\n\n//colspans stretch up/down\nconst doRowSpan = function(rows) {\n  rows.forEach((row, r) => {\n    row.forEach((str, c) => {\n      let m = str.match(getRowSpan)\n      if (m !== null) {\n        let num = parseInt(m[1], 10)\n        //copy this cell down n rows\n        str = str.replace(getRowSpan, '')\n        row[c] = str\n        for (let i = r + 1; i < r + num; i += 1) {\n          if (!rows[i]) {\n            break\n          }\n          rows[i].splice(c, 0, str)\n        }\n      }\n    })\n  })\n  return rows\n}\n\n//\nconst handleSpans = function(rows) {\n  rows = doColSpan(rows)\n  rows = doRowSpan(rows)\n  return rows\n}\nmodule.exports = handleSpans\n","const parseSentence = require('../../04-sentence/').fromText\nconst findRows = require('./_findRows')\nconst handleSpans = require('./_spans')\nconst isHeading = /^!/\n\n//common ones\nconst headings = {\n  name: true,\n  age: true,\n  born: true,\n  date: true,\n  year: true,\n  city: true,\n  country: true,\n  population: true,\n  count: true,\n  number: true\n}\n\n//additional table-cruft to remove before parseLine method\nconst cleanText = function(str) {\n  str = parseSentence(str).text()\n  //anything before a single-pipe is styling, so remove it\n  if (str.match(/\\|/)) {\n    str = str.replace(/.+\\| ?/, '') //class=\"unsortable\"|title\n  }\n  str = str.replace(/style=['\"].*?[\"']/, '')\n  //'!' is used as a highlighed-column\n  str = str.replace(/^!/, '')\n  str = str.trim()\n  return str\n}\n\nconst skipSpanRow = function(row) {\n  let len = row.length\n  let hasTxt = row.filter(str => str).length\n  //does it have 3 empty spaces?\n  if (len - hasTxt > 3) {\n    return true\n  }\n  return false\n}\n\n//remove non-header span rows\nconst removeMidSpans = function(rows) {\n  rows = rows.filter(row => {\n    if (row.length === 1 && row[0] && isHeading.test(row[0]) && /rowspan/i.test(row[0]) === false) {\n      return false\n    }\n    return true\n  })\n  return rows\n}\n\n//'!' starts a header-row\nconst findHeaders = function(rows = []) {\n  let headers = []\n\n  // is the first-row just a ton of colspan?\n  if (skipSpanRow(rows[0])) {\n    rows.shift()\n  }\n\n  let first = rows[0]\n  if (first && first[0] && first[1] && (/^!/.test(first[0]) || /^!/.test(first[1]))) {\n    headers = first.map(h => {\n      h = h.replace(/^\\! */, '')\n      h = cleanText(h)\n      return h\n    })\n    rows.shift()\n  }\n  //try the second row, too (overwrite first-row, if it exists)\n  first = rows[0]\n  if (first && first[0] && first[1] && /^!/.test(first[0]) && /^!/.test(first[1])) {\n    first.forEach((h, i) => {\n      h = h.replace(/^\\! */, '')\n      h = cleanText(h)\n      if (Boolean(h) === true) {\n        headers[i] = h\n      }\n    })\n    rows.shift()\n  }\n  return headers\n}\n\n//turn headers, array into an object\nconst parseRow = function(arr, headers) {\n  let row = {}\n  arr.forEach((str, i) => {\n    let h = headers[i] || 'col' + (i + 1)\n    let s = parseSentence(str)\n    s.text(cleanText(s.text()))\n    row[h] = s\n  })\n  return row\n}\n\n//should we use the first row as a the headers?\nconst firstRowHeader = function(rows) {\n  if (rows.length <= 3) {\n    return []\n  }\n  let headers = rows[0].slice(0)\n  headers = headers.map(h => {\n    h = h.replace(/^\\! */, '')\n    h = parseSentence(h).text()\n    h = cleanText(h)\n    h = h.toLowerCase()\n    return h\n  })\n  for (let i = 0; i < headers.length; i += 1) {\n    if (headings.hasOwnProperty(headers[i])) {\n      rows.shift()\n      return headers\n    }\n  }\n  return []\n}\n\n//turn a {|...table string into an array of arrays\nconst parseTable = function(wiki) {\n  let lines = wiki\n    .replace(/\\r/g, '')\n    .replace(/\\n(\\s*[^|!{\\s])/g, ' $1') //remove unecessary newlines\n    .split(/\\n/)\n    .map(l => l.trim())\n  let rows = findRows(lines)\n\n  //remove non-header span rows\n  rows = removeMidSpans(rows)\n  //support colspan, rowspan...\n  rows = handleSpans(rows)\n  //grab the header rows\n  let headers = findHeaders(rows)\n  if (!headers || headers.length <= 1) {\n    headers = firstRowHeader(rows)\n    let want = rows[rows.length - 1] || []\n    //try the second row\n    if (headers.length <= 1 && want.length > 2) {\n      headers = firstRowHeader(rows.slice(1))\n      if (headers.length > 0) {\n        rows = rows.slice(2) //remove them\n      }\n    }\n  }\n  //index each column by it's header\n  let table = rows.map(arr => {\n    return parseRow(arr, headers)\n  })\n  return table\n}\n\nmodule.exports = parseTable\n","const encode = require('../_lib/encode')\n//\nconst toJson = function(tables, options) {\n  return tables.map(table => {\n    let row = {}\n    Object.keys(table).forEach(k => {\n      row[k] = table[k].json() //(they're sentence objects)\n    })\n    //encode them, for mongodb\n    if (options.encode === true) {\n      row = encode.encodeObj(row)\n    }\n    return row\n  })\n}\nmodule.exports = toJson\n","const setDefaults = require('../_lib/setDefaults')\nconst toJson = require('./toJson')\nconst defaults = {}\n\nconst Table = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  links(n) {\n    let links = []\n    this.data.forEach(r => {\n      Object.keys(r).forEach(k => {\n        links = links.concat(r[k].links())\n      })\n    })\n    //grab a specific link..\n    if (typeof n === 'number') {\n      return links[n]\n    } else if (typeof n === 'string') {\n      //grab a link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1) //titlecase it\n      let link = links.find(o => o.page() === n)\n      return link === undefined ? [] : [link]\n    }\n    return links\n  },\n  keyValue(options) {\n    let rows = this.json(options)\n    rows.forEach(row => {\n      Object.keys(row).forEach(k => {\n        row[k] = row[k].text\n      })\n    })\n    return rows\n  },\n  json(options) {\n    options = setDefaults(options, defaults)\n    return toJson(this.data, options)\n  },\n\n  text() {\n    return ''\n  }\n}\nmethods.keyvalue = methods.keyValue\nmethods.keyval = methods.keyValue\n\nObject.keys(methods).forEach(k => {\n  Table.prototype[k] = methods[k]\n})\nmodule.exports = Table\n","const parseTable = require('./parse')\nconst Table = require('./Table')\n// const table_reg = /\\{\\|[\\s\\S]+?\\|\\}/g; //the largest-cities table is ~70kchars.\nconst openReg = /^\\s*{\\|/\nconst closeReg = /^\\s*\\|}/\n\n//tables can be recursive, so looky-here.\nconst findTables = function(section) {\n  let list = []\n  let wiki = section.wiki\n  let lines = wiki.split('\\n')\n  let stack = []\n  for (let i = 0; i < lines.length; i += 1) {\n    //start a table\n    if (openReg.test(lines[i]) === true) {\n      stack.push(lines[i])\n      continue\n    }\n    //close a table\n    if (closeReg.test(lines[i]) === true) {\n      stack[stack.length - 1] += '\\n' + lines[i]\n      let table = stack.pop()\n      list.push(table)\n      continue\n    }\n    //keep-going on one\n    if (stack.length > 0) {\n      stack[stack.length - 1] += '\\n' + lines[i]\n    }\n  }\n  //work-em together for a Table class\n  let tables = []\n  list.forEach(str => {\n    if (str) {\n      //also reremove a newline at the end of the table (awkward)\n      wiki = wiki.replace(str + '\\n', '')\n      wiki = wiki.replace(str, '')\n      let data = parseTable(str)\n      if (data && data.length > 0) {\n        tables.push(new Table(data))\n      }\n    }\n  })\n\n  if (tables.length > 0) {\n    section.tables = tables\n  }\n  section.wiki = wiki\n}\n\nmodule.exports = findTables\n","const setDefaults = require('../_lib/setDefaults')\n\nconst defaults = {\n  sentences: true\n}\n\nconst toJson = function(p, options) {\n  options = setDefaults(options, defaults)\n  let data = {}\n  if (options.sentences === true) {\n    data.sentences = p.sentences().map(s => s.json(options))\n  }\n  return data\n}\nmodule.exports = toJson\n","const toJSON = require('./toJson')\nconst setDefaults = require('../_lib/setDefaults')\nconst defaults = {\n  sentences: true,\n  lists: true,\n  images: true\n}\n\nconst Paragraph = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  sentences: function(num) {\n    if (typeof num === 'number') {\n      return this.data.sentences[num]\n    }\n    return this.data.sentences || []\n  },\n  references: function(num) {\n    if (typeof num === 'number') {\n      return this.data.references[num]\n    }\n    return this.data.references\n  },\n  lists: function(num) {\n    if (typeof num === 'number') {\n      return this.data.lists[num]\n    }\n    return this.data.lists\n  },\n  images(num) {\n    if (typeof num === 'number') {\n      return this.data.images[num]\n    }\n    return this.data.images || []\n  },\n  links: function(n) {\n    let arr = []\n    this.sentences().forEach(s => {\n      arr = arr.concat(s.links(n))\n    })\n    if (typeof n === 'number') {\n      return arr[n]\n    } else if (typeof n === 'string') {\n      //grab a specific link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1) //titlecase it\n      let link = arr.find(o => o.page() === n)\n      return link === undefined ? [] : [link]\n    }\n    return arr || []\n  },\n  interwiki(num) {\n    let arr = []\n    this.sentences().forEach(s => {\n      arr = arr.concat(s.interwiki())\n    })\n    if (typeof num === 'number') {\n      return arr[num]\n    }\n    return arr || []\n  },\n  text: function(options) {\n    options = setDefaults(options, defaults)\n    let str = this.sentences()\n      .map(s => s.text(options))\n      .join(' ')\n    this.lists().forEach(list => {\n      str += '\\n' + list.text()\n    })\n    return str\n  },\n  json: function(options) {\n    options = setDefaults(options, defaults)\n    return toJSON(this, options)\n  }\n}\nmethods.citations = methods.references\nObject.keys(methods).forEach(k => {\n  Paragraph.prototype[k] = methods[k]\n})\nmodule.exports = Paragraph\n","//find all the pairs of '[[...[[..]]...]]' in the text\n//used to properly root out recursive template calls, [[.. [[...]] ]]\n//basically just adds open tags, and subtracts closing tags\nconst opener = '['\nconst closer = ']'\nfunction nested_find(text) {\n  let out = []\n  let last = []\n  const chars = text.split('')\n  let open = 0\n  for (let i = 0; i < chars.length; i++) {\n    const c = text[i]\n    //increment open tag\n    if (c === opener) {\n      open += 1\n    }\n    //decrement close tag\n    else if (c === closer) {\n      open -= 1\n      if (open < 0) {\n        open = 0\n      }\n    } else if (last.length === 0) {\n      // If we're not inside of a pair of delimiters, we can discard the current letter.\n      // The return of this function is only used to extract images.\n      continue\n    }\n\n    last.push(c)\n    if (open === 0 && last.length > 0) {\n      //first, fix botched parse\n      let open_count = 0\n      let close_count = 0\n      for (let j = 0; j < last.length; j++) {\n        if (last[j] === opener) {\n          open_count++\n        } else if (last[j] === closer) {\n          close_count++\n        }\n      }\n      //is it botched?\n      if (open_count > close_count) {\n        last.push(closer)\n      }\n      //looks good, keep it\n      out.push(last.join(''))\n      last = []\n    }\n  }\n  return out\n}\nmodule.exports = nested_find\n","const i18n = require('../_data/i18n')\nconst Image = require('./Image')\nconst parseTemplate = require('../template/_parsers/parse')\nconst parseSentence = require('../04-sentence').fromText\nconst nested_find = require('./nested_find')\n//regexes:\nconst isFile = new RegExp('(' + i18n.images.join('|') + '):', 'i')\nlet fileNames = `(${i18n.images.join('|')})`\nconst file_reg = new RegExp(fileNames + ':(.+?)[\\\\||\\\\]]', 'iu')\n\n//style directives for Wikipedia:Extended_image_syntax\nconst imgLayouts = {\n  thumb: true,\n  thumbnail: true,\n  border: true,\n  right: true,\n  left: true,\n  center: true,\n  top: true,\n  bottom: true,\n  none: true,\n  upright: true,\n  baseline: true,\n  middle: true,\n  sub: true,\n  super: true\n}\n\n//images are usually [[image:my_pic.jpg]]\nconst oneImage = function(img) {\n  let m = img.match(file_reg)\n  if (m === null || !m[2]) {\n    return null\n  }\n  let file = `${m[1]}:${m[2] || ''}`\n  file = file.trim()\n  //titlecase it\n  let title = file.charAt(0).toUpperCase() + file.substring(1)\n  //spaces to underscores\n  title = title.replace(/ /g, '_')\n  if (title) {\n    let obj = {\n      file: file\n    }\n    //try to grab other metadata, too\n    img = img.replace(/^\\[\\[/, '')\n    img = img.replace(/\\]\\]$/, '')\n\n    //https://en.wikipedia.org/wiki/Wikipedia:Extended_image_syntax\n    // - [[File:Name|Type|Border|Location|Alignment|Size|link=Link|alt=Alt|lang=Langtag|Caption]]\n    let imgData = parseTemplate(img)\n    let arr = imgData.list || []\n    //parse-out alt text, if explicitly given\n    if (imgData.alt) {\n      obj.alt = imgData.alt\n    }\n    //remove 'thumb' and things\n    arr = arr.filter(str => imgLayouts.hasOwnProperty(str) === false)\n    if (arr[arr.length - 1]) {\n      obj.caption = parseSentence(arr[arr.length - 1])\n    }\n    return new Image(obj, img)\n  }\n  return null\n}\n\nconst parseImages = function(paragraph) {\n  let wiki = paragraph.wiki\n\n  //parse+remove scary '[[ [[]] ]]' stuff\n  let matches = nested_find(wiki)\n  matches.forEach(function(s) {\n    if (isFile.test(s) === true) {\n      paragraph.images = paragraph.images || []\n      let img = oneImage(s)\n      if (img) {\n        paragraph.images.push(img)\n      }\n      wiki = wiki.replace(s, '')\n    }\n  })\n  paragraph.wiki = wiki\n}\nmodule.exports = parseImages\n","const setDefaults = require('../_lib/setDefaults')\nconst defaults = {}\n\nconst toText = (list, options) => {\n  return list\n    .map(s => {\n      let str = s.text(options)\n      return ' * ' + str\n    })\n    .join('\\n')\n}\n\nconst List = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  lines() {\n    return this.data\n  },\n  links(n) {\n    let links = []\n    this.lines().forEach(s => {\n      links = links.concat(s.links())\n    })\n    if (typeof n === 'number') {\n      return links[n]\n    } else if (typeof n === 'string') {\n      //grab a link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1) //titlecase it\n      let link = links.find(o => o.page() === n)\n      return link === undefined ? [] : [link]\n    }\n    return links\n  },\n  json(options) {\n    options = setDefaults(options, defaults)\n    return this.lines().map(s => s.json(options))\n  },\n  text() {\n    return toText(this.data)\n  }\n}\n\nObject.keys(methods).forEach(k => {\n  List.prototype[k] = methods[k]\n})\nmodule.exports = List\n","const List = require('./List')\nconst parseSentence = require('../04-sentence/').fromText\nconst list_reg = /^[#\\*:;\\|]+/\nconst bullet_reg = /^\\*+[^:,\\|]{4}/\nconst number_reg = /^ ?\\#[^:,\\|]{4}/\nconst has_word = /[a-z_0-9\\]\\}]/i\n\n// does it start with a bullet point or something?\nconst isList = function(line) {\n  return list_reg.test(line) || bullet_reg.test(line) || number_reg.test(line)\n}\n\n//make bullets/numbers into human-readable *'s\nconst cleanList = function(list) {\n  let number = 1\n  list = list.filter(l => l)\n  for (let i = 0; i < list.length; i++) {\n    let line = list[i]\n    //add # numberings formatting\n    if (line.match(number_reg)) {\n      line = line.replace(/^ ?#*/, number + ') ')\n      line = line + '\\n'\n      number += 1\n    } else if (line.match(list_reg)) {\n      number = 1\n      line = line.replace(list_reg, '')\n    }\n    list[i] = parseSentence(line)\n  }\n  return list\n}\n\nconst grabList = function(lines, i) {\n  let sub = []\n  for (let o = i; o < lines.length; o++) {\n    if (isList(lines[o])) {\n      sub.push(lines[o])\n    } else {\n      break\n    }\n  }\n  sub = sub.filter(a => a && has_word.test(a))\n  sub = cleanList(sub)\n  return sub\n}\n\nconst parseList = function(paragraph) {\n  let wiki = paragraph.wiki\n  let lines = wiki.split(/\\n/g)\n  // lines = lines.filter(l => has_word.test(l));\n  let lists = []\n  let theRest = []\n  for (let i = 0; i < lines.length; i++) {\n    if (isList(lines[i]) && lines[i + 1] && isList(lines[i + 1])) {\n      let sub = grabList(lines, i)\n      if (sub.length > 0) {\n        lists.push(sub)\n        i += sub.length - 1\n      }\n    } else {\n      theRest.push(lines[i])\n    }\n  }\n  paragraph.lists = lists.map(l => new List(l))\n  paragraph.wiki = theRest.join('\\n')\n}\nmodule.exports = parseList\n","const Paragraph = require('./Paragraph')\nconst find_recursive = require('../image/nested_find')\nconst parseSentences = require('../04-sentence').byParagraph\n\nconst twoNewLines = /\\r?\\n\\r?\\n/\nconst parse = {\n  image: require('../image'),\n  list: require('../list')\n}\n\nconst parseParagraphs = function(section, doc) {\n  let wiki = section.wiki\n  let paragraphs = wiki.split(twoNewLines)\n  //don't create empty paragraphs\n  paragraphs = paragraphs.filter(p => p && p.trim().length > 0)\n  paragraphs = paragraphs.map(str => {\n    let paragraph = {\n      wiki: str,\n      lists: [],\n      sentences: [],\n      images: []\n    }\n    //parse the lists\n    parse.list(paragraph)\n    // parse images\n    parse.image(paragraph)\n    //parse the sentences\n    parseSentences(paragraph)\n    return new Paragraph(paragraph)\n  })\n  section.wiki = wiki\n  section.paragraphs = paragraphs\n}\nmodule.exports = parseParagraphs\n","const encode = require('../_lib/encode')\n\n//turn an infobox into some nice json\nconst toJson = function(infobox, options) {\n  let json = Object.keys(infobox.data).reduce((h, k) => {\n    if (infobox.data[k]) {\n      h[k] = infobox.data[k].json()\n    }\n    return h\n  }, {})\n\n  //support mongo-encoding keys\n  if (options.encode === true) {\n    json = encode.encodeObj(json)\n  }\n  return json\n}\nmodule.exports = toJson\n","const toJson = require('./toJson')\nconst Image = require('../image/Image')\n\nconst normalize = str => {\n  str = str.toLowerCase()\n  str = str.replace(/[-_]/g, ' ')\n  return str.trim()\n}\n\n//a formal key-value data table about a topic\nconst Infobox = function(obj) {\n  this._type = obj.type\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: obj.data\n  })\n}\n\nconst methods = {\n  type: function() {\n    return this._type\n  },\n  links: function(n) {\n    let arr = []\n    Object.keys(this.data).forEach(k => {\n      this.data[k].links().forEach(l => arr.push(l))\n    })\n    if (typeof n === 'number') {\n      return arr[n]\n    } else if (typeof n === 'string') {\n      //grab a link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1) //titlecase it\n      let link = arr.find(o => o.page() === n)\n      return link === undefined ? [] : [link]\n    }\n    return arr\n  },\n  image: function() {\n    let s = this.get('image') || this.get('image2') || this.get('logo')\n    if (!s) {\n      return null\n    }\n    let obj = s.json()\n    obj.file = obj.text\n    obj.text = ''\n    return new Image(obj)\n  },\n  get: function(key = '') {\n    key = normalize(key)\n    let keys = Object.keys(this.data)\n    for (let i = 0; i < keys.length; i += 1) {\n      let tmp = normalize(keys[i])\n      if (key === tmp) {\n        return this.data[keys[i]]\n      }\n    }\n    return null\n  },\n  text: function() {\n    return ''\n  },\n  json: function(options) {\n    options = options || {}\n    return toJson(this, options)\n  },\n  keyValue: function() {\n    return Object.keys(this.data).reduce((h, k) => {\n      if (this.data[k]) {\n        h[k] = this.data[k].text()\n      }\n      return h\n    }, {})\n  }\n}\n//aliases\n\nObject.keys(methods).forEach(k => {\n  Infobox.prototype[k] = methods[k]\n})\nInfobox.prototype.data = Infobox.prototype.keyValue\nInfobox.prototype.template = Infobox.prototype.type\nInfobox.prototype.images = Infobox.prototype.image\nmodule.exports = Infobox\n","const open = '{'\nconst close = '}'\n\n//grab all first-level recursions of '{{...}}'\nconst findFlat = function(wiki) {\n  let depth = 0\n  let list = []\n  let carry = []\n  for (let i = wiki.indexOf(open); i !== -1 && i < wiki.length; depth > 0 ? i++ : (i = wiki.indexOf(open, i + 1))) {\n    let c = wiki[i]\n    //open it\n    if (c === open) {\n      depth += 1\n    }\n    //close it\n    if (depth > 0) {\n      if (c === close) {\n        depth -= 1\n        if (depth === 0) {\n          carry.push(c)\n          let tmpl = carry.join('')\n          carry = []\n          //last check\n          if (/\\{\\{/.test(tmpl) && /\\}\\}/.test(tmpl)) {\n            list.push(tmpl)\n          }\n          continue\n        }\n      }\n      //require two '{{' to open it\n      if (depth === 1 && c !== open && c !== close) {\n        depth = 0\n        carry = []\n        continue\n      }\n      carry.push(c)\n    }\n  }\n  return list\n}\nmodule.exports = findFlat\n","const fmtName = require('./_fmtName')\n//get the name of the template\n//templates are usually '{{name|stuff}}'\nconst getName = function(tmpl) {\n  let name = null\n  //{{name|foo}}\n  if (/^\\{\\{[^\\n]+\\|/.test(tmpl)) {\n    name = (tmpl.match(/^\\{\\{(.+?)\\|/) || [])[1]\n  } else if (tmpl.indexOf('\\n') !== -1) {\n    // {{name \\n...\n    name = (tmpl.match(/^\\{\\{(.+?)\\n/) || [])[1]\n  } else {\n    //{{name here}}\n    name = (tmpl.match(/^\\{\\{(.+?)\\}\\}$/) || [])[1]\n  }\n  if (name) {\n    name = name.replace(/:.*/, '')\n    name = fmtName(name)\n  }\n  return name || null\n}\nmodule.exports = getName\n","const findFlat = require('./flat')\nconst getName = require('../_parsers/_getName')\nconst hasTemplate = /\\{\\{/\n\nconst parseTemplate = function(tmpl) {\n  return {\n    body: tmpl,\n    name: getName(tmpl),\n    children: []\n  }\n}\n\nconst doEach = function(obj) {\n  // peel-off top-level\n  let wiki = obj.body.substr(2)\n  wiki = wiki.replace(/\\}\\}$/, '')\n\n  // get our child templates\n  obj.children = findFlat(wiki)\n  obj.children = obj.children.map(parseTemplate)\n\n  if (obj.children.length === 0) {\n    return obj\n  }\n  // recurse through children\n  obj.children.forEach(ch => {\n    let inside = ch.body.substr(2)\n    if (hasTemplate.test(inside)) {\n      return doEach(ch) //keep going\n    }\n    return null\n  })\n  return obj\n}\n\n// return a nested structure of all templates\nconst findTemplates = function(wiki) {\n  let list = findFlat(wiki)\n  list = list.map(parseTemplate)\n  list = list.map(doEach)\n  return list\n}\n\nmodule.exports = findTemplates\n","//we explicitly ignore these, because they sometimes have resolve some data\nconst list = [\n  //https://en.wikipedia.org/wiki/category:templates_with_no_visible_output\n  'anchor',\n  'defaultsort',\n  'use list-defined references',\n  'void',\n  //https://en.wikipedia.org/wiki/Category:Protection_templates\n  'pp',\n  'pp-move-indef',\n  'pp-semi-indef',\n  'pp-vandalism',\n  //https://en.wikipedia.org/wiki/Template:R\n  'r',\n  //out-of-scope still - https://en.wikipedia.org/wiki/Template:Tag\n  '#tag',\n  //https://en.wikipedia.org/wiki/Template:Navboxes\n  'navboxes',\n  'reflist',\n  'ref-list',\n  'div col',\n  // 'authority control',\n  //https://en.wikipedia.org/wiki/Template:Citation_needed\n  // 'better source',\n  // 'citation needed',\n  // 'clarify',\n  // 'cite quote',\n  // 'dead link',\n  // 'by whom',\n  // 'dubious',\n  // 'when',\n  // 'who',\n  // 'quantify',\n  // 'refimprove',\n  // 'weasel inline',\n  //https://en.wikipedia.org/wiki/Template:End\n  'pope list end',\n  'shipwreck list end',\n  'starbox end',\n  'end box',\n  'end',\n  's-end'\n]\nconst ignore = list.reduce((h, str) => {\n  h[str] = true\n  return h\n}, {})\nmodule.exports = ignore\n","const i18n = require('../_data/i18n')\nconst i18nReg = new RegExp('^(subst.)?(' + i18n.infoboxes.join('|') + ')[: \\n]', 'i')\n//some looser ones\nconst startReg = /^infobox /i\nconst endReg = / infobox$/i\nconst yearIn = /$Year in [A-Z]/i\n\n//some known ones from\n// https://en.wikipedia.org/wiki/Wikipedia:List_of_infoboxes\n// and https://en.wikipedia.org/wiki/Category:Infobox_templates\nconst known = {\n  'gnf protein box': true,\n  'automatic taxobox': true,\n  'chembox ': true,\n  editnotice: true,\n  geobox: true,\n  hybridbox: true,\n  ichnobox: true,\n  infraspeciesbox: true,\n  mycomorphbox: true,\n  oobox: true,\n  'paraphyletic group': true,\n  speciesbox: true,\n  subspeciesbox: true,\n  'starbox short': true,\n  taxobox: true,\n  nhlteamseason: true,\n  'asian games bid': true,\n  'canadian federal election results': true,\n  'dc thomson comic strip': true,\n  'daytona 24 races': true,\n  edencharacter: true,\n  'moldova national football team results': true,\n  samurai: true,\n  protein: true,\n  'sheet authority': true,\n  'order-of-approx': true,\n  'bacterial labs': true,\n  'medical resources': true,\n  ordination: true,\n  'hockey team coach': true,\n  'hockey team gm': true,\n  'hockey team player': true,\n  'hockey team start': true,\n  mlbbioret: true\n}\n//\nconst isInfobox = function(name) {\n  // known\n  if (known.hasOwnProperty(name) === true) {\n    return true\n  }\n  if (i18nReg.test(name)) {\n    return true\n  }\n  if (startReg.test(name) || endReg.test(name)) {\n    return true\n  }\n  //these are also infoboxes: 'Year in Belarus'\n  if (yearIn.test(name)) {\n    return true\n  }\n  return false\n}\n\n//turns template data into good inforbox data\nconst fmtInfobox = function(obj = {}) {\n  let m = obj.template.match(i18nReg)\n  let type = obj.template\n  if (m && m[0]) {\n    type = type.replace(m[0], '')\n  }\n  type = type.trim()\n  let infobox = {\n    template: 'infobox',\n    type: type,\n    data: obj\n  }\n  delete infobox.data.template // already have this.\n  delete infobox.data.list //just in case!\n  return infobox\n}\n\nmodule.exports = {\n  isInfobox: isInfobox,\n  format: fmtInfobox\n}\n","module.exports = [\n  undefined, //1-based months.. :/\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n]\n","//assorted parsing methods for date/time templates\nconst months = require('./_months')\n\nconst monthName = months.reduce((h, str, i) => {\n  if (i === 0) {\n    return h\n  }\n  h[str.toLowerCase()] = i\n  return h\n}, {})\n\n//parse year|month|date numbers\nconst ymd = function(arr) {\n  let obj = {}\n  let units = ['year', 'month', 'date', 'hour', 'minute', 'second']\n  //parse each unit in sequence..\n  for (let i = 0; i < units.length; i += 1) {\n    //skip it\n    if (!arr[i] && arr[1] !== 0) {\n      continue\n    }\n    let num = parseInt(arr[i], 10)\n    if (isNaN(num) === false) {\n      obj[units[i]] = num //we good.\n    } else if (units[i] === 'month' && monthName.hasOwnProperty(arr[i])) {\n      //try for month-name, like 'january\n      let month = monthName[arr[i]]\n      obj[units[i]] = month\n    } else {\n      //we dead. so skip this unit\n      delete obj[units[i]]\n    }\n  }\n  //try for timezone,too ftw\n  let last = arr[arr.length - 1] || ''\n  last = String(last)\n  if (last.toLowerCase() === 'z') {\n    obj.tz = 'UTC'\n  } else if (/[+-][0-9]+:[0-9]/.test(last)) {\n    obj.tz = arr[6]\n  }\n  return obj\n}\n\n//zero-pad a number\nconst pad = function(num) {\n  if (num < 10) {\n    return '0' + num\n  }\n  return String(num)\n}\n\nconst toText = function(date) {\n  //eg '1995'\n  let str = String(date.year || '')\n  if (date.month !== undefined && months.hasOwnProperty(date.month) === true) {\n    if (date.date === undefined) {\n      //January 1995\n      str = `${months[date.month]} ${date.year}`\n    } else {\n      //January 5, 1995\n      str = `${months[date.month]} ${date.date}, ${date.year}`\n      //add times, if available\n      if (date.hour !== undefined && date.minute !== undefined) {\n        let time = `${pad(date.hour)}:${pad(date.minute)}`\n        if (date.second !== undefined) {\n          time = time + ':' + pad(date.second)\n        }\n        str = time + ', ' + str\n        //add timezone, if there, at the end in brackets\n      }\n      if (date.tz) {\n        str += ` (${date.tz})`\n      }\n    }\n  }\n  return str\n}\n\nmodule.exports = {\n  toText: toText,\n  ymd: ymd\n}\n\n// console.log(toText(ymd([2018, 3, 28])));\n","const format = require('./_format')\nconst parse = require('../../_parsers/parse')\n\nconst misc = {\n  reign: tmpl => {\n    let order = ['start', 'end']\n    let obj = parse(tmpl, order)\n    return `(r. ${obj.start} – ${obj.end})`\n  },\n  circa: tmpl => {\n    let obj = parse(tmpl, ['year'])\n    return `c. ${obj.year}`\n  },\n  //we can't do timezones, so fake this one a little bit\n  //https://en.wikipedia.org/wiki/Template:Time\n  time: () => {\n    let d = new Date()\n    let obj = format.ymd([d.getFullYear(), d.getMonth(), d.getDate()])\n    return format.toText(obj)\n  },\n  monthname: 0,\n  //https://en.wikipedia.org/wiki/Template:OldStyleDate\n  oldstyledate: tmpl => {\n    let order = ['date', 'year']\n    let obj = parse(tmpl, order)\n    let str = obj.date\n    if (obj.year) {\n      str += ' ' + obj.year\n    }\n    return str\n  }\n}\nmodule.exports = misc\n","//this is allowed to be rough\nconst day = 1000 * 60 * 60 * 24\nconst month = day * 30\nconst year = day * 365\n\nconst getEpoch = function(obj) {\n  return new Date(`${obj.year}-${obj.month || 0}-${obj.date || 1}`).getTime()\n}\n\n//very rough!\nconst delta = function(from, to) {\n  from = getEpoch(from)\n  to = getEpoch(to)\n  let diff = to - from\n  let obj = {}\n  //get years\n  let years = Math.floor(diff / year, 10)\n  if (years > 0) {\n    obj.years = years\n    diff -= obj.years * year\n  }\n  //get months\n  let months = Math.floor(diff / month, 10)\n  if (months > 0) {\n    obj.months = months\n    diff -= obj.months * month\n  }\n  //get days\n  let days = Math.floor(diff / day, 10)\n  if (days > 0) {\n    obj.days = days\n    // diff -= (obj.days * day);\n  }\n  return obj\n}\n\nmodule.exports = delta\n","const strip = require('../../_parsers/_strip')\nconst parse = require('../../_parsers/parse')\nconst delta = require('./_delta')\nconst fmt = require('./_format')\nconst ymd = fmt.ymd\nconst toText = fmt.toText\n\n//wrap it up as a template\nconst template = function(date) {\n  return {\n    template: 'date',\n    data: date\n  }\n}\n\nconst getBoth = function(tmpl) {\n  tmpl = strip(tmpl)\n  let arr = tmpl.split('|')\n  let from = ymd(arr.slice(1, 4))\n  let to = arr.slice(4, 7)\n  //assume now, if 'to' is empty\n  if (to.length === 0) {\n    let d = new Date()\n    to = [d.getFullYear(), d.getMonth(), d.getDate()]\n  }\n  to = ymd(to)\n  return {\n    from: from,\n    to: to\n  }\n}\n\nconst parsers = {\n  //generic {{date|year|month|date}} template\n  date: (tmpl, list) => {\n    let order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'timezone']\n    let obj = parse(tmpl, order)\n    let data = ymd([obj.year, obj.month, obj.date || obj.day])\n    obj.text = toText(data) //make the replacement string\n    if (obj.timezone) {\n      if (obj.timezone === 'Z') {\n        obj.timezone = 'UTC'\n      }\n      obj.text += ` (${obj.timezone})`\n    }\n    if (obj.hour && obj.minute) {\n      if (obj.second) {\n        obj.text = `${obj.hour}:${obj.minute}:${obj.second}, ` + obj.text\n      } else {\n        obj.text = `${obj.hour}:${obj.minute}, ` + obj.text\n      }\n    }\n    if (obj.text) {\n      list.push(template(obj))\n    }\n    return obj.text\n  },\n\n  //support parsing of 'February 10, 1992'\n  natural_date: (tmpl, list) => {\n    let order = ['text']\n    let obj = parse(tmpl, order)\n    let str = obj.text || ''\n    // - just a year\n    let date = {}\n    if (/^[0-9]{4}$/.test(str)) {\n      date.year = parseInt(str, 10)\n    } else {\n      //parse the date, using the js date object (for now?)\n      let txt = str.replace(/[a-z]+\\/[a-z]+/i, '')\n      txt = txt.replace(/[0-9]+:[0-9]+(am|pm)?/i, '')\n      let d = new Date(txt)\n      if (isNaN(d.getTime()) === false) {\n        date.year = d.getFullYear()\n        date.month = d.getMonth() + 1\n        date.date = d.getDate()\n      }\n    }\n    list.push(template(date))\n    return str.trim()\n  },\n\n  //just grab the first value, and assume it's a year\n  one_year: (tmpl, list) => {\n    let order = ['year']\n    let obj = parse(tmpl, order)\n    let year = Number(obj.year)\n    list.push(\n      template({\n        year: year\n      })\n    )\n    return String(year)\n  },\n\n  //assume 'y|m|d' | 'y|m|d' // {{BirthDeathAge|B|1976|6|6|1990|8|8}}\n  two_dates: (tmpl, list) => {\n    let order = [\n      'b',\n      'birth_year',\n      'birth_month',\n      'birth_date',\n      'death_year',\n      'death_month',\n      'death_date'\n    ]\n    let obj = parse(tmpl, order)\n    //'b' means show birth-date, otherwise show death-date\n    if (obj.b && obj.b.toLowerCase() === 'b') {\n      let date = ymd([obj.birth_year, obj.birth_month, obj.birth_date])\n      list.push(template(date))\n      return toText(date)\n    }\n    let date = ymd([obj.death_year, obj.death_month, obj.death_date])\n    list.push(template(date))\n    return toText(date)\n  },\n\n  age: tmpl => {\n    let d = getBoth(tmpl)\n    let diff = delta(d.from, d.to)\n    return diff.years || 0\n  },\n\n  'diff-y': tmpl => {\n    let d = getBoth(tmpl)\n    let diff = delta(d.from, d.to)\n    if (diff.years === 1) {\n      return diff.years + ' year'\n    }\n    return (diff.years || 0) + ' years'\n  },\n  'diff-ym': tmpl => {\n    let d = getBoth(tmpl)\n    let diff = delta(d.from, d.to)\n    let arr = []\n    if (diff.years === 1) {\n      arr.push(diff.years + ' year')\n    } else if (diff.years && diff.years !== 0) {\n      arr.push(diff.years + ' years')\n    }\n    if (diff.months === 1) {\n      arr.push('1 month')\n    } else if (diff.months && diff.months !== 0) {\n      arr.push(diff.months + ' months')\n    }\n    return arr.join(', ')\n  },\n  'diff-ymd': tmpl => {\n    let d = getBoth(tmpl)\n    let diff = delta(d.from, d.to)\n    let arr = []\n    if (diff.years === 1) {\n      arr.push(diff.years + ' year')\n    } else if (diff.years && diff.years !== 0) {\n      arr.push(diff.years + ' years')\n    }\n    if (diff.months === 1) {\n      arr.push('1 month')\n    } else if (diff.months && diff.months !== 0) {\n      arr.push(diff.months + ' months')\n    }\n    if (diff.days === 1) {\n      arr.push('1 day')\n    } else if (diff.days && diff.days !== 0) {\n      arr.push(diff.days + ' days')\n    }\n    return arr.join(', ')\n  },\n  'diff-yd': tmpl => {\n    let d = getBoth(tmpl)\n    let diff = delta(d.from, d.to)\n    let arr = []\n    if (diff.years === 1) {\n      arr.push(diff.years + ' year')\n    } else if (diff.years && diff.years !== 0) {\n      arr.push(diff.years + ' years')\n    }\n    //ergh...\n    diff.days += (diff.months || 0) * 30\n    if (diff.days === 1) {\n      arr.push('1 day')\n    } else if (diff.days && diff.days !== 0) {\n      arr.push(diff.days + ' days')\n    }\n    return arr.join(', ')\n  },\n  'diff-d': tmpl => {\n    let d = getBoth(tmpl)\n    let diff = delta(d.from, d.to)\n    let arr = []\n    //ergh...\n    diff.days += (diff.years || 0) * 365\n    diff.days += (diff.months || 0) * 30\n    if (diff.days === 1) {\n      arr.push('1 day')\n    } else if (diff.days && diff.days !== 0) {\n      arr.push(diff.days + ' days')\n    }\n    return arr.join(', ')\n  }\n}\nmodule.exports = parsers\n","//not all too fancy - used in {{timesince}}\nconst timeSince = function(str) {\n  let d = new Date(str)\n  if (isNaN(d.getTime())) {\n    return ''\n  }\n  let now = new Date()\n  let delta = now.getTime() - d.getTime()\n  let predicate = 'ago'\n  if (delta < 0) {\n    predicate = 'from now'\n    delta = Math.abs(delta)\n  }\n  //figure out units\n  let hours = delta / 1000 / 60 / 60\n  let days = hours / 24\n  if (days < 365) {\n    return parseInt(days, 10) + ' days ' + predicate\n  }\n  let years = days / 365\n  return parseInt(years, 10) + ' years ' + predicate\n}\nmodule.exports = timeSince\n","const misc = require('./misc')\nconst parsers = require('./parsers')\nconst parse = require('../../_parsers/parse')\nconst timeSince = require('./_timeSince')\nconst format = require('./_format')\nconst date = parsers.date\nconst natural_date = parsers.natural_date\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n]\nconst days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n\n//date- templates we support\nlet dateTmpl = Object.assign({}, misc, {\n  currentday: () => {\n    let d = new Date()\n    return String(d.getDate())\n  },\n  currentdayname: () => {\n    let d = new Date()\n    return days[d.getDay()]\n  },\n  currentmonth: () => {\n    let d = new Date()\n    return months[d.getMonth()]\n  },\n  currentyear: () => {\n    let d = new Date()\n    return String(d.getFullYear())\n  },\n  monthyear: () => {\n    let d = new Date()\n    return months[d.getMonth()] + ' ' + d.getFullYear()\n  },\n  'monthyear-1': () => {\n    let d = new Date()\n    d.setMonth(d.getMonth() - 1)\n    return months[d.getMonth()] + ' ' + d.getFullYear()\n  },\n  'monthyear+1': () => {\n    let d = new Date()\n    d.setMonth(d.getMonth() + 1)\n    return months[d.getMonth()] + ' ' + d.getFullYear()\n  },\n  //Explictly-set dates - https://en.wikipedia.org/wiki/Template:Date\n  date: 0,\n  'time ago': tmpl => {\n    let order = ['date', 'fmt']\n    let time = parse(tmpl, order).date\n    return timeSince(time)\n  },\n  //https://en.wikipedia.org/wiki/Template:Birth_date_and_age\n  'birth date and age': (tmpl, list) => {\n    let order = ['year', 'month', 'day']\n    let obj = parse(tmpl, order)\n    //support 'one property' version\n    if (obj.year && /[a-z]/i.test(obj.year)) {\n      return natural_date(tmpl, list)\n    }\n    list.push(obj)\n    obj = format.ymd([obj.year, obj.month, obj.day])\n    return format.toText(obj)\n  },\n  'birth year and age': (tmpl, list) => {\n    let order = ['birth_year', 'birth_month']\n    let obj = parse(tmpl, order)\n    //support 'one property' version\n    if (obj.death_year && /[a-z]/i.test(obj.death_year)) {\n      return natural_date(tmpl, list)\n    }\n    list.push(obj)\n    let age = new Date().getFullYear() - parseInt(obj.birth_year, 10)\n    obj = format.ymd([obj.birth_year, obj.birth_month])\n    let str = format.toText(obj)\n    if (age) {\n      str += ` (age ${age})`\n    }\n    return str\n  },\n  'death year and age': (tmpl, list) => {\n    let order = ['death_year', 'birth_year', 'death_month']\n    let obj = parse(tmpl, order)\n    //support 'one property' version\n    if (obj.death_year && /[a-z]/i.test(obj.death_year)) {\n      return natural_date(tmpl, list)\n    }\n    list.push(obj)\n    obj = format.ymd([obj.death_year, obj.death_month])\n    return format.toText(obj)\n  },\n  //https://en.wikipedia.org/wiki/Template:Birth_date_and_age2\n  'birth date and age2': (tmpl, list) => {\n    let order = ['at_year', 'at_month', 'at_day', 'birth_year', 'birth_month', 'birth_day']\n    let obj = parse(tmpl, order)\n    list.push(obj)\n    obj = format.ymd([obj.birth_year, obj.birth_month, obj.birth_day])\n    return format.toText(obj)\n  },\n  //https://en.wikipedia.org/wiki/Template:Birth_based_on_age_as_of_date\n  'birth based on age as of date': (tmpl, list) => {\n    let order = ['age', 'year', 'month', 'day']\n    let obj = parse(tmpl, order)\n    list.push(obj)\n    let age = parseInt(obj.age, 10)\n    let year = parseInt(obj.year, 10)\n    let born = year - age\n    if (born && age) {\n      return `${born} (age ${obj.age})`\n    }\n    return `(age ${obj.age})`\n  },\n  //https://en.wikipedia.org/wiki/Template:Death_date_and_given_age\n  'death date and given age': (tmpl, list) => {\n    let order = ['year', 'month', 'day', 'age']\n    let obj = parse(tmpl, order)\n    list.push(obj)\n    obj = format.ymd([obj.year, obj.month, obj.day])\n    let str = format.toText(obj)\n    if (obj.age) {\n      str += ` (age ${obj.age})`\n    }\n    return str\n  },\n  //sortable dates -\n  dts: tmpl => {\n    //remove formatting stuff, ewww\n    tmpl = tmpl.replace(/\\|format=[ymd]+/i, '')\n    tmpl = tmpl.replace(/\\|abbr=(on|off)/i, '')\n    let order = ['year', 'month', 'date', 'bc']\n    let obj = parse(tmpl, order)\n    if (obj.date && obj.month && obj.year) {\n      //render 'june 5 2018'\n      if (/[a-z]/.test(obj.month) === true) {\n        return [obj.month, obj.date, obj.year].join(' ')\n      }\n      return [obj.year, obj.month, obj.date].join('-')\n    }\n    if (obj.month && obj.year) {\n      return [obj.year, obj.month].join('-')\n    }\n    if (obj.year) {\n      if (obj.year < 0) {\n        obj.year = Math.abs(obj.year) + ' BC'\n      }\n      return obj.year\n    }\n    return ''\n  },\n  //date/age/time templates\n  start: date,\n  end: date,\n  birth: date,\n  death: date,\n  'start date': date,\n  'end date': date,\n  'birth date': date,\n  'death date': date,\n  'start date and age': date,\n  'end date and age': date,\n  //this is insane (hyphen ones are different)\n  'start-date': natural_date,\n  'end-date': natural_date,\n  'birth-date': natural_date,\n  'death-date': natural_date,\n  'birth-date and age': natural_date,\n  'birth-date and given age': natural_date,\n  'death-date and age': natural_date,\n  'death-date and given age': natural_date,\n\n  birthdeathage: parsers.two_dates,\n  dob: date,\n  // 'birth date and age2': date,\n\n  age: parsers.age,\n  'age nts': parsers.age,\n  'age in years': parsers['diff-y'],\n  'age in years and months': parsers['diff-ym'],\n  'age in years, months and days': parsers['diff-ymd'],\n  'age in years and days': parsers['diff-yd'],\n  'age in days': parsers['diff-d']\n  // 'age in years, months, weeks and days': true,\n  // 'age as of date': true,\n})\n//aliases\ndateTmpl.localday = dateTmpl.currentday\ndateTmpl.localdayname = dateTmpl.currentdayname\ndateTmpl.localmonth = dateTmpl.currentmonth\ndateTmpl.localyear = dateTmpl.currentyear\ndateTmpl.currentmonthname = dateTmpl.currentmonth\ndateTmpl.currentmonthabbrev = dateTmpl.currentmonth\ndateTmpl['death date and age'] = dateTmpl['birth date and age']\ndateTmpl.bda = dateTmpl['birth date and age']\ndateTmpl['birth date based on age at death'] = dateTmpl['birth based on age as of date']\nmodule.exports = dateTmpl\n","const parse = require('../../_parsers/parse')\n\nlet templates = {\n  //a convulated way to make a xml tag - https://en.wikipedia.org/wiki/Template:Tag\n  tag: tmpl => {\n    let obj = parse(tmpl, ['tag', 'open'])\n    const ignore = {\n      span: true,\n      div: true,\n      p: true\n    }\n    //pair, empty, close, single\n    if (!obj.open || obj.open === 'pair') {\n      //just skip generating spans and things..\n      if (ignore[obj.tag]) {\n        return obj.content || ''\n      }\n      return `<${obj.tag} ${obj.attribs || ''}>${obj.content || ''}</${obj.tag}>`\n    }\n    return ''\n  },\n  //dumb inflector - https://en.wikipedia.org/wiki/Template:Plural\n  plural: tmpl => {\n    tmpl = tmpl.replace(/plural:/, 'plural|')\n    let order = ['num', 'word']\n    let obj = parse(tmpl, order)\n    let num = Number(obj.num)\n    let word = obj.word\n    if (num !== 1) {\n      if (/.y$/.test(word)) {\n        word = word.replace(/y$/, 'ies')\n      } else {\n        word += 's'\n      }\n    }\n    return num + ' ' + word\n  },\n  // https://en.wikipedia.org/wiki/Template:First_word\n  'first word': tmpl => {\n    let obj = parse(tmpl, ['text'])\n    let str = obj.text\n    if (obj.sep) {\n      return str.split(obj.sep)[0]\n    }\n    return str.split(' ')[0]\n  },\n  trunc: tmpl => {\n    let order = ['str', 'len']\n    let obj = parse(tmpl, order)\n    return obj.str.substr(0, obj.len)\n  },\n  'str mid': tmpl => {\n    let order = ['str', 'start', 'end']\n    let obj = parse(tmpl, order)\n    let start = parseInt(obj.start, 10) - 1\n    let end = parseInt(obj.end, 10)\n    return obj.str.substr(start, end)\n  },\n  //grab the first, second or third pipe\n  p1: 0,\n  p2: 1,\n  p3: 2,\n  //formatting things - https://en.wikipedia.org/wiki/Template:Nobold\n  braces: tmpl => {\n    let obj = parse(tmpl, ['text'])\n    let attrs = ''\n    if (obj.list) {\n      attrs = '|' + obj.list.join('|')\n    }\n    return '{{' + (obj.text || '') + attrs + '}}'\n  },\n  nobold: 0,\n  noitalic: 0,\n  nocaps: 0,\n  syntaxhighlight: (tmpl, list) => {\n    let obj = parse(tmpl)\n    list.push(obj)\n    return obj.code || ''\n  },\n  samp: (tmpl, list) => {\n    let obj = parse(tmpl, ['1'])\n    list.push(obj)\n    return obj['1'] || ''\n  },\n  //https://en.wikipedia.org/wiki/Template:Visible_anchor\n  vanchor: 0,\n  //https://en.wikipedia.org/wiki/Template:Resize\n  resize: 1,\n  //https://en.wikipedia.org/wiki/Template:Ra\n  ra: tmpl => {\n    let obj = parse(tmpl, ['hours', 'minutes', 'seconds'])\n    return [obj.hours || 0, obj.minutes || 0, obj.seconds || 0].join(':')\n  },\n  //https://en.wikipedia.org/wiki/Template:Deg2HMS\n  deg2hms: tmpl => {\n    //this template should do the conversion\n    let obj = parse(tmpl, ['degrees'])\n    return (obj.degrees || '') + '°'\n  },\n  hms2deg: tmpl => {\n    //this template should do the conversion too\n    let obj = parse(tmpl, ['hours', 'minutes', 'seconds'])\n    return [obj.hours || 0, obj.minutes || 0, obj.seconds || 0].join(':')\n  },\n  decdeg: tmpl => {\n    //this template should do the conversion too\n    let obj = parse(tmpl, ['deg', 'min', 'sec', 'hem', 'rnd'])\n    return (obj.deg || obj.degrees) + '°'\n  },\n  rnd: 0,\n  //https://en.wikipedia.org/wiki/Template:DEC\n  dec: tmpl => {\n    let obj = parse(tmpl, ['degrees', 'minutes', 'seconds'])\n    let str = (obj.degrees || 0) + '°'\n    if (obj.minutes) {\n      str += obj.minutes + `′`\n    }\n    if (obj.seconds) {\n      str += obj.seconds + '″'\n    }\n    return str\n  },\n  //https://en.wikipedia.org/wiki/Template:Val\n  val: tmpl => {\n    let obj = parse(tmpl, ['number', 'uncertainty'])\n    let num = obj.number\n    if (num && Number(num)) {\n      num = Number(num).toLocaleString()\n    }\n    let str = num || ''\n    //prefix/suffix\n    if (obj.p) {\n      str = obj.p + str\n    }\n    if (obj.s) {\n      str = obj.s + str\n    }\n    //add units, too\n    if (obj.u || obj.ul || obj.upl) {\n      str = str + ' ' + (obj.u || obj.ul || obj.upl)\n    }\n    return str\n  }\n}\n\n//aliases\ntemplates['rndfrac'] = templates.rnd\ntemplates['rndnear'] = templates.rnd\ntemplates['unité'] = templates.val\n\n//templates that we simply grab their insides as plaintext\nlet inline = [\n  'nowrap',\n  'nobr',\n  'big',\n  'cquote',\n  'pull quote',\n  'small',\n  'smaller',\n  'midsize',\n  'larger',\n  'big',\n  'kbd',\n  'bigger',\n  'large',\n  'mono',\n  'strongbad',\n  'stronggood',\n  'huge',\n  'xt',\n  'xt2',\n  '!xt',\n  'xtn',\n  'xtd',\n  'dc',\n  'dcr',\n  'mxt',\n  '!mxt',\n  'mxtn',\n  'mxtd',\n  'bxt',\n  '!bxt',\n  'bxtn',\n  'bxtd',\n  'delink', //https://en.wikipedia.org/wiki/Template:Delink\n  //half-supported\n  'pre',\n  'var',\n  'mvar',\n  'pre2',\n  'code'\n]\ninline.forEach(k => {\n  templates[k] = tmpl => {\n    return parse(tmpl, ['text']).text || ''\n  }\n})\n\nmodule.exports = templates\n","const strip = require('../../_parsers/_strip')\nconst parse = require('../../_parsers/parse')\n\nconst tmpls = {\n  //a strange, newline-based list - https://en.wikipedia.org/wiki/Template:Plainlist\n  plainlist: tmpl => {\n    tmpl = strip(tmpl)\n    //remove the title\n    let arr = tmpl.split('|')\n    arr = arr.slice(1)\n    tmpl = arr.join('|')\n    //split on newline\n    arr = tmpl.split(/\\n ?\\* ?/)\n    arr = arr.filter(s => s)\n    return arr.join('\\n\\n')\n  },\n\n  //show/hide: https://en.wikipedia.org/wiki/Template:Collapsible_list\n  'collapsible list': (tmpl, list) => {\n    let obj = parse(tmpl)\n    list.push(obj)\n    let str = ''\n    if (obj.title) {\n      str += `'''${obj.title}'''` + '\\n\\n'\n    }\n    if (!obj.list) {\n      obj.list = []\n      for (let i = 1; i < 10; i += 1) {\n        if (obj[i]) {\n          obj.list.push(obj[i])\n          delete obj[i]\n        }\n      }\n    }\n    obj.list = obj.list.filter(s => s)\n    str += obj.list.join('\\n\\n')\n    return str\n  },\n  // https://en.wikipedia.org/wiki/Template:Ordered_list\n  'ordered list': (tmpl, list) => {\n    let obj = parse(tmpl)\n    list.push(obj)\n    obj.list = obj.list || []\n    let lines = obj.list.map((str, i) => `${i + 1}. ${str}`)\n    return lines.join('\\n\\n')\n  },\n  hlist: tmpl => {\n    let obj = parse(tmpl)\n    obj.list = obj.list || []\n    return obj.list.join(' · ')\n  },\n  pagelist: tmpl => {\n    let arr = parse(tmpl).list || []\n    return arr.join(', ')\n  },\n  //actually rendering these links removes the text.\n  //https://en.wikipedia.org/wiki/Template:Catlist\n  catlist: tmpl => {\n    let arr = parse(tmpl).list || []\n    return arr.join(', ')\n  },\n  //https://en.wikipedia.org/wiki/Template:Br_separated_entries\n  'br separated entries': tmpl => {\n    let arr = parse(tmpl).list || []\n    return arr.join('\\n\\n')\n  },\n  'comma separated entries': tmpl => {\n    let arr = parse(tmpl).list || []\n    return arr.join(', ')\n  },\n  //https://en.wikipedia.org/wiki/Template:Bare_anchored_list\n  'anchored list': tmpl => {\n    let arr = parse(tmpl).list || []\n    arr = arr.map((str, i) => `${i + 1}. ${str}`)\n    return arr.join('\\n\\n')\n  },\n  'bulleted list': tmpl => {\n    let arr = parse(tmpl).list || []\n    arr = arr.filter(f => f)\n    arr = arr.map(str => '• ' + str)\n    return arr.join('\\n\\n')\n  },\n  //https://en.wikipedia.org/wiki/Template:Columns-list\n  'columns-list': (tmpl, list) => {\n    let arr = parse(tmpl).list || []\n    let str = arr[0] || ''\n    let lines = str.split(/\\n/)\n    lines = lines.filter(f => f)\n    lines = lines.map(s => s.replace(/\\*/, ''))\n    list.push({\n      template: 'columns-list',\n      list: lines\n    })\n    lines = lines.map(s => '• ' + s)\n    return lines.join('\\n\\n')\n  }\n  // 'pagelist':(tmpl)=>{},\n}\n//aliases\ntmpls.flatlist = tmpls.plainlist\ntmpls.ublist = tmpls.plainlist\ntmpls['unbulleted list'] = tmpls['collapsible list']\ntmpls['ubl'] = tmpls['collapsible list']\ntmpls['bare anchored list'] = tmpls['anchored list']\ntmpls['plain list'] = tmpls['plainlist']\ntmpls.cmn = tmpls['columns-list']\ntmpls.collist = tmpls['columns-list']\ntmpls['col-list'] = tmpls['columns-list']\ntmpls.columnslist = tmpls['columns-list']\nmodule.exports = tmpls\n","const parse = require('../../_parsers/parse')\n\nconst inline = {\n  //https://en.wikipedia.org/wiki/Template:Convert#Ranges_of_values\n  convert: tmpl => {\n    let order = ['num', 'two', 'three', 'four']\n    let obj = parse(tmpl, order)\n    //todo: support plural units\n    if (obj.two === '-' || obj.two === 'to' || obj.two === 'and') {\n      if (obj.four) {\n        return `${obj.num} ${obj.two} ${obj.three} ${obj.four}`\n      }\n      return `${obj.num} ${obj.two} ${obj.three}`\n    }\n    return `${obj.num} ${obj.two}`\n  },\n  //https://en.wikipedia.org/wiki/Template:Term\n  term: tmpl => {\n    let obj = parse(tmpl, ['term'])\n    return `${obj.term}:`\n  },\n  defn: 0,\n  //https://en.wikipedia.org/wiki/Template:Linum\n  lino: 0,\n  linum: tmpl => {\n    let obj = parse(tmpl, ['num', 'text'])\n    return `${obj.num}. ${obj.text}`\n  },\n  //https://en.wikipedia.org/wiki/Template:Interlanguage_link\n  ill: tmpl => {\n    let order = ['text', 'lan1', 'text1', 'lan2', 'text2']\n    let obj = parse(tmpl, order)\n    return obj.text\n  },\n  //https://en.wikipedia.org/wiki/Template:Frac\n  frac: tmpl => {\n    let order = ['a', 'b', 'c']\n    let obj = parse(tmpl, order)\n    if (obj.c) {\n      return `${obj.a} ${obj.b}/${obj.c}`\n    }\n    if (obj.b) {\n      return `${obj.a}/${obj.b}`\n    }\n    return `1/${obj.b}`\n  },\n  //https://en.wikipedia.org/wiki/Template:Height - {{height|ft=6|in=1}}\n  height: (tmpl, list) => {\n    let obj = parse(tmpl)\n    list.push(obj)\n    let result = []\n    let units = ['m', 'cm', 'ft', 'in'] //order matters\n    units.forEach(unit => {\n      if (obj.hasOwnProperty(unit) === true) {\n        result.push(obj[unit] + unit)\n      }\n    })\n    return result.join(' ')\n  },\n  'block indent': tmpl => {\n    let obj = parse(tmpl)\n    if (obj['1']) {\n      return '\\n' + obj['1'] + '\\n'\n    }\n    return ''\n  },\n  quote: (tmpl, list) => {\n    let order = ['text', 'author']\n    let obj = parse(tmpl, order)\n    list.push(obj)\n    //create plaintext version\n    if (obj.text) {\n      let str = `\"${obj.text}\"`\n      if (obj.author) {\n        str += '\\n\\n'\n        str += `    - ${obj.author}`\n      }\n      return str + '\\n'\n    }\n    return ''\n  },\n\n  //https://en.wikipedia.org/wiki/Template:Lbs\n  lbs: tmpl => {\n    let obj = parse(tmpl, ['text'])\n    return `[[${obj.text} Lifeboat Station|${obj.text}]]`\n  },\n  //Foo-class\n  lbc: tmpl => {\n    let obj = parse(tmpl, ['text'])\n    return `[[${obj.text}-class lifeboat|${obj.text}-class]]`\n  },\n  lbb: tmpl => {\n    let obj = parse(tmpl, ['text'])\n    return `[[${obj.text}-class lifeboat|${obj.text}]]`\n  },\n  // https://en.wikipedia.org/wiki/Template:Own\n  own: tmpl => {\n    let obj = parse(tmpl, ['author'])\n    let str = 'Own work'\n    if (obj.author) {\n      str += ' by ' + obj.author\n    }\n    return str\n  },\n  //https://en.wikipedia.org/wiki/Template:Sic\n  sic: (tmpl, list) => {\n    let obj = parse(tmpl, ['one', 'two', 'three'])\n    let word = (obj.one || '') + (obj.two || '')\n    //support '[sic?]'\n    if (obj.one === '?') {\n      word = (obj.two || '') + (obj.three || '')\n    }\n    list.push({\n      template: 'sic',\n      word: word\n    })\n    if (obj.nolink === 'y') {\n      return word\n    }\n    return `${word} [sic]`\n  },\n  //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n  formatnum: tmpl => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['number'])\n    let str = obj.number || ''\n    str = str.replace(/,/g, '')\n    let num = Number(str)\n    return num.toLocaleString() || ''\n  },\n  //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n  '#dateformat': tmpl => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['date', 'format'])\n    return obj.date\n  },\n  //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n  lc: tmpl => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['text'])\n    return (obj.text || '').toLowerCase()\n  },\n  lcfirst: tmpl => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['text'])\n    let text = obj.text\n    if (!text) {\n      return ''\n    }\n    return text[0].toLowerCase() + text.substr(1)\n  },\n  //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n  uc: tmpl => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['text'])\n    return (obj.text || '').toUpperCase()\n  },\n  ucfirst: tmpl => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['text'])\n    let text = obj.text\n    if (!text) {\n      return ''\n    }\n    return text[0].toUpperCase() + text.substr(1)\n  },\n  padleft: tmpl => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['text', 'num'])\n    let text = obj.text || ''\n    return text.padStart(obj.num, obj.str || '0')\n  },\n  padright: tmpl => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['text', 'num'])\n    let text = obj.text || ''\n    return text.padEnd(obj.num, obj.str || '0')\n  },\n  //abbreviation/meaning\n  //https://en.wikipedia.org/wiki/Template:Abbr\n  abbr: tmpl => {\n    let obj = parse(tmpl, ['abbr', 'meaning', 'ipa'])\n    return obj.abbr\n  },\n  //https://en.wikipedia.org/wiki/Template:Abbrlink\n  abbrlink: tmpl => {\n    let obj = parse(tmpl, ['abbr', 'page'])\n    if (obj.page) {\n      return `[[${obj.page}|${obj.abbr}]]`\n    }\n    return `[[${obj.abbr}]]`\n  },\n  //https://en.wikipedia.org/wiki/Template:Hover_title\n  //technically 'h:title'\n  h: 1,\n  //https://en.wikipedia.org/wiki/Template:Finedetail\n  finedetail: 0,\n  //https://en.wikipedia.org/wiki/Template:Sort\n  sort: 1\n}\n\n//aliases\ninline['str left'] = inline.trunc\ninline['str crop'] = inline.trunc\ninline['tooltip'] = inline.abbr\ninline['abbrv'] = inline.abbr\ninline['define'] = inline.abbr\ninline['cvt'] = inline.convert\n\nmodule.exports = inline\n","module.exports = Object.assign({}, require('./format'), require('./lists'), require('./misc'))\n","//converts DMS (decimal-minute-second) geo format to lat/lng format.\n//major thank you to https://github.com/gmaclennan/parse-dms\n//and https://github.com/WSDOT-GIS/dms-js 👏\n\n//accepts an array of descending Degree, Minute, Second values, with a hemisphere at the end\n//must have N/S/E/W as last thing\nfunction parseDms(arr) {\n  let hemisphere = arr.pop()\n  let degrees = Number(arr[0] || 0)\n  let minutes = Number(arr[1] || 0)\n  let seconds = Number(arr[2] || 0)\n  if (typeof hemisphere !== 'string' || isNaN(degrees)) {\n    return null\n  }\n  let sign = 1\n  if (/[SW]/i.test(hemisphere)) {\n    sign = -1\n  }\n  let decDeg = sign * (degrees + minutes / 60 + seconds / 3600)\n  return decDeg\n}\nmodule.exports = parseDms\n// console.log(parseDms([57, 18, 22, 'N']));\n// console.log(parseDms([4, 27, 32, 'W']));\n","const convertDMS = require('./dms-format')\nconst parse = require('../../_parsers/parse')\n\nconst round = function(num) {\n  if (typeof num !== 'number') {\n    return num\n  }\n  let places = 100000\n  return Math.round(num * places) / places\n}\n\n//these hemispheres mean negative decimals\nconst negative = {\n  s: true,\n  w: true\n}\n\nconst findLatLng = function(arr) {\n  const types = arr.map(s => typeof s).join('|')\n  //support {{lat|lng}}\n  if (arr.length === 2 && types === 'number|number') {\n    return {\n      lat: arr[0],\n      lon: arr[1]\n    }\n  }\n  //support {{dd|N/S|dd|E/W}}\n  if (arr.length === 4 && types === 'number|string|number|string') {\n    if (negative[arr[1].toLowerCase()]) {\n      arr[0] *= -1\n    }\n    if (arr[3].toLowerCase() === 'w') {\n      arr[2] *= -1\n    }\n    return {\n      lat: arr[0],\n      lon: arr[2]\n    }\n  }\n  //support {{dd|mm|N/S|dd|mm|E/W}}\n  if (arr.length === 6) {\n    return {\n      lat: convertDMS(arr.slice(0, 3)),\n      lon: convertDMS(arr.slice(3))\n    }\n  }\n  //support {{dd|mm|ss|N/S|dd|mm|ss|E/W}}\n  if (arr.length === 8) {\n    return {\n      lat: convertDMS(arr.slice(0, 4)),\n      lon: convertDMS(arr.slice(4))\n    }\n  }\n  return {}\n}\n\nconst parseParams = function(obj) {\n  obj.list = obj.list || []\n  obj.list = obj.list.map(str => {\n    let num = Number(str)\n    if (!isNaN(num)) {\n      return num\n    }\n    //these are weird\n    let split = str.split(/:/)\n    if (split.length > 1) {\n      obj.props = obj.props || {}\n      obj.props[split[0]] = split.slice(1).join(':')\n      return null\n    }\n    return str\n  })\n  obj.list = obj.list.filter(s => s !== null)\n  return obj\n}\n\nconst parseCoor = function(tmpl) {\n  let obj = parse(tmpl)\n  obj = parseParams(obj)\n  let tmp = findLatLng(obj.list)\n  obj.lat = round(tmp.lat)\n  obj.lon = round(tmp.lon)\n  obj.template = 'coord'\n  delete obj.list\n  return obj\n}\n\nmodule.exports = parseCoor\n// {{Coor title dms|dd|mm|ss|N/S|dd|mm|ss|E/W|template parameters}}\n// {{Coor title dec|latitude|longitude|template parameters}}\n// {{Coor dms|dd|mm|ss|N/S|dd|mm|ss|E/W|template parameters}}\n// {{Coor dm|dd|mm|N/S|dd|mm|E/W|template parameters}}\n// {{Coor dec|latitude|longitude|template parameters}}\n\n// {{coord|latitude|longitude|coordinate parameters|template parameters}}\n// {{coord|dd|N/S|dd|E/W|coordinate parameters|template parameters}}\n// {{coord|dd|mm|N/S|dd|mm|E/W|coordinate parameters|template parameters}}\n// {{coord|dd|mm|ss|N/S|dd|mm|ss|E/W|coordinate parameters|template parameters}}\n","const parseCoor = require('./coor')\n\nconst templates = {\n  coord: (tmpl, list) => {\n    let obj = parseCoor(tmpl)\n    list.push(obj)\n    //display inline, by default\n    if (!obj.display || obj.display.indexOf('inline') !== -1) {\n      return `${obj.lat || ''}°N, ${obj.lon || ''}°W`\n    }\n    return ''\n  },\n  //https://en.wikivoyage.org/wiki/Template:Geo\n  geo: ['lat', 'lon', 'zoom']\n}\n// {{coord|latitude|longitude|coordinate parameters|template parameters}}\n// {{coord|dd|N/S|dd|E/W|coordinate parameters|template parameters}}\n// {{coord|dd|mm|N/S|dd|mm|E/W|coordinate parameters|template parameters}}\n// {{coord|dd|mm|ss|N/S|dd|mm|ss|E/W|coordinate parameters|template parameters}}\ntemplates['coor'] = templates.coord\n// these are from the nl wiki\ntemplates['coor title dms'] = templates.coord\ntemplates['coor title dec'] = templates.coord\ntemplates['coor dms'] = templates.coord\ntemplates['coor dm'] = templates.coord\ntemplates['coor dec'] = templates.coord\nmodule.exports = templates\n","const parse = require('../../_parsers/parse')\n\nlet templates = {\n  /* mostly wiktionary*/\n  etyl: 1,\n  mention: 1,\n  link: 1,\n  'la-verb-form': 0,\n  'la-ipa': 0,\n  //https://en.wikipedia.org/wiki/Template:Sortname\n  sortname: tmpl => {\n    let order = ['first', 'last', 'target', 'sort']\n    let obj = parse(tmpl, order)\n    let name = `${obj.first || ''} ${obj.last || ''}`\n    name = name.trim()\n    if (obj.nolink) {\n      return obj.target || name\n    }\n    if (obj.dab) {\n      name += ` (${obj.dab})`\n      if (obj.target) {\n        obj.target += ` (${obj.dab})`\n      }\n    }\n    if (obj.target) {\n      return `[[${obj.target}|${name}]]`\n    }\n    return `[[${name}]]`\n  }\n}\n\n//these are insane\n// https://en.wikipedia.org/wiki/Template:Tl\nconst links = [\n  'lts',\n  't',\n  'tfd links',\n  'tiw',\n  'tltt',\n  'tetl',\n  'tsetl',\n  'ti',\n  'tic',\n  'tiw',\n  'tlt',\n  'ttl',\n  'twlh',\n  'tl2',\n  'tlu',\n  'demo',\n  'hatnote',\n  'xpd',\n  'para',\n  'elc',\n  'xtag',\n  'mli',\n  'mlix',\n  '#invoke',\n  'url' //https://en.wikipedia.org/wiki/Template:URL\n]\n\n//keyValues\nlinks.forEach(k => {\n  templates[k] = tmpl => {\n    let order = ['first', 'second']\n    let obj = parse(tmpl, order)\n    return obj.second || obj.first\n  }\n})\n//aliases\ntemplates.m = templates.mention\ntemplates['m-self'] = templates.mention\ntemplates.l = templates.link\ntemplates.ll = templates.link\ntemplates['l-self'] = templates.link\nmodule.exports = templates\n","const parse = require('../../_parsers/parse')\nconst Image = require('../../../image/Image')\n\nconst sisterProjects = {\n  wikt: 'wiktionary',\n  commons: 'commons',\n  c: 'commons',\n  commonscat: 'commonscat',\n  n: 'wikinews',\n  q: 'wikiquote',\n  s: 'wikisource',\n  a: 'wikiauthor',\n  b: 'wikibooks',\n  voy: 'wikivoyage',\n  v: 'wikiversity',\n  d: 'wikidata',\n  species: 'wikispecies',\n  m: 'meta',\n  mw: 'mediawiki'\n}\n\nconst parsers = {\n  //https://en.wikipedia.org/wiki/Template:About\n  about: (tmpl, list) => {\n    let obj = parse(tmpl)\n    // obj.pos = r.title //not working\n    list.push(obj)\n    return ''\n  },\n  //https://en.wikipedia.org/wiki/Template:Main\n  main: (tmpl, list) => {\n    let obj = parse(tmpl)\n    // obj.pos = r.title //not working\n    list.push(obj)\n    return ''\n  },\n  'wide image': ['file', 'width', 'caption'],\n\n  //https://en.wikipedia.org/wiki/Template:Redirect\n  redirect: (tmpl, list) => {\n    let data = parse(tmpl, ['redirect'])\n    let lines = data.list || []\n    let links = []\n    for (let i = 0; i < lines.length; i += 2) {\n      links.push({\n        page: lines[i + 1],\n        desc: lines[i]\n      })\n    }\n    let obj = {\n      template: 'redirect',\n      redirect: data.redirect,\n      links: links\n    }\n    list.push(obj)\n    return ''\n  },\n\n  //this one sucks - https://en.wikipedia.org/wiki/Template:GNIS\n  'cite gnis': (tmpl, list) => {\n    let order = ['id', 'name', 'type']\n    let obj = parse(tmpl, order)\n    obj.type = 'gnis'\n    obj.template = 'citation'\n    list.push(obj)\n    return ''\n  },\n  sfn: ['author', 'year', 'location'],\n  audio: ['file', 'text', 'type'],\n  rp: ['page'],\n\n  'spoken wikipedia': (tmpl, list) => {\n    let order = ['file', 'date']\n    let obj = parse(tmpl, order)\n    obj.template = 'audio'\n    list.push(obj)\n    return ''\n  },\n\n  //https://en.wikipedia.org/wiki/Template:Sister_project_links\n  'sister project links': (tmpl, list) => {\n    let data = parse(tmpl)\n    //rename 'wd' to 'wikidata'\n    let links = {}\n    Object.keys(sisterProjects).forEach(k => {\n      if (data.hasOwnProperty(k) === true) {\n        links[sisterProjects[k]] = data[k] //.text();\n      }\n    })\n    let obj = {\n      template: 'sister project links',\n      links: links\n    }\n    list.push(obj)\n    return ''\n  },\n\n  //https://en.wikipedia.org/wiki/Template:Subject_bar\n  'subject bar': (tmpl, list) => {\n    let data = parse(tmpl)\n    Object.keys(data).forEach(k => {\n      //rename 'voy' to 'wikivoyage'\n      if (sisterProjects.hasOwnProperty(k)) {\n        data[sisterProjects[k]] = data[k]\n        delete data[k]\n      }\n    })\n    let obj = {\n      template: 'subject bar',\n      links: data\n    }\n    list.push(obj)\n    return ''\n  },\n\n  'short description': ['description'],\n  'coord missing': ['region'],\n  //amazingly, this one does not obey any known patterns\n  //https://en.wikipedia.org/wiki/Template:Gallery\n  gallery: (tmpl, list) => {\n    let obj = parse(tmpl)\n    let images = (obj.list || []).filter(line => /^ *File ?:/.test(line))\n    images = images.map(file => {\n      let img = {\n        file: file\n      }\n      return new Image(img).json()\n    })\n    obj = {\n      template: 'gallery',\n      images: images\n    }\n    list.push(obj)\n    return ''\n  },\n  //https://en.wikipedia.org/wiki/Template:See_also\n  'see also': (tmpl, list) => {\n    let data = parse(tmpl)\n    // data.pos = r.title //not working\n    list.push(data)\n    return ''\n  },\n  unreferenced: ['date']\n}\n//aliases\nparsers['cite'] = parsers.citation\nparsers['sfnref'] = parsers.sfn\nparsers['harvid'] = parsers.sfn\nparsers['harvnb'] = parsers.sfn\nparsers['unreferenced section'] = parsers.unreferenced\nparsers['redir'] = parsers.redirect\nparsers['sisterlinks'] = parsers['sister project links']\nparsers['main article'] = parsers['main']\n\nmodule.exports = parsers\n","//random misc for inline wikipedia templates\nconst parse = require('../../_parsers/parse')\n\nconst titlecase = str => {\n  return str.charAt(0).toUpperCase() + str.substring(1)\n}\n\n//https://en.wikipedia.org/wiki/Template:Yes\nlet templates = {}\nlet cells = [\n  'rh',\n  'rh2',\n  'yes',\n  'no',\n  'maybe',\n  'eliminated',\n  'lost',\n  'safe',\n  'active',\n  'site active',\n  'coming soon',\n  'good',\n  'won',\n  'nom',\n  'sho',\n  'longlisted',\n  'tba',\n  'success',\n  'operational',\n  'failure',\n  'partial',\n  'regional',\n  'maybecheck',\n  'partial success',\n  'partial failure',\n  'okay',\n  'yes-no',\n  'some',\n  'nonpartisan',\n  'pending',\n  'unofficial',\n  'unofficial2',\n  'usually',\n  'rarely',\n  'sometimes',\n  'any',\n  'varies',\n  'black',\n  'non-album single',\n  'unreleased',\n  'unknown',\n  'perhaps',\n  'depends',\n  'included',\n  'dropped',\n  'terminated',\n  'beta',\n  'table-experimental',\n  'free',\n  'proprietary',\n  'nonfree',\n  'needs',\n  'nightly',\n  'release-candidate',\n  'planned',\n  'scheduled',\n  'incorrect',\n  'no result',\n  'cmain',\n  'calso starring',\n  'crecurring',\n  'cguest',\n  'not yet',\n  'optional'\n]\ncells.forEach(str => {\n  templates[str] = tmpl => {\n    let data = parse(tmpl, ['text'])\n    return data.text || titlecase(data.template)\n  }\n})\n\n//these ones have a text result\nlet moreCells = [\n  ['active fire', 'Active'],\n  ['site active', 'Active'],\n  ['site inactive', 'Inactive'],\n  ['yes2', ''],\n  ['no2', ''],\n  ['ya', '✅'],\n  ['na', '❌'],\n  ['nom', 'Nominated'],\n  ['sho', 'Shortlisted'],\n  ['tba', 'TBA'],\n  ['maybecheck', '✔️'],\n  ['okay', 'Neutral'],\n  ['n/a', 'N/A'],\n  ['sdash', '—'],\n  ['dunno', '?'],\n  ['draw', ''],\n  ['cnone', ''],\n  ['nocontest', '']\n]\nmoreCells.forEach(a => {\n  templates[a[0]] = tmpl => {\n    let data = parse(tmpl, ['text'])\n    return data.text || a[1]\n  }\n})\n\n//this one's a little different\ntemplates.won = tmpl => {\n  let data = parse(tmpl, ['text'])\n  return data.place || data.text || titlecase(data.template)\n}\n\nmodule.exports = templates\n","module.exports = Object.assign({}, require('./links'), require('./page'), require('./table-cell'))\n","const parse = require('../_parsers/parse')\n\nconst zeroPad = function(num) {\n  num = String(num)\n  if (num.length === 1) {\n    num = '0' + num\n  }\n  return num\n}\n\nconst parseTeam = function(obj, round, team) {\n  if (obj[`rd${round}-team${zeroPad(team)}`]) {\n    team = zeroPad(team)\n  }\n  let score = obj[`rd${round}-score${team}`]\n  let num = Number(score)\n  if (isNaN(num) === false) {\n    score = num\n  }\n  return {\n    team: obj[`rd${round}-team${team}`],\n    score: score,\n    seed: obj[`rd${round}-seed${team}`]\n  }\n}\n\n//these are weird.\nconst playoffBracket = function(tmpl) {\n  let rounds = []\n  let obj = parse(tmpl)\n  //try some rounds\n  for (let i = 1; i < 7; i += 1) {\n    let round = []\n    for (let t = 1; t < 16; t += 2) {\n      let key = `rd${i}-team`\n      if (obj[key + t] || obj[key + zeroPad(t)]) {\n        let one = parseTeam(obj, i, t)\n        let two = parseTeam(obj, i, t + 1)\n        round.push([one, two])\n      } else {\n        break\n      }\n    }\n    if (round.length > 0) {\n      rounds.push(round)\n    }\n  }\n  return {\n    template: 'playoffbracket',\n    rounds: rounds\n  }\n}\n\nlet all = {\n  //playoff brackets\n  '4teambracket': function(tmpl, list) {\n    let obj = playoffBracket(tmpl)\n    list.push(obj)\n    return ''\n  }\n}\n\n//a bunch of aliases for these ones:\n// https://en.wikipedia.org/wiki/Category:Tournament_bracket_templates\nconst brackets = [\n  '2teambracket',\n  '4team2elimbracket',\n  '8teambracket',\n  '16teambracket',\n  '32teambracket',\n\n  'cwsbracket',\n  'nhlbracket',\n  'nhlbracket-reseed',\n  '4teambracket-nhl',\n  '4teambracket-ncaa',\n  '4teambracket-mma',\n  '4teambracket-mlb',\n\n  '8teambracket-nhl',\n  '8teambracket-mlb',\n  '8teambracket-ncaa',\n  '8teambracket-afc',\n  '8teambracket-afl',\n  '8teambracket-tennis3',\n  '8teambracket-tennis5',\n\n  '16teambracket-nhl',\n  '16teambracket-nhl divisional',\n  '16teambracket-nhl-reseed',\n  '16teambracket-nba',\n  '16teambracket-swtc',\n  '16teambracket-afc',\n  '16teambracket-tennis3',\n  '16teambracket-tennis5'\n]\nbrackets.forEach(key => {\n  all[key] = all['4teambracket']\n})\n\nmodule.exports = all\n","const parse = require('../_parsers/parse')\n\nconst codes = {\n  '£': 'GB£', // https://en.wikipedia.org/wiki/Template:GBP\n  '¥': '¥', // https://en.wikipedia.org/wiki/Template:JPY\n  '৳': '৳', // https://en.wikipedia.org/wiki/Template:BDT\n  '₩': '₩', // https://en.wikipedia.org/wiki/Template:SK_won\n  '€': '€', // https://en.wikipedia.org/wiki/Template:€\n  '₱': '₱', // https://en.wikipedia.org/wiki/Template:Philippine_peso\n  '₹': '₹', // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n  '₽': '₽', // https://en.wikipedia.org/wiki/Template:RUB\n  'cn¥': 'CN¥', // https://en.wikipedia.org/wiki/Template:CNY\n  'gb£': 'GB£', // https://en.wikipedia.org/wiki/Template:GBP\n  'india rs': '₹', // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n  'indian rupee symbol': '₹', // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n  'indian rupee': '₹', // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n  'indian rupees': '₹', // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n  'philippine peso': '₱', // https://en.wikipedia.org/wiki/Template:Philippine_peso\n  'russian ruble': '₽', // https://en.wikipedia.org/wiki/Template:Russian_ruble\n  'SK won': '₩', // https://en.wikipedia.org/wiki/Template:SK_won\n  'turkish lira': 'TRY', //https://en.wikipedia.org/wiki/Template:Turkish_lira\n  a$: 'A$', // https://en.wikipedia.org/wiki/Template:AUD\n  au$: 'A$', //https://en.wikipedia.org/wiki/Template:AUD\n  aud: 'A$', //https://en.wikipedia.org/wiki/Template:AUD\n  bdt: 'BDT', //https://en.wikipedia.org/wiki/Template:BDT\n  brl: 'BRL', //https://en.wikipedia.org/wiki/Template:BRL\n  ca$: 'CA$', // https://en.wikipedia.org/wiki/Template:CAD\n  cad: 'CA$', // https://en.wikipedia.org/wiki/Template:CAD\n  chf: 'CHF', // https://en.wikipedia.org/wiki/Template:CHF\n  cny: 'CN¥', // https://en.wikipedia.org/wiki/Template:CNY\n  czk: 'czk', // https://en.wikipedia.org/wiki/Template:CZK\n  dkk: 'dkk', // https://en.wikipedia.org/wiki/Template:DKK\n  dkk2: 'dkk', // https://en.wikipedia.org/wiki/Template:DKK\n  euro: '€', // https://en.wikipedia.org/wiki/Template:€\n  gbp: 'GB£', // https://en.wikipedia.org/wiki/Template:GBP\n  hk$: 'HK$', // https://en.wikipedia.org/wiki/Template:HKD\n  hkd: 'HK$', // https://en.wikipedia.org/wiki/Template:HKD\n  ils: 'ILS', // https://en.wikipedia.org/wiki/Template:ILS\n  inr: '₹', // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n  jpy: '¥', // https://en.wikipedia.org/wiki/Template:JPY\n  myr: 'MYR', // https://en.wikipedia.org/wiki/Template:MYR\n  nis: 'ILS', // https://en.wikipedia.org/wiki/Template:ILS\n  nok: 'NOK', //https://en.wikipedia.org/wiki/Template:NOK\n  nok2: 'NOK', //https://en.wikipedia.org/wiki/Template:NOK\n  nz$: 'NZ$', //https://en.wikipedia.org/wiki/Template:NZD\n  nzd: 'NZ$', //https://en.wikipedia.org/wiki/Template:NZD\n  peso: 'peso', //https://en.wikipedia.org/wiki/Template:Peso\n  pkr: '₨', // https://en.wikipedia.org/wiki/Template:Pakistani_Rupee\n  r$: 'BRL', //https://en.wikipedia.org/wiki/Template:BRL\n  rmb: 'CN¥', // https://en.wikipedia.org/wiki/Template:CNY\n  rub: '₽', // https://en.wikipedia.org/wiki/Template:RUB\n  ruble: '₽', // https://en.wikipedia.org/wiki/Template:Ruble\n  rupee: '₹', // https://en.wikipedia.org/wiki/Template:Rupee\n  s$: 'sgd', // https://en.wikipedia.org/wiki/Template:SGD\n  sek: 'SEK', // https://en.wikipedia.org/wiki/Template:SEK\n  sek2: 'SEK', // https://en.wikipedia.org/wiki/Template:SEK\n  sfr: 'CHF', // https://en.wikipedia.org/wiki/Template:CHF\n  sgd: 'sgd', // https://en.wikipedia.org/wiki/Template:SGD\n  shekel: 'ILS', // https://en.wikipedia.org/wiki/Template:ILS\n  sheqel: 'ILS', // https://en.wikipedia.org/wiki/Template:ILS\n  ttd: 'TTD', //https://en.wikipedia.org/wiki/Template:TTD\n  us$: 'US$', // https://en.wikipedia.org/wiki/Template:US$\n  usd: 'US$', // https://en.wikipedia.org/wiki/Template:US$\n  yen: '¥', // https://en.wikipedia.org/wiki/Template:JPY\n  zar: 'R' //https://en.wikipedia.org/wiki/Template:ZAR\n}\n\nconst parseCurrency = (tmpl, list) => {\n  let o = parse(tmpl, ['amount', 'code'])\n  list.push(o)\n  let code = o.template || ''\n  if (code === 'currency') {\n    code = o.code\n    if (!code) {\n      o.code = code = 'usd' //Special case when currency template has no code argument\n    }\n  } else if (\n    code === '' ||\n    code === 'monnaie' ||\n    code === 'unité' ||\n    code === 'nombre' ||\n    code === 'nb'\n  ) {\n    code = o.code\n  }\n  code = (code || '').toLowerCase()\n  switch (code) {\n    case 'us':\n      o.code = code = 'usd'\n      break\n    case 'uk':\n      o.code = code = 'gbp'\n      break\n  }\n  let out = codes[code] || ''\n  let str = `${out}${o.amount || ''}`\n  //support unknown currencies after the number - like '5 BTC'\n  if (o.code && !codes[o.code.toLowerCase()]) {\n    str += ' ' + o.code\n  }\n  return str\n}\n\nconst inrConvert = (tmpl, list) => {\n  let o = parse(tmpl, ['rupee_value', 'currency_formatting'])\n  list.push(o)\n  let formatting = o.currency_formatting\n  if (formatting) {\n    let multiplier = 1\n    switch (formatting) {\n      case 'k':\n        multiplier = 1000\n        break\n      case 'm':\n        multiplier = 1000000\n        break\n      case 'b':\n        multiplier = 1000000000\n        break\n      case 't':\n        multiplier = 1000000000000\n        break\n      case 'l':\n        multiplier = 100000\n        break\n      case 'c':\n        multiplier = 10000000\n        break\n      case 'lc':\n        multiplier = 1000000000000\n        break\n    }\n    o.rupee_value = o.rupee_value * multiplier\n  }\n  let str = `inr ${o.rupee_value || ''}`\n  return str\n}\n\nconst currencies = {\n  //this one is generic https://en.wikipedia.org/wiki/Template:Currency\n  currency: parseCurrency,\n  monnaie: parseCurrency,\n  unité: parseCurrency,\n  nombre: parseCurrency,\n  nb: parseCurrency,\n  iso4217: parseCurrency,\n  inrconvert: inrConvert\n}\n//the others fit the same pattern..\nObject.keys(codes).forEach(k => {\n  currencies[k] = parseCurrency\n})\n\nmodule.exports = currencies\n","const parse = require('../_parsers/parse')\n\nlet templates = {\n  //https://en.wikipedia.org/wiki/Template:Election_box\n  'election box begin': (tmpl, list) => {\n    let data = parse(tmpl)\n    list.push(data)\n    return ''\n  },\n  'election box candidate': (tmpl, list) => {\n    let data = parse(tmpl)\n    list.push(data)\n    return ''\n  },\n  'election box hold with party link': (tmpl, list) => {\n    let data = parse(tmpl)\n    list.push(data)\n    return ''\n  },\n  'election box gain with party link': (tmpl, list) => {\n    let data = parse(tmpl)\n    list.push(data)\n    return ''\n  }\n}\n//aliases\ntemplates['election box begin no change'] = templates['election box begin']\ntemplates['election box begin no party'] = templates['election box begin']\ntemplates['election box begin no party no change'] = templates['election box begin']\ntemplates['election box inline begin'] = templates['election box begin']\ntemplates['election box inline begin no change'] = templates['election box begin']\n\ntemplates['election box candidate for alliance'] = templates['election box candidate']\ntemplates['election box candidate minor party'] = templates['election box candidate']\ntemplates['election box candidate no party link no change'] = templates['election box candidate']\ntemplates['election box candidate with party link'] = templates['election box candidate']\ntemplates['election box candidate with party link coalition 1918'] =\n  templates['election box candidate']\ntemplates['election box candidate with party link no change'] = templates['election box candidate']\ntemplates['election box inline candidate'] = templates['election box candidate']\ntemplates['election box inline candidate no change'] = templates['election box candidate']\ntemplates['election box inline candidate with party link'] = templates['election box candidate']\ntemplates['election box inline candidate with party link no change'] =\n  templates['election box candidate']\ntemplates['election box inline incumbent'] = templates['election box candidate']\nmodule.exports = templates\n","module.exports = [\n  ['🇦🇩', 'and', 'andorra'],\n  ['🇦🇪', 'are', 'united arab emirates'],\n  ['🇦🇫', 'afg', 'afghanistan'],\n  ['🇦🇬', 'atg', 'antigua and barbuda'],\n  ['🇦🇮', 'aia', 'anguilla'],\n  ['🇦🇱', 'alb', 'albania'],\n  ['🇦🇲', 'arm', 'armenia'],\n  ['🇦🇴', 'ago', 'angola'],\n  ['🇦🇶', 'ata', 'antarctica'],\n  ['🇦🇷', 'arg', 'argentina'],\n  ['🇦🇸', 'asm', 'american samoa'],\n  ['🇦🇹', 'aut', 'austria'],\n  ['🇦🇺', 'aus', 'australia'],\n  ['🇦🇼', 'abw', 'aruba'],\n  ['🇦🇽', 'ala', 'åland islands'],\n  ['🇦🇿', 'aze', 'azerbaijan'],\n  ['🇧🇦', 'bih', 'bosnia and herzegovina'],\n  ['🇧🇧', 'brb', 'barbados'],\n  ['🇧🇩', 'bgd', 'bangladesh'],\n  ['🇧🇪', 'bel', 'belgium'],\n  ['🇧🇫', 'bfa', 'burkina faso'],\n  ['🇧🇬', 'bgr', 'bulgaria'],\n  [\n    '🇧🇬',\n    'bul', //dupe\n    'bulgaria'\n  ],\n  ['🇧🇭', 'bhr', 'bahrain'],\n  ['🇧🇮', 'bdi', 'burundi'],\n  ['🇧🇯', 'ben', 'benin'],\n  ['🇧🇱', 'blm', 'saint barthélemy'],\n  ['🇧🇲', 'bmu', 'bermuda'],\n  ['🇧🇳', 'brn', 'brunei darussalam'],\n  ['🇧🇴', 'bol', 'bolivia'],\n  ['🇧🇶', 'bes', 'bonaire, sint eustatius and saba'],\n  ['🇧🇷', 'bra', 'brazil'],\n  ['🇧🇸', 'bhs', 'bahamas'],\n  ['🇧🇹', 'btn', 'bhutan'],\n  ['🇧🇻', 'bvt', 'bouvet island'],\n  ['🇧🇼', 'bwa', 'botswana'],\n  ['🇧🇾', 'blr', 'belarus'],\n  ['🇧🇿', 'blz', 'belize'],\n  ['🇨🇦', 'can', 'canada'],\n  ['🇨🇨', 'cck', 'cocos (keeling) islands'],\n  ['🇨🇩', 'cod', 'congo'],\n  ['🇨🇫', 'caf', 'central african republic'],\n  ['🇨🇬', 'cog', 'congo'],\n  ['🇨🇭', 'che', 'switzerland'],\n  ['🇨🇮', 'civ', \"côte d'ivoire\"],\n  ['🇨🇰', 'cok', 'cook islands'],\n  ['🇨🇱', 'chl', 'chile'],\n  ['🇨🇲', 'cmr', 'cameroon'],\n  ['🇨🇳', 'chn', 'china'],\n  ['🇨🇴', 'col', 'colombia'],\n  ['🇨🇷', 'cri', 'costa rica'],\n  ['🇨🇺', 'cub', 'cuba'],\n  ['🇨🇻', 'cpv', 'cape verde'],\n  ['🇨🇼', 'cuw', 'curaçao'],\n  ['🇨🇽', 'cxr', 'christmas island'],\n  ['🇨🇾', 'cyp', 'cyprus'],\n  ['🇨🇿', 'cze', 'czech republic'],\n  ['🇩🇪', 'deu', 'germany'],\n  [\n    '🇩🇪',\n    'ger', //alias\n    'germany'\n  ],\n  ['🇩🇯', 'dji', 'djibouti'],\n  ['🇩🇰', 'dnk', 'denmark'],\n  ['🇩🇲', 'dma', 'dominica'],\n  ['🇩🇴', 'dom', 'dominican republic'],\n  ['🇩🇿', 'dza', 'algeria'],\n  ['🇪🇨', 'ecu', 'ecuador'],\n  ['🇪🇪', 'est', 'estonia'],\n  ['🇪🇬', 'egy', 'egypt'],\n  ['🇪🇭', 'esh', 'western sahara'],\n  ['🇪🇷', 'eri', 'eritrea'],\n  ['🇪🇸', 'esp', 'spain'],\n  ['🇪🇹', 'eth', 'ethiopia'],\n  ['🇫🇮', 'fin', 'finland'],\n  ['🇫🇯', 'fji', 'fiji'],\n  ['🇫🇰', 'flk', 'falkland islands (malvinas)'],\n  ['🇫🇲', 'fsm', 'micronesia'],\n  ['🇫🇴', 'fro', 'faroe islands'],\n  ['🇫🇷', 'fra', 'france'],\n  ['🇬🇦', 'gab', 'gabon'],\n  ['🇬🇧', 'gbr', 'united kingdom'],\n  ['🇬🇩', 'grd', 'grenada'],\n  // ['🇬🇪', 'geo', 'georgia'],\n  ['🇬🇫', 'guf', 'french guiana'],\n  ['🇬🇬', 'ggy', 'guernsey'],\n  ['🇬🇭', 'gha', 'ghana'],\n  ['🇬🇮', 'gib', 'gibraltar'],\n  ['🇬🇱', 'grl', 'greenland'],\n  ['🇬🇲', 'gmb', 'gambia'],\n  ['🇬🇳', 'gin', 'guinea'],\n  ['🇬🇵', 'glp', 'guadeloupe'],\n  ['🇬🇶', 'gnq', 'equatorial guinea'],\n  ['🇬🇷', 'grc', 'greece'],\n  ['🇬🇸', 'sgs', 'south georgia'],\n  ['🇬🇹', 'gtm', 'guatemala'],\n  ['🇬🇺', 'gum', 'guam'],\n  ['🇬🇼', 'gnb', 'guinea-bissau'],\n  ['🇬🇾', 'guy', 'guyana'],\n  ['🇭🇰', 'hkg', 'hong kong'],\n  ['🇭🇲', 'hmd', 'heard island and mcdonald islands'],\n  ['🇭🇳', 'hnd', 'honduras'],\n  ['🇭🇷', 'hrv', 'croatia'],\n  ['🇭🇹', 'hti', 'haiti'],\n  ['🇭🇺', 'hun', 'hungary'],\n  ['🇮🇩', 'idn', 'indonesia'],\n  ['🇮🇪', 'irl', 'ireland'],\n  ['🇮🇱', 'isr', 'israel'],\n  ['🇮🇲', 'imn', 'isle of man'],\n  ['🇮🇳', 'ind', 'india'],\n  ['🇮🇴', 'iot', 'british indian ocean territory'],\n  ['🇮🇶', 'irq', 'iraq'],\n  ['🇮🇷', 'irn', 'iran'],\n  ['🇮🇸', 'isl', 'iceland'],\n  ['🇮🇹', 'ita', 'italy'],\n  ['🇯🇪', 'jey', 'jersey'],\n  ['🇯🇲', 'jam', 'jamaica'],\n  ['🇯🇴', 'jor', 'jordan'],\n  ['🇯🇵', 'jpn', 'japan'],\n  ['🇰🇪', 'ken', 'kenya'],\n  ['🇰🇬', 'kgz', 'kyrgyzstan'],\n  ['🇰🇭', 'khm', 'cambodia'],\n  ['🇰🇮', 'kir', 'kiribati'],\n  ['🇰🇲', 'com', 'comoros'],\n  ['🇰🇳', 'kna', 'saint kitts and nevis'],\n  ['🇰🇵', 'prk', 'north korea'],\n  ['🇰🇷', 'kor', 'south korea'],\n  ['🇰🇼', 'kwt', 'kuwait'],\n  ['🇰🇾', 'cym', 'cayman islands'],\n  ['🇰🇿', 'kaz', 'kazakhstan'],\n  ['🇱🇦', 'lao', \"lao people's democratic republic\"],\n  ['🇱🇧', 'lbn', 'lebanon'],\n  ['🇱🇨', 'lca', 'saint lucia'],\n  ['🇱🇮', 'lie', 'liechtenstein'],\n  ['🇱🇰', 'lka', 'sri lanka'],\n  ['🇱🇷', 'lbr', 'liberia'],\n  ['🇱🇸', 'lso', 'lesotho'],\n  ['🇱🇹', 'ltu', 'lithuania'],\n  ['🇱🇺', 'lux', 'luxembourg'],\n  ['🇱🇻', 'lva', 'latvia'],\n  ['🇱🇾', 'lby', 'libya'],\n  ['🇲🇦', 'mar', 'morocco'],\n  ['🇲🇨', 'mco', 'monaco'],\n  ['🇲🇩', 'mda', 'moldova'],\n  ['🇲🇪', 'mne', 'montenegro'],\n  ['🇲🇫', 'maf', 'saint martin (french part)'],\n  ['🇲🇬', 'mdg', 'madagascar'],\n  ['🇲🇭', 'mhl', 'marshall islands'],\n  ['🇲🇰', 'mkd', 'macedonia'],\n  ['🇲🇱', 'mli', 'mali'],\n  ['🇲🇲', 'mmr', 'myanmar'],\n  ['🇲🇳', 'mng', 'mongolia'],\n  ['🇲🇴', 'mac', 'macao'],\n  ['🇲🇵', 'mnp', 'northern mariana islands'],\n  ['🇲🇶', 'mtq', 'martinique'],\n  ['🇲🇷', 'mrt', 'mauritania'],\n  ['🇲🇸', 'msr', 'montserrat'],\n  ['🇲🇹', 'mlt', 'malta'],\n  ['🇲🇺', 'mus', 'mauritius'],\n  ['🇲🇻', 'mdv', 'maldives'],\n  ['🇲🇼', 'mwi', 'malawi'],\n  ['🇲🇽', 'mex', 'mexico'],\n  ['🇲🇾', 'mys', 'malaysia'],\n  ['🇲🇿', 'moz', 'mozambique'],\n  ['🇳🇦', 'nam', 'namibia'],\n  ['🇳🇨', 'ncl', 'new caledonia'],\n  ['🇳🇪', 'ner', 'niger'],\n  ['🇳🇫', 'nfk', 'norfolk island'],\n  ['🇳🇬', 'nga', 'nigeria'],\n  ['🇳🇮', 'nic', 'nicaragua'],\n  ['🇳🇱', 'nld', 'netherlands'],\n  ['🇳🇴', 'nor', 'norway'],\n  ['🇳🇵', 'npl', 'nepal'],\n  ['🇳🇷', 'nru', 'nauru'],\n  ['🇳🇺', 'niu', 'niue'],\n  ['🇳🇿', 'nzl', 'new zealand'],\n  ['🇴🇲', 'omn', 'oman'],\n  ['🇵🇦', 'pan', 'panama'],\n  ['🇵🇪', 'per', 'peru'],\n  ['🇵🇫', 'pyf', 'french polynesia'],\n  ['🇵🇬', 'png', 'papua new guinea'],\n  ['🇵🇭', 'phl', 'philippines'],\n  ['🇵🇰', 'pak', 'pakistan'],\n  ['🇵🇱', 'pol', 'poland'],\n  ['🇵🇲', 'spm', 'saint pierre and miquelon'],\n  ['🇵🇳', 'pcn', 'pitcairn'],\n  ['🇵🇷', 'pri', 'puerto rico'],\n  ['🇵🇸', 'pse', 'palestinian territory'],\n  ['🇵🇹', 'prt', 'portugal'],\n  ['🇵🇼', 'plw', 'palau'],\n  ['🇵🇾', 'pry', 'paraguay'],\n  ['🇶🇦', 'qat', 'qatar'],\n  ['🇷🇪', 'reu', 'réunion'],\n  ['🇷🇴', 'rou', 'romania'],\n  ['🇷🇸', 'srb', 'serbia'],\n  ['🇷🇺', 'rus', 'russia'],\n  ['🇷🇼', 'rwa', 'rwanda'],\n  ['🇸🇦', 'sau', 'saudi arabia'],\n  ['🇸🇧', 'slb', 'solomon islands'],\n  ['🇸🇨', 'syc', 'seychelles'],\n  ['🇸🇩', 'sdn', 'sudan'],\n  ['🇸🇪', 'swe', 'sweden'],\n  ['🇸🇬', 'sgp', 'singapore'],\n  ['🇸🇭', 'shn', 'saint helena, ascension and tristan da cunha'],\n  ['🇸🇮', 'svn', 'slovenia'],\n  ['🇸🇯', 'sjm', 'svalbard and jan mayen'],\n  ['🇸🇰', 'svk', 'slovakia'],\n  ['🇸🇱', 'sle', 'sierra leone'],\n  ['🇸🇲', 'smr', 'san marino'],\n  ['🇸🇳', 'sen', 'senegal'],\n  ['🇸🇴', 'som', 'somalia'],\n  ['🇸🇷', 'sur', 'suriname'],\n  ['🇸🇸', 'ssd', 'south sudan'],\n  ['🇸🇹', 'stp', 'sao tome and principe'],\n  ['🇸🇻', 'slv', 'el salvador'],\n  ['🇸🇽', 'sxm', 'sint maarten (dutch part)'],\n  ['🇸🇾', 'syr', 'syrian arab republic'],\n  ['🇸🇿', 'swz', 'swaziland'],\n  ['🇹🇨', 'tca', 'turks and caicos islands'],\n  ['🇹🇩', 'tcd', 'chad'],\n  ['🇹🇫', 'atf', 'french southern territories'],\n  ['🇹🇬', 'tgo', 'togo'],\n  ['🇹🇭', 'tha', 'thailand'],\n  ['🇹🇯', 'tjk', 'tajikistan'],\n  ['🇹🇰', 'tkl', 'tokelau'],\n  ['🇹🇱', 'tls', 'timor-leste'],\n  ['🇹🇲', 'tkm', 'turkmenistan'],\n  ['🇹🇳', 'tun', 'tunisia'],\n  ['🇹🇴', 'ton', 'tonga'],\n  ['🇹🇷', 'tur', 'turkey'],\n  ['🇹🇹', 'tto', 'trinidad and tobago'],\n  ['🇹🇻', 'tuv', 'tuvalu'],\n  ['🇹🇼', 'twn', 'taiwan'],\n  ['🇹🇿', 'tza', 'tanzania'],\n  ['🇺🇦', 'ukr', 'ukraine'],\n  ['🇺🇬', 'uga', 'uganda'],\n  ['🇺🇲', 'umi', 'united states minor outlying islands'],\n  ['🇺🇸', 'usa', 'united states'],\n  [\n    '🇺🇸',\n    'us', //alias\n    'united states'\n  ],\n  ['🇺🇾', 'ury', 'uruguay'],\n  ['🇺🇿', 'uzb', 'uzbekistan'],\n  ['🇻🇦', 'vat', 'vatican city'],\n  ['🇻🇨', 'vct', 'saint vincent and the grenadines'],\n  ['🇻🇪', 'ven', 'venezuela'],\n  ['🇻🇬', 'vgb', 'virgin islands, british'],\n  ['🇻🇮', 'vir', 'virgin islands, u.s.'],\n  ['🇻🇳', 'vnm', 'viet nam'],\n  ['🇻🇺', 'vut', 'vanuatu'],\n  ['', 'win', 'west indies'],\n  ['🇼🇫', 'wlf', 'wallis and futuna'],\n  ['🇼🇸', 'wsm', 'samoa'],\n  ['🇾🇪', 'yem', 'yemen'],\n  ['🇾🇹', 'myt', 'mayotte'],\n  ['🇿🇦', 'zaf', 'south africa'],\n  ['🇿🇲', 'zmb', 'zambia'],\n  ['🇿🇼 ', 'zwe', 'zimbabwe'],\n  //others (later unicode versions)\n  ['🇺🇳', 'un', 'united nations'],\n  ['🏴󠁧󠁢󠁥󠁮󠁧󠁿󠁧󠁢󠁥󠁮󠁧󠁿', 'eng', 'england'],\n  ['🏴󠁧󠁢󠁳󠁣󠁴󠁿', 'sct', 'scotland'],\n  ['🏴󠁧󠁢󠁷󠁬󠁳󠁿', 'wal', 'wales'],\n  ['🇪🇺', 'eu', 'european union']\n]\n","const parse = require('../_parsers/parse')\nconst flags = require('../../_data/flags')\n\nlet templates = {\n  //https://en.wikipedia.org/wiki/Template:Flag\n  // {{flag|USA}} →  USA\n  flag: tmpl => {\n    let order = ['flag', 'variant']\n    let obj = parse(tmpl, order)\n    let name = obj.flag || ''\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]) || []\n    let flag = found[0] || ''\n    return `${flag} [[${found[2]}|${name}]]`\n  },\n  // {{flagcountry|USA}} →  United States\n  flagcountry: tmpl => {\n    let order = ['flag', 'variant']\n    let obj = parse(tmpl, order)\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]) || []\n    let flag = found[0] || ''\n    return `${flag} [[${found[2]}]]`\n  },\n  // (unlinked flag-country)\n  flagcu: tmpl => {\n    let order = ['flag', 'variant']\n    let obj = parse(tmpl, order)\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]) || []\n    let flag = found[0] || ''\n    return `${flag} ${found[2]}`\n  },\n  //https://en.wikipedia.org/wiki/Template:Flagicon\n  // {{flagicon|USA}} → United States\n  flagicon: tmpl => {\n    let order = ['flag', 'variant']\n    let obj = parse(tmpl, order)\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2])\n    if (!found) {\n      return ''\n    }\n    return `[[${found[2]}|${found[0]}]]`\n  },\n  //unlinked flagicon\n  flagdeco: tmpl => {\n    let order = ['flag', 'variant']\n    let obj = parse(tmpl, order)\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]) || []\n    return found[0] || ''\n  },\n  //same, but a soccer team\n  fb: tmpl => {\n    let order = ['flag', 'variant']\n    let obj = parse(tmpl, order)\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2])\n    if (!found) {\n      return ''\n    }\n    return `${found[0]} [[${found[2]} national football team|${found[2]}]]`\n  },\n  fbicon: tmpl => {\n    let order = ['flag', 'variant']\n    let obj = parse(tmpl, order)\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2])\n    if (!found) {\n      return ''\n    }\n    return ` [[${found[2]} national football team|${found[0]}]]`\n  },\n  flagathlete: tmpl => {\n    let order = ['name', 'flag', 'variant']\n    let obj = parse(tmpl, order)\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2])\n    if (!found) {\n      return `[[${obj.name || ''}]]`\n    }\n    return `${found[0]} [[${obj.name || ''}]] (${found[1].toUpperCase()})`\n  }\n}\n//support {{can}}\nflags.forEach(a => {\n  templates[a[1]] = () => {\n    return a[0]\n  }\n})\n//cricket\ntemplates['cr'] = templates.flagcountry\ntemplates['cr-rt'] = templates.flagcountry\ntemplates['cricon'] = templates.flagicon\n\nmodule.exports = templates\n","const parse = require('../_parsers/parse')\nconst languages = require('../../_data/languages')\n\nconst getLang = function(name) {\n  //grab the language from the template name - 'ipa-de'\n  let lang = name.match(/ipac?-(.+)/)\n  if (lang !== null) {\n    if (languages.hasOwnProperty(lang[1]) === true) {\n      return languages[lang[1]].english_title\n    }\n    return lang[1]\n  }\n  return null\n}\n\n// pronounciation info\nconst templates = {\n  // https://en.wikipedia.org/wiki/Template:IPA\n  ipa: (tmpl, list) => {\n    let obj = parse(tmpl, ['transcription', 'lang', 'audio'])\n    obj.lang = getLang(obj.template)\n    obj.template = 'ipa'\n    list.push(obj)\n    return ''\n  },\n  //https://en.wikipedia.org/wiki/Template:IPAc-en\n  ipac: (tmpl, list) => {\n    let obj = parse(tmpl)\n    obj.transcription = (obj.list || []).join(',')\n    delete obj.list\n    obj.lang = getLang(obj.template)\n    obj.template = 'ipac'\n    list.push(obj)\n    return ''\n  },\n  transl: (tmpl, list) => {\n    let obj = parse(tmpl, ['lang', 'text', 'text2'])\n    // support 3-param\n    if (obj.text2) {\n      obj.iso = obj.text\n      obj.text = obj.text2\n      delete obj.text2\n    }\n    list.push(obj)\n    return obj.text || ''\n  }\n}\n// - other languages -\n// Polish, {{IPAc-pl}}\t{{IPAc-pl|'|sz|cz|e|ć|i|n}} → [ˈʂt͡ʂɛt͡ɕin]\n// Portuguese, {{IPAc-pt}}\t{{IPAc-pt|p|o|<|r|t|u|'|g|a|l|lang=pt}} and {{IPAc-pt|b|r|a|'|s|i|l|lang=br}} → [puɾtuˈɣaɫ] and [bɾaˈsiw]\nObject.keys(languages).forEach(lang => {\n  templates['ipa-' + lang] = templates.ipa\n  templates['ipac-' + lang] = templates.ipac\n})\n\nmodule.exports = templates\n","const languages = require('../../_data/languages')\nconst parse = require('../_parsers/parse')\n\nconst templates = {\n  lang: 1,\n  //this one has a million variants\n  'lang-de': 0,\n  'rtl-lang': 1,\n  //german keyboard letterscn\n  taste: 0,\n  //https://en.wikipedia.org/wiki/Template:Nihongo\n  nihongo: (tmpl, list) => {\n    let obj = parse(tmpl, ['english', 'kanji', 'romaji', 'extra'])\n    list.push(obj)\n    let str = obj.english || obj.romaji || ''\n    if (obj.kanji) {\n      str += ` (${obj.kanji})`\n    }\n    return str\n  }\n}\n//https://en.wikipedia.org/wiki/Category:Lang-x_templates\nObject.keys(languages).forEach(k => {\n  templates['lang-' + k] = templates['lang-de']\n})\ntemplates['nihongo2'] = templates.nihongo\ntemplates['nihongo3'] = templates.nihongo\ntemplates['nihongo-s'] = templates.nihongo\ntemplates['nihongo foot'] = templates.nihongo\nmodule.exports = templates\n","const parse = require('../_parsers/parse')\n// const parseSentence = require('../../04-sentence').fromText;\n\n//simply num/denom * 100\nconst percentage = function(obj) {\n  if (!obj.numerator && !obj.denominator) {\n    return null\n  }\n  let perc = Number(obj.numerator) / Number(obj.denominator)\n  perc *= 100\n  let dec = Number(obj.decimals)\n  if (isNaN(dec)) {\n    dec = 1\n  }\n  perc = perc.toFixed(dec)\n  return Number(perc)\n}\n\nlet templates = {\n  // https://en.wikipedia.org/wiki/Template:Math\n  math: (tmpl, list) => {\n    let obj = parse(tmpl, ['formula'])\n    list.push(obj)\n    return '\\n\\n' + (obj.formula || '') + '\\n\\n'\n  },\n\n  //fraction - https://en.wikipedia.org/wiki/Template:Sfrac\n  frac: (tmpl, list) => {\n    let order = ['a', 'b', 'c']\n    let obj = parse(tmpl, order)\n    let data = {\n      template: 'sfrac'\n    }\n    if (obj.c) {\n      data.integer = obj.a\n      data.numerator = obj.b\n      data.denominator = obj.c\n    } else if (obj.b) {\n      data.numerator = obj.a\n      data.denominator = obj.b\n    } else {\n      data.numerator = 1\n      data.denominator = obj.a\n    }\n    list.push(data)\n    if (data.integer) {\n      return `${data.integer} ${data.numerator}⁄${data.denominator}`\n    }\n    return `${data.numerator}⁄${data.denominator}`\n  },\n  //https://en.wikipedia.org/wiki/Template:Radic\n  radic: tmpl => {\n    let order = ['after', 'before']\n    let obj = parse(tmpl, order)\n    return `${obj.before || ''}√${obj.after || ''}`\n  },\n  //{{percentage | numerator | denominator | decimals to round to (zero or greater) }}\n  percentage: tmpl => {\n    let obj = parse(tmpl, ['numerator', 'denominator', 'decimals'])\n    let num = percentage(obj)\n    if (num === null) {\n      return ''\n    }\n    return num + '%'\n  },\n  // {{Percent-done|done=N|total=N|digits=N}}\n  'percent-done': tmpl => {\n    let obj = parse(tmpl, ['done', 'total', 'digits'])\n    let num = percentage({\n      numerator: obj.done,\n      denominator: obj.total,\n      decimals: obj.digits\n    })\n    if (num === null) {\n      return ''\n    }\n    return `${obj.done} (${num}%) done`\n  },\n  'winning percentage': (tmpl, list) => {\n    let obj = parse(tmpl, ['wins', 'losses', 'ties'])\n    list.push(obj)\n    let wins = Number(obj.wins)\n    let losses = Number(obj.losses)\n    let ties = Number(obj.ties) || 0\n    let games = wins + losses + ties\n    if (obj.ignore_ties === 'y') {\n      ties = 0\n    }\n    if (ties) {\n      wins += ties / 2\n    }\n    let num = percentage({\n      numerator: wins,\n      denominator: games,\n      decimals: 1\n    })\n    if (num === null) {\n      return ''\n    }\n    return `.${num * 10}`\n  },\n  winlosspct: (tmpl, list) => {\n    let obj = parse(tmpl, ['wins', 'losses'])\n    list.push(obj)\n    let wins = Number(obj.wins)\n    let losses = Number(obj.losses)\n    let num = percentage({\n      numerator: wins,\n      denominator: wins + losses,\n      decimals: 1\n    })\n    if (num === null) {\n      return ''\n    }\n    num = `.${num * 10}`\n    return `${wins || 0} || ${losses || 0} || ${num || '-'}`\n  }\n}\n//aliases\ntemplates['sfrac'] = templates.frac\ntemplates['sqrt'] = templates.radic\ntemplates['pct'] = templates.percentage\ntemplates['percent'] = templates.percentage\ntemplates['winpct'] = templates['winning percentage']\ntemplates['winperc'] = templates['winning percentage']\n\nmodule.exports = templates\n","const parse = require('../_parsers/parse')\n\nconst misc = {\n  // https://en.wikipedia.org/wiki/Template:Portuguese_name\n  'portuguese name': ['first', 'second', 'suffix'],\n\n  uss: ['ship', 'id'],\n  isbn: (tmpl, list) => {\n    let order = ['id', 'id2', 'id3']\n    let obj = parse(tmpl, order)\n    list.push(obj)\n    return 'ISBN: ' + (obj.id || '')\n  },\n  //https://en.wikipedia.org/wiki/Template:Marriage\n  //this one creates a template, and an inline response\n  marriage: (tmpl, list) => {\n    let data = parse(tmpl, ['spouse', 'from', 'to', 'end'])\n    list.push(data)\n    let str = `${data.spouse || ''}`\n    if (data.from) {\n      if (data.to) {\n        str += ` (m. ${data.from}-${data.to})`\n      } else {\n        str += ` (m. ${data.from})`\n      }\n    }\n    return str\n  },\n  //https://en.wikipedia.org/wiki/Template:Based_on\n  'based on': (tmpl, list) => {\n    let obj = parse(tmpl, ['title', 'author'])\n    list.push(obj)\n    return `${obj.title} by ${obj.author || ''}`\n  },\n  //https://en.wikipedia.org/wiki/Template:Video_game_release\n  'video game release': (tmpl, list) => {\n    let order = ['region', 'date', 'region2', 'date2', 'region3', 'date3', 'region4', 'date4']\n    let obj = parse(tmpl, order)\n    let template = {\n      template: 'video game release',\n      releases: []\n    }\n    for (let i = 0; i < order.length; i += 2) {\n      if (obj[order[i]]) {\n        template.releases.push({\n          region: obj[order[i]],\n          date: obj[order[i + 1]]\n        })\n      }\n    }\n    list.push(template)\n    let str = template.releases.map(o => `${o.region}: ${o.date || ''}`).join('\\n\\n')\n    return '\\n' + str + '\\n'\n  },\n  //barrels of oil https://en.wikipedia.org/wiki/Template:Bbl_to_t\n  'bbl to t': (tmpl, list) => {\n    let obj = parse(tmpl, ['barrels'])\n    list.push(obj)\n    if (obj.barrels === '0') {\n      return obj.barrels + ' barrel'\n    }\n    return obj.barrels + ' barrels'\n  },\n  //https://en.wikipedia.org/wiki/Template:Historical_populations\n  'historical populations': (tmpl, list) => {\n    let data = parse(tmpl)\n    data.list = data.list || []\n    let years = []\n    for (let i = 0; i < data.list.length; i += 2) {\n      let num = data.list[i + 1]\n      years.push({\n        year: data.list[i],\n        val: Number(num) || num\n      })\n    }\n    data.data = years\n    delete data.list\n    list.push(data)\n    return ''\n  }\n}\nmodule.exports = misc\n","// okay, these just hurts my feelings\n// https://www.mediawiki.org/wiki/Help:Magic_words#Other\nlet punctuation = [\n  // https://en.wikipedia.org/wiki/Template:%C2%B7\n  ['·', '·'],\n  ['·', '·'],\n  ['dot', '·'],\n  ['middot', '·'],\n  ['•', ' • '],\n  //yup, oxford comma template\n  [',', ','],\n  ['1/2', '1⁄2'],\n  ['1/3', '1⁄3'],\n  ['2/3', '2⁄3'],\n  ['1/4', '1⁄4'],\n  ['3/4', '3⁄4'],\n  ['–', '–'],\n  ['ndash', '–'],\n  ['en dash', '–'],\n  ['spaced ndash', ' – '],\n\n  ['—', '—'],\n  ['mdash', '—'],\n  ['em dash', '—'],\n\n  ['number sign', '#'],\n  ['ibeam', 'I'],\n  ['&', '&'],\n  [';', ';'],\n  ['ampersand', '&'],\n  ['snds', ' – '],\n  ['snd', ' – '],\n  // these '{{^}}' things are nuts, and used as some ilicit spacing thing.\n  ['^', ' '],\n  ['!', '|'],\n  ['\\\\', ' /'],\n  ['`', '`'],\n  ['=', '='],\n  ['bracket', '['],\n  ['[', '['],\n  ['*', '*'],\n  ['asterisk', '*'],\n  ['long dash', '———'],\n  ['clear', '\\n\\n'],\n  ['h.', 'ḥ']\n]\nconst templates = {}\npunctuation.forEach(a => {\n  templates[a[0]] = a[1]\n})\nmodule.exports = templates\n","const parse = require('../_parsers/parse')\n\nlet templates = {\n  //https://en.wikipedia.org/wiki/Template:Taxon_info\n  'taxon info': ['taxon', 'item'],\n\n  //minor planet - https://en.wikipedia.org/wiki/Template:MPC\n  mpc: (tmpl, list) => {\n    let obj = parse(tmpl, ['number', 'text'])\n    list.push(obj)\n    return `[https://minorplanetcenter.net/db_search/show_object?object_id=P/2011+NO1 ${obj.text || obj.number}]`\n  },\n  //https://en.wikipedia.org/wiki/Template:Chem2\n  chem2: (tmpl, list) => {\n    let obj = parse(tmpl, ['equation'])\n    list.push(obj)\n    return obj.equation\n  },\n  //https://en.wikipedia.org/wiki/Template:Sky\n  sky: (tmpl, list) => {\n    let obj = parse(tmpl, [\n      'asc_hours',\n      'asc_minutes',\n      'asc_seconds',\n      'dec_sign',\n      'dec_degrees',\n      'dec_minutes',\n      'dec_seconds',\n      'distance'\n    ])\n    let template = {\n      template: 'sky',\n      ascension: {\n        hours: obj.asc_hours,\n        minutes: obj.asc_minutes,\n        seconds: obj.asc_seconds\n      },\n      declination: {\n        sign: obj.dec_sign,\n        degrees: obj.dec_degrees,\n        minutes: obj.dec_minutes,\n        seconds: obj.dec_seconds\n      },\n      distance: obj.distance\n    }\n    list.push(template)\n    return ''\n  },\n\n  /*\n{{Medical cases chart/Row\n|1          = valid date\n|2          = expression for deaths\n|3          = expression for recoveries\n|4          = expression for total cases (3rd classification)\n|alttot1    = alternate expression for active cases (3rd classification)\n|5          = expression for number in 4th classification\n|6          = expression for total in 5th classification\n|alttot2    = alternate expression for number in 5th classification\n|7          = number in the first column\n|8          = change in the first column\n|firstright1= whether a change in the first column is not applicable (n.a.) (yes|y|1)\n|9          = number in the second column\n|10         = change in the second column\n|firstright2= whether a change in the second column is not applicable (n.a.) (yes|y|1)\n|divisor    = scaling divisor of the bars (bigger value = narrower bars)               [defaults to: 1]\n|numwidth   = max width of the numbers in the right columns (xx or xxxx)<-(n|t|m|w|d)  [defaults to: mm]\n|collapsible= whether the row is collapsible (yes|y|1)                                 {WIP}\n|collapsed  = manual override of the initial row state (yes|y|1)                       {WIP}\n|id         = manual override of the row id                                            {WIP}\n}}\n*/\n\n  // this is a weird one\n  //https://en.wikipedia.org/wiki/Template:Medical_cases_chart\n  'medical cases chart': (tmpl, list) => {\n    let order = [\n      'date',\n      'deaths_expr',\n      'recovery_expr',\n      'cases_expr',\n      'alt_expr_1',\n      '4th_expr',\n      '5th_expr',\n      'alt_expr_2',\n      'col_1',\n      'col_1_change',\n      'show_col_1',\n      'col_2',\n      'col_2_change',\n      'show_col_2',\n      'divisor',\n      'numwidth',\n      'collabsible',\n      'collapsed',\n      'id'\n    ]\n    let obj = parse(tmpl)\n    // parse each row template\n    let rows = obj.rows.match(/\\{\\{Medical cases chart\\/Row.*\\}\\}/gi)\n    obj.rows = rows.map(row => {\n      return parse(row, order)\n    })\n    list.push(obj)\n    return ''\n  },\n  'medical cases chart/row': tmpl => {\n    // actually keep this template\n    return tmpl\n  }\n}\nmodule.exports = templates\n","const parse = require('../_parsers/parse')\nconst flags = require('../../_data/flags')\n\nlet sports = {\n  player: (tmpl, list) => {\n    let res = parse(tmpl, ['number', 'country', 'name', 'dl'])\n    list.push(res)\n    let str = `[[${res.name}]]`\n    if (res.country) {\n      let country = (res.country || '').toLowerCase()\n      let flag = flags.find(a => country === a[1] || country === a[2]) || []\n      if (flag && flag[0]) {\n        str = flag[0] + '  ' + str\n      }\n    }\n    if (res.number) {\n      str = res.number + ' ' + str\n    }\n    return str\n  },\n\n  //https://en.wikipedia.org/wiki/Template:Goal\n  goal: (tmpl, list) => {\n    let res = parse(tmpl)\n    let obj = {\n      template: 'goal',\n      data: []\n    }\n    let arr = res.list || []\n    for (let i = 0; i < arr.length; i += 2) {\n      obj.data.push({\n        min: arr[i],\n        note: arr[i + 1] || ''\n      })\n    }\n    list.push(obj)\n    //generate a little text summary\n    let summary = '⚽ '\n    summary += obj.data\n      .map(o => {\n        let note = o.note\n        if (note) {\n          note = ` (${note})`\n        }\n        return o.min + \"'\" + note\n      })\n      .join(', ')\n    return summary\n  },\n  //yellow card\n  yel: (tmpl, list) => {\n    let obj = parse(tmpl, ['min'])\n    list.push(obj)\n    if (obj.min) {\n      return `yellow: ${obj.min || ''}'` //no yellow-card emoji\n    }\n    return ''\n  },\n  subon: (tmpl, list) => {\n    let obj = parse(tmpl, ['min'])\n    list.push(obj)\n    if (obj.min) {\n      return `sub on: ${obj.min || ''}'` //no yellow-card emoji\n    }\n    return ''\n  },\n  suboff: (tmpl, list) => {\n    let obj = parse(tmpl, ['min'])\n    list.push(obj)\n    if (obj.min) {\n      return `sub off: ${obj.min || ''}'` //no yellow-card emoji\n    }\n    return ''\n  },\n  pengoal: (tmpl, list) => {\n    list.push({\n      template: 'pengoal'\n    })\n    return '✅'\n  },\n  penmiss: (tmpl, list) => {\n    list.push({\n      template: 'penmiss'\n    })\n    return '❌'\n  },\n  //'red' card - {{sent off|cards|min1|min2}}\n  'sent off': (tmpl, list) => {\n    let obj = parse(tmpl, ['cards'])\n    let result = {\n      template: 'sent off',\n      cards: obj.cards,\n      minutes: obj.list || []\n    }\n    list.push(result)\n    let mins = result.minutes.map(m => m + \"'\").join(', ')\n    return 'sent off: ' + mins\n  }\n}\nmodule.exports = sports\n","const parse = require('../_parsers/parse')\n\nconst misc = {\n  'baseball secondary style': 0,\n  mlbplayer: function(tmpl, list) {\n    let obj = parse(tmpl, ['number', 'name', 'dl'])\n    list.push(obj)\n    return obj.name\n  }\n}\n\nmodule.exports = Object.assign({}, misc, require('./brackets'), require('./soccer'))\n","const parse = require('../_parsers/parse')\n\nconst codes = {\n  adx: 'adx', //https://en.wikipedia.org/wiki/Template:Abu_Dhabi_Securities_Exchange\n  aim: 'aim', //https://en.wikipedia.org/wiki/Template:Alternative_Investment_Market\n  bvpasa: 'bvpasa', //https://en.wikipedia.org/wiki/Template:BVPASA\n  asx: 'asx', //https://en.wikipedia.org/wiki/Template:Australian_Securities_Exchange\n  athex: 'athex', //https://en.wikipedia.org/wiki/Template:Athens_Exchange\n  bhse: 'bhse', //https://en.wikipedia.org/wiki/Template:Bahrain_Bourse\n  bvb: 'bvb', //https://en.wikipedia.org/wiki/Template:Bucharest_Stock_Exchange\n  bbv: 'bbv', //https://en.wikipedia.org/wiki/Template:BBV\n  bsx: 'bsx', //https://en.wikipedia.org/wiki/Template:Bermuda_Stock_Exchange\n  b3: 'b3', //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n  'bm&f': 'b3', //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n  'bm&f bovespa': 'b3', //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n  bwse: 'bwse', //https://en.wikipedia.org/wiki/Template:Botswana_Stock_Exchange\n  'botswana stock exchange': 'botswana stock exchange', //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n  bse: 'bse', //https://en.wikipedia.org/wiki/Template:Bombay_Stock_Exchange\n  'bombay stock exchange': 'bombay stock exchange', //https://en.wikipedia.org/wiki/Template:Bombay_Stock_Exchange\n  bpse: 'bpse', //https://en.wikipedia.org/wiki/Template:Budapest_Stock_Exchange\n  bcba: 'bcba', //https://en.wikipedia.org/wiki/Template:Buenos_Aires_Stock_Exchange\n  'canadian securities exchange': 'canadian securities exchange', //https://en.wikipedia.org/wiki/Template:Canadian_Securities_Exchange\n  bvc: 'bvc', //https://en.wikipedia.org/wiki/Template:Colombian_Securities_Exchange\n  cse: 'cse', //https://en.wikipedia.org/wiki/Template:Chittagong_Stock_Exchange\n  darse: 'darse', //https://en.wikipedia.org/wiki/Template:Dar_es_Salaam_Stock_Exchange\n  dse: 'dse', //https://en.wikipedia.org/wiki/Template:Dhaka_Stock_Exchange\n  dfm: 'dfm', //https://en.wikipedia.org/wiki/Template:Dubai_Financial_Market\n  euronext: 'euronext', //https://en.wikipedia.org/wiki/Template:Euronext\n  fwb: 'fwb', //https://en.wikipedia.org/wiki/Template:Frankfurt_Stock_Exchange\n  fse: 'fse', //https://en.wikipedia.org/wiki/Template:Fukuoka_Stock_Exchange\n  gse: 'gse', //https://en.wikipedia.org/wiki/Template:Ghana_Stock_Exchange\n  gtsm: 'gtsm', //https://en.wikipedia.org/wiki/Template:Gre_Tai_Securities_Market\n  sehk: 'sehk', //https://en.wikipedia.org/wiki/Template:Hong_Kong_Stock_Exchange\n  idx: 'idx', //https://en.wikipedia.org/wiki/Template:Indonesia_Stock_Exchange\n  nse: 'nse', //https://en.wikipedia.org/wiki/Template:National_Stock_Exchange_of_India\n  ise: 'ise', //https://en.wikipedia.org/wiki/Template:Irish_Stock_Exchange\n  isin: 'isin', //https://en.wikipedia.org/wiki/Template:ISIN\n  bist: 'bist', //https://en.wikipedia.org/wiki/Template:Borsa_Istanbul\n  bit: 'bit', //https://en.wikipedia.org/wiki/Template:Borsa_Italiana\n  jasdaq: 'jasdaq', //https://en.wikipedia.org/wiki/Template:JASDAQ\n  jse: 'jse', //https://en.wikipedia.org/wiki/Template:Johannesburg_Stock_Exchange\n  kase: 'kase', //https://en.wikipedia.org/wiki/Template:Kazakhstan_Stock_Exchange\n  krx: 'krx', //https://en.wikipedia.org/wiki/Template:Korea_Exchange\n  bvl: 'bvl', //https://en.wikipedia.org/wiki/Template:Lima_Stock_Exchange\n  lse: 'lse', //https://en.wikipedia.org/wiki/Template:London_Stock_Exchange\n  luxse: 'luxse', //https://en.wikipedia.org/wiki/Template:Luxembourg_Stock_Exchange\n  bmad: 'bmad', //https://en.wikipedia.org/wiki/Template:Bolsa_de_Madrid\n  myx: 'myx', //https://en.wikipedia.org/wiki/Template:Bursa_Malaysia\n  bmv: 'bmv', //https://en.wikipedia.org/wiki/Template:Mexican_Stock_Exchange\n  mcx: 'mcx', //https://en.wikipedia.org/wiki/Template:Moscow_Exchange\n  mutf: 'mutf', //https://en.wikipedia.org/wiki/Template:Mutual_fund\n  nag: 'nag', //https://en.wikipedia.org/wiki/Template:Nagoya_Stock_Exchange\n  kn: 'kn', //https://en.wikipedia.org/wiki/Template:Nairobi_Securities_Exchange\n  'nasdaq dubai': 'nasdaq dubai', //https://en.wikipedia.org/wiki/Template:NASDAQ_Dubai\n  nasdaq: 'nasdaq', //https://en.wikipedia.org/wiki/Template:NASDAQ\n  neeq: 'neeq', //https://en.wikipedia.org/wiki/Template:NEEQ\n  nepse: 'nepse', //https://en.wikipedia.org/wiki/Template:Nepal_Stock_Exchange\n  nyse: 'nyse', //https://en.wikipedia.org/wiki/Template:New_York_Stock_Exchange\n  nzx: 'nzx', //https://en.wikipedia.org/wiki/Template:New_Zealand_Exchange\n  amex: 'amex', //https://en.wikipedia.org/wiki/Template:NYSE_American\n  'nyse arca': 'nyse arca', //https://en.wikipedia.org/wiki/Template:NYSE_Arca\n  omx: 'omx', //https://en.wikipedia.org/wiki/Template:OMX\n  'omx baltic': 'omx baltic', //https://en.wikipedia.org/wiki/Template:OMX_Baltic\n  ose: 'ose', //https://en.wikipedia.org/wiki/Template:Oslo_Stock_Exchange\n  'otc pink': 'otc pink', //https://en.wikipedia.org/wiki/Template:OTC_Pink\n  otcqb: 'otcqb', //https://en.wikipedia.org/wiki/Template:OTCQB\n  otcqx: 'otcqx', //https://en.wikipedia.org/wiki/Template:OTCQX\n  'philippine stock exchange': 'philippine stock exchange', //https://en.wikipedia.org/wiki/Template:Philippine_Stock_Exchange\n  prse: 'prse', //https://en.wikipedia.org/wiki/Template:Prague_Stock_Exchange\n  qe: 'qe', //https://en.wikipedia.org/wiki/Template:Qatar_Stock_Exchange\n  bcs: 'bcs', //https://en.wikipedia.org/wiki/Template:Santiago_Stock_Exchange\n  'saudi stock exchange': 'saudi stock exchange', //https://en.wikipedia.org/wiki/Template:Saudi_Stock_Exchange\n  sgx: 'sgx', //https://en.wikipedia.org/wiki/Template:Singapore_Exchange\n  sse: 'sse', //https://en.wikipedia.org/wiki/Template:Shanghai_Stock_Exchange\n  szse: 'szse', //https://en.wikipedia.org/wiki/Template:Shenzhen_Stock_Exchange\n  swx: 'swx', //https://en.wikipedia.org/wiki/Template:SIX_Swiss_Exchange\n  set: 'set', //https://en.wikipedia.org/wiki/Template:Stock_Exchange_of_Thailand\n  tase: 'tase', //https://en.wikipedia.org/wiki/Template:Tel_Aviv_Stock_Exchange\n  tyo: 'tyo', //https://en.wikipedia.org/wiki/Template:Tokyo_Stock_Exchange\n  tsx: 'tsx', //https://en.wikipedia.org/wiki/Template:Toronto_Stock_Exchange\n  twse: 'twse', //https://en.wikipedia.org/wiki/Template:Taiwan_Stock_Exchange\n  'tsx-v': 'tsx-v', //https://en.wikipedia.org/wiki/Template:TSX_Venture_Exchange\n  tsxv: 'tsxv', //https://en.wikipedia.org/wiki/Template:TSX_Venture_Exchange\n  nex: 'nex', //https://en.wikipedia.org/wiki/Template:TSXV_NEX\n  ttse: 'ttse', //https://en.wikipedia.org/wiki/Template:Trinidad_and_Tobago_Stock_Exchange\n  'pfts ukraine stock exchange': 'pfts ukraine stock exchange', //https://en.wikipedia.org/wiki/Template:PFTS_Ukraine_Stock_Exchange\n  wse: 'wse', //https://en.wikipedia.org/wiki/Template:Warsaw_Stock_Exchange\n  wbag: 'wbag', //https://en.wikipedia.org/wiki/Template:Wiener_B%C3%B6rse\n  zse: 'zse', //https://en.wikipedia.org/wiki/Template:Zagreb_Stock_Exchange\n  'zagreb stock exchange': 'zagreb stock exchange', //https://en.wikipedia.org/wiki/Template:Zagreb_Stock_Exchange\n  'zimbabwe stock exchange': 'zimbabwe stock exchange' //https://en.wikipedia.org/wiki/Template:Zimbabwe_Stock_Exchange\n}\n\nconst parseStockExchange = (tmpl, list) => {\n  let o = parse(tmpl, ['ticketnumber', 'code'])\n  list.push(o)\n  let code = o.template || ''\n  if (code === '') {\n    code = o.code\n  }\n  code = (code || '').toLowerCase()\n  let out = codes[code] || ''\n  let str = out\n  if (o.ticketnumber) {\n    str = `${str}: ${o.ticketnumber}`\n  }\n  if (o.code && !codes[o.code.toLowerCase()]) {\n    str += ' ' + o.code\n  }\n  return str\n}\n\nconst currencies = {}\n//the others fit the same pattern..\nObject.keys(codes).forEach(k => {\n  currencies[k] = parseStockExchange\n})\n\nmodule.exports = currencies\n","const parse = require('../_parsers/parse')\nconst hasMonth = /^jan /i\nconst isYear = /^year /i\n\nconst monthList = [\n  'jan',\n  'feb',\n  'mar',\n  'apr',\n  'may',\n  'jun',\n  'jul',\n  'aug',\n  'sep',\n  'oct',\n  'nov',\n  'dec'\n]\n\nconst toNumber = function(str) {\n  str = str.replace(/,/g, '')\n  str = str.replace(/−/g, '-')\n  let num = Number(str)\n  if (isNaN(num)) {\n    return str\n  }\n  return num\n}\n\nlet templates = {\n  // this one is a handful!\n  //https://en.wikipedia.org/wiki/Template:Weather_box\n  'weather box': (tmpl, list) => {\n    let obj = parse(tmpl)\n    //collect all month-based data\n    let byMonth = {}\n    let properties = Object.keys(obj).filter(k => hasMonth.test(k))\n    properties = properties.map(k => k.replace(hasMonth, ''))\n    properties.forEach(prop => {\n      byMonth[prop] = []\n      monthList.forEach(m => {\n        let key = `${m} ${prop}`\n        if (obj.hasOwnProperty(key)) {\n          let num = toNumber(obj[key])\n          delete obj[key]\n          byMonth[prop].push(num)\n        }\n      })\n    })\n    //add these to original\n    obj.byMonth = byMonth\n\n    //collect year-based data\n    let byYear = {}\n    Object.keys(obj).forEach(k => {\n      if (isYear.test(k)) {\n        let prop = k.replace(isYear, '')\n        byYear[prop] = obj[k]\n        delete obj[k]\n      }\n    })\n    obj.byYear = byYear\n\n    list.push(obj)\n    return ''\n  },\n\n  //The 36 parameters are: 12 monthly highs (C), 12 lows (total 24) plus an optional 12 monthly rain/precipitation\n  //https://en.wikipedia.org/wiki/Template:Weather_box/concise_C\n  'weather box/concise c': (tmpl, list) => {\n    let obj = parse(tmpl)\n    obj.list = obj.list.map(s => toNumber(s))\n    obj.byMonth = {\n      'high c': obj.list.slice(0, 12),\n      'low c': obj.list.slice(12, 24),\n      'rain mm': obj.list.slice(24, 36)\n    }\n    delete obj.list\n    obj.template = 'weather box'\n    list.push(obj)\n    return ''\n  },\n  'weather box/concise f': (tmpl, list) => {\n    let obj = parse(tmpl)\n    obj.list = obj.list.map(s => toNumber(s))\n    obj.byMonth = {\n      'high f': obj.list.slice(0, 12),\n      'low f': obj.list.slice(12, 24),\n      'rain inch': obj.list.slice(24, 36)\n    }\n    delete obj.list\n    obj.template = 'weather box'\n    list.push(obj)\n    return ''\n  },\n\n  //https://en.wikipedia.org/wiki/Template:Climate_chart\n  'climate chart': (tmpl, list) => {\n    let lines = parse(tmpl).list || []\n    let title = lines[0]\n    let source = lines[38]\n    lines = lines.slice(1)\n    //amazingly, they use '−' symbol here instead of negatives...\n    lines = lines.map(str => {\n      if (str && str[0] === '−') {\n        str = str.replace(/−/, '-')\n      }\n      return str\n    })\n    let months = []\n    //groups of three, for 12 months\n    for (let i = 0; i < 36; i += 3) {\n      months.push({\n        low: toNumber(lines[i]),\n        high: toNumber(lines[i + 1]),\n        precip: toNumber(lines[i + 2])\n      })\n    }\n    let obj = {\n      template: 'climate chart',\n      data: {\n        title: title,\n        source: source,\n        months: months\n      }\n    }\n    list.push(obj)\n    return ''\n  }\n}\n\nmodule.exports = templates\n","//this format seems to be a pattern for these\nconst generic = ['id', 'title', 'description', 'section']\nconst idName = ['id', 'name']\n\n//https://en.wikipedia.org/wiki/Category:External_link_templates\nconst externals = {\n  //https://en.wikipedia.org/wiki/Template:IMDb_title\n  'imdb title': generic,\n  'imdb name': generic,\n  'imdb episode': generic,\n  'imdb event': generic,\n  'afi film': generic,\n  'allmovie title': generic,\n  allgame: generic,\n  'tcmdb title': generic,\n  'discogs artist': generic,\n  'discogs label': generic,\n  'discogs release': generic,\n  'discogs master': generic,\n  'librivox author': generic,\n  'musicbrainz artist': generic,\n  'musicbrainz label': generic,\n  'musicbrainz recording': generic,\n  'musicbrainz release': generic,\n  'musicbrainz work': generic,\n  youtube: generic,\n  'goodreads author': idName,\n  'goodreads book': generic,\n  twitter: idName,\n  facebook: idName,\n  instagram: idName,\n  tumblr: idName,\n  pinterest: idName,\n  'espn nfl': idName,\n  'espn nhl': idName,\n  'espn fc': idName,\n  hockeydb: idName,\n  'fifa player': idName,\n  worldcat: idName,\n  'worldcat id': idName,\n  'nfl player': idName,\n  'ted speaker': idName,\n  playmate: idName,\n  //https://en.wikipedia.org/wiki/Template:DMOZ\n  dmoz: generic,\n\n  'find a grave': ['id', 'name', 'work', 'last', 'first', 'date', 'accessdate'],\n\n  congbio: ['id', 'name', 'date'],\n\n  'hollywood walk of fame': ['name']\n}\n//alias\nexternals.imdb = externals['imdb name']\nexternals['imdb episodess'] = externals['imdb episode']\nmodule.exports = externals\n","const parse = require('../_parsers/parse')\n// const strip = require('./_parsers/_strip');\n\n//wiktionary... who knows. we should atleast try.\nconst templates = {\n  //{{inflection of|avoir||3|p|pres|ind|lang=fr}}\n  //https://en.wiktionary.org/wiki/Template:inflection_of\n  inflection: (tmpl, list) => {\n    let obj = parse(tmpl, ['lemma'])\n    obj.tags = obj.list\n    delete obj.list\n    obj.type = 'form-of'\n    list.push(obj)\n    return obj.lemma || ''\n  },\n\n  //latin verbs\n  'la-verb-form': (tmpl, list) => {\n    let obj = parse(tmpl, ['word'])\n    list.push(obj)\n    return obj.word || ''\n  },\n  'feminine plural': (tmpl, list) => {\n    let obj = parse(tmpl, ['word'])\n    list.push(obj)\n    return obj.word || ''\n  },\n  'male plural': (tmpl, list) => {\n    let obj = parse(tmpl, ['word'])\n    list.push(obj)\n    return obj.word || ''\n  },\n  rhymes: (tmpl, list) => {\n    let obj = parse(tmpl, ['word'])\n    list.push(obj)\n    return 'Rhymes: -' + (obj.word || '')\n  }\n}\n\n//https://en.wiktionary.org/wiki/Category:Form-of_templates\nlet conjugations = [\n  'abbreviation',\n  'abessive plural',\n  'abessive singular',\n  'accusative plural',\n  'accusative singular',\n  'accusative',\n  'acronym',\n  'active participle',\n  'agent noun',\n  'alternative case form',\n  'alternative form',\n  'alternative plural',\n  'alternative reconstruction',\n  'alternative spelling',\n  'alternative typography',\n  'aphetic form',\n  'apocopic form',\n  'archaic form',\n  'archaic spelling',\n  'aspirate mutation',\n  'associative plural',\n  'associative singular',\n  'attributive form',\n  'attributive form',\n  'augmentative',\n  'benefactive plural',\n  'benefactive singular',\n  'causative plural',\n  'causative singular',\n  'causative',\n  'clipping',\n  'combining form',\n  'comitative plural',\n  'comitative singular',\n  'comparative plural',\n  'comparative singular',\n  'comparative',\n  'contraction',\n  'dated form',\n  'dated spelling',\n  'dative plural definite',\n  'dative plural indefinite',\n  'dative plural',\n  'dative singular',\n  'dative',\n  'definite',\n  'deliberate misspelling',\n  'diminutive',\n  'distributive plural',\n  'distributive singular',\n  'dual',\n  'early form',\n  'eclipsis',\n  'elative',\n  'ellipsis',\n  'equative',\n  'euphemistic form',\n  'euphemistic spelling',\n  'exclusive plural',\n  'exclusive singular',\n  'eye dialect',\n  'feminine noun',\n  'feminine plural past participle',\n  'feminine plural',\n  'feminine singular past participle',\n  'feminine singular',\n  'feminine',\n  'form',\n  'former name',\n  'frequentative',\n  'future participle',\n  'genitive plural definite',\n  'genitive plural indefinite',\n  'genitive plural',\n  'genitive singular definite',\n  'genitive singular indefinite',\n  'genitive singular',\n  'genitive',\n  'gerund',\n  'h-prothesis',\n  'hard mutation',\n  'harmonic variant',\n  'imperative',\n  'imperfective form',\n  'inflected form',\n  'inflection',\n  'informal form',\n  'informal spelling',\n  'initialism',\n  'ja-form',\n  'jyutping reading',\n  'late form',\n  'lenition',\n  'masculine plural past participle',\n  'masculine plural',\n  'medieval spelling',\n  'misconstruction',\n  'misromanization',\n  'misspelling',\n  'mixed mutation',\n  'monotonic form',\n  'mutation',\n  'nasal mutation',\n  'negative',\n  'neuter plural past participle',\n  'neuter plural',\n  'neuter singular past participle',\n  'neuter singular',\n  'nominalization',\n  'nominative plural',\n  'nominative singular',\n  'nonstandard form',\n  'nonstandard spelling',\n  'oblique plural',\n  'oblique singular',\n  'obsolete form',\n  'obsolete spelling',\n  'obsolete typography',\n  'official form',\n  'participle',\n  'passive participle',\n  'passive',\n  'past active participle',\n  'past participle',\n  'past passive participle',\n  'past tense',\n  'perfective form',\n  'plural definite',\n  'plural indefinite',\n  'plural',\n  'polytonic form',\n  'present active participle',\n  'present participle',\n  'present tense',\n  'pronunciation spelling',\n  'rare form',\n  'rare spelling',\n  'reflexive',\n  'second-person singular past',\n  'short for',\n  'singular definite',\n  'singular',\n  'singulative',\n  'soft mutation',\n  'spelling',\n  'standard form',\n  'standard spelling',\n  'substantivisation',\n  'superlative',\n  'superseded spelling',\n  'supine',\n  'syncopic form',\n  'synonym',\n  'terminative plural',\n  'terminative singular',\n  'uncommon form',\n  'uncommon spelling',\n  'verbal noun',\n  'vocative plural',\n  'vocative singular'\n]\nconjugations.forEach(name => {\n  templates[name + ' of'] = (tmpl, list) => {\n    let obj = parse(tmpl, ['lemma'])\n    obj.tags = obj.list\n    delete obj.list\n    obj.type = 'form-of'\n    list.push(obj)\n    return obj.lemma || ''\n  }\n})\nmodule.exports = templates\n","module.exports = Object.assign(\n  {},\n  require('./dates'),\n  require('./formatting'),\n  require('./geo'),\n  require('./wikipedia'),\n\n  require('./brackets'),\n  require('./currency'),\n  require('./elections'),\n  require('./flags'),\n  require('./ipa'),\n  require('./languages'),\n  require('./math'),\n  require('./misc'),\n  require('./punctuation'),\n  require('./science'),\n  require('./soccer'),\n  require('./sports'),\n  require('./stock-exchanges'),\n  require('./weather'),\n  require('./websites'),\n  require('./wiktionary')\n)\n","const ignore = require('./_ignore')\nconst parse = require('./_parsers/parse')\nconst inf = require('./_infobox')\nconst templates = require('./templates')\nconst generic = require('./_parsers/parse')\nconst nums = ['0', '1', '2', '3', '4', '5', '6', '7', '8']\n\nconst isArray = function(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\n//this gets all the {{template}} strings and decides how to parse them\nconst parseTemplate = function(tmpl, list) {\n  let name = tmpl.name\n\n  if (ignore.hasOwnProperty(name) === true) {\n    return ''\n  }\n\n  // {{infobox settlement...}}\n  if (inf.isInfobox(name) === true) {\n    let obj = parse(tmpl.body, list, 'raw')\n    let infobox = inf.format(obj)\n    list.push(infobox)\n    return ''\n  }\n  // //cite book, cite arxiv...\n  if (/^cite [a-z]/.test(name) === true) {\n    let obj = parse(tmpl.body, list)\n    obj.type = obj.template\n    obj.template = 'citation'\n    list.push(obj)\n    return ''\n  }\n\n  // known template\n  if (templates.hasOwnProperty(name) === true) {\n    // handle number-syntax\n    if (typeof templates[name] === 'number') {\n      let obj = generic(tmpl.body, nums)\n      let key = String(templates[name])\n      return obj[key] || ''\n    }\n    // handle string-syntax\n    if (typeof templates[name] === 'string') {\n      return templates[name]\n    }\n    // handle array sytax\n    if (isArray(templates[name]) === true) {\n      let obj = generic(tmpl.body, templates[name])\n      list.push(obj)\n      return ''\n    }\n    // handle function syntax\n    if (typeof templates[name] === 'function') {\n      return templates[name](tmpl.body, list)\n    }\n  }\n\n  // unknown template, try to parse it\n  let parsed = parse(tmpl.body)\n  if (list && Object.keys(parsed).length > 0) {\n    list.push(parsed)\n  }\n  // ..then remove it\n  return ''\n}\nmodule.exports = parseTemplate\n","const Template = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\nconst methods = {\n  text: function() {\n    return ''\n  },\n  json: function() {\n    return this.data\n  }\n}\nObject.keys(methods).forEach(k => {\n  Template.prototype[k] = methods[k]\n})\nmodule.exports = Template\n","const Infobox = require('../infobox/Infobox')\nconst Reference = require('../reference/Reference')\nconst findTemplates = require('./find')\nconst parse = require('./parse')\nconst Template = require('./Template')\nconst isCitation = new RegExp('^(cite |citation)', 'i')\n\nconst references = {\n  citation: true,\n  refn: true,\n  harvnb: true\n}\n\nconst isReference = function(obj) {\n  return references[obj.template] === true || isCitation.test(obj.template) === true\n}\n\nconst isObject = function(obj) {\n  return obj && Object.prototype.toString.call(obj) === '[object Object]'\n}\n\nconst isInfobox = function(obj) {\n  return obj.template === 'infobox' && obj.data && isObject(obj.data)\n}\n\n//reduce the scary recursive situations\nconst allTemplates = function(section) {\n  let wiki = section.wiki\n  // nested data-structure of templates\n  let list = findTemplates(wiki)\n  let keep = []\n\n  // recursive template-parser\n  const parseThem = function(obj, parent) {\n    obj.parent = parent\n    // do tail-first recurion\n    if (obj.children && obj.children.length > 0) {\n      obj.children.forEach(ch => parseThem(ch, obj))\n    }\n    obj.out = parse(obj, keep)\n    // remove the text from every parent\n    const removeIt = function(node, body, out) {\n      if (node.parent) {\n        node.parent.body = node.parent.body.replace(body, out)\n        removeIt(node.parent, body, out)\n      }\n    }\n    removeIt(obj, obj.body, obj.out)\n    wiki = wiki.replace(obj.body, obj.out)\n  }\n\n  //kick it off\n  list.forEach(node => parseThem(node, null))\n\n  // sort-out the templates we decide to keep\n  section.infoboxes = section.infoboxes || []\n  section.references = section.references || []\n  section.templates = section.templates || []\n  section.templates = section.templates.concat(keep)\n  // remove references and infoboxes from our list\n  section.templates = section.templates.filter(obj => {\n    if (isReference(obj) === true) {\n      section.references.push(new Reference(obj))\n      return false\n    }\n    if (isInfobox(obj) === true) {\n      section.infoboxes.push(new Infobox(obj))\n      return false\n    }\n    return true\n  })\n  section.templates = section.templates.map(obj => new Template(obj))\n\n  // remove the templates from our wiki text\n  list.forEach(node => {\n    wiki = wiki.replace(node.body, node.out)\n  })\n  section.wiki = wiki\n}\n\nmodule.exports = allTemplates\n","const parseSentence = require('../../04-sentence/').fromText\nconst Image = require('../../image/Image')\n//okay, <gallery> is a xml-tag, with newline-seperated data, somehow pivoted by '|'...\n//all deities help us. truly -> https://en.wikipedia.org/wiki/Help:Gallery_tag\n// - not to be confused with https://en.wikipedia.org/wiki/Template:Gallery...\nconst parseGallery = function(section) {\n  let wiki = section.wiki\n  wiki = wiki.replace(/<gallery([^>]*?)>([\\s\\S]+?)<\\/gallery>/g, (_, attrs, inside) => {\n    let images = inside.split(/\\n/g)\n    images = images.filter(str => str && str.trim() !== '')\n    //parse the line, which has an image and sometimes a caption\n    images = images.map(str => {\n      let arr = str.split(/\\|/)\n      let obj = {\n        file: arr[0].trim()\n      }\n      let img = new Image(obj).json()\n      let caption = arr.slice(1).join('|')\n      if (caption !== '') {\n        img.caption = parseSentence(caption)\n      }\n      return img\n    })\n    //add it to our templates list\n    if (images.length > 0) {\n      section.templates.push({\n        template: 'gallery',\n        images: images,\n        pos: section.title\n      })\n    }\n    return ''\n  })\n  section.wiki = wiki\n}\nmodule.exports = parseGallery\n","const parseTemplates = require('../../template')\n//this is a non-traditional template, for some reason\n//https://en.wikipedia.org/wiki/Template:Election_box\nconst parseElection = function(section) {\n  let wiki = section.wiki\n  wiki = wiki.replace(/\\{\\{election box begin([\\s\\S]+?)\\{\\{election box end\\}\\}/gi, tmpl => {\n    let data = {\n      wiki: tmpl,\n      templates: []\n    }\n    //put it through our full template parser..\n    parseTemplates(data)\n    //okay, pull it apart into something sensible..\n    let templates = data.templates.map(t => t.json())\n    let start = templates.find(t => t.template === 'election box') || {}\n    let candidates = templates.filter(t => t.template === 'election box candidate')\n    let summary = templates.find(t => t.template === 'election box gain' || t.template === 'election box hold') || {}\n    if (candidates.length > 0 || summary) {\n      section.templates.push({\n        template: 'election box',\n        title: start.title,\n        candidates: candidates,\n        summary: summary.data\n      })\n    }\n    //remove it all\n    return ''\n  })\n  section.wiki = wiki\n}\nmodule.exports = parseElection\n","const tableParser = require('../../table/parse')\nconst keys = {\n  coach: ['team', 'year', 'g', 'w', 'l', 'w-l%', 'finish', 'pg', 'pw', 'pl', 'pw-l%'],\n  player: ['year', 'team', 'gp', 'gs', 'mpg', 'fg%', '3p%', 'ft%', 'rpg', 'apg', 'spg', 'bpg', 'ppg'],\n  roster: ['player', 'gp', 'gs', 'mpg', 'fg%', '3fg%', 'ft%', 'rpg', 'apg', 'spg', 'bpg', 'ppg']\n}\n\n//https://en.wikipedia.org/wiki/Template:NBA_player_statistics_start\nconst parseNBA = function(section) {\n  let wiki = section.wiki\n  wiki = wiki.replace(/\\{\\{nba (coach|player|roster) statistics start([\\s\\S]+?)\\{\\{s-end\\}\\}/gi, (tmpl, name) => {\n    tmpl = tmpl.replace(/^\\{\\{.*?\\}\\}/, '')\n    tmpl = tmpl.replace(/\\{\\{s-end\\}\\}/, '')\n    name = name.toLowerCase().trim()\n    let headers = '! ' + keys[name].join(' !! ')\n    let table = '{|\\n' + headers + '\\n' + tmpl + '\\n|}'\n    let rows = tableParser(table)\n\n    rows = rows.map(row => {\n      Object.keys(row).forEach(k => {\n        row[k] = row[k].text()\n      })\n      return row\n    })\n    section.templates.push({\n      template: 'NBA ' + name + ' statistics',\n      data: rows\n    })\n    return ''\n  })\n  section.wiki = wiki\n}\nmodule.exports = parseNBA\n","const tableParser = require('../../table/parse')\n//https://en.wikipedia.org/wiki/Template:MLB_game_log_section\n\n//this is pretty nuts\nconst whichHeadings = function(tmpl) {\n  let headings = ['#', 'date', 'opponent', 'score', 'win', 'loss', 'save', 'attendance', 'record']\n  if (/\\|stadium=y/i.test(tmpl) === true) {\n    headings.splice(7, 0, 'stadium') //save, stadium, attendance\n  }\n  if (/\\|time=y/i.test(tmpl) === true) {\n    headings.splice(7, 0, 'time') //save, time, stadium, attendance\n  }\n  if (/\\|box=y/i.test(tmpl) === true) {\n    headings.push('box') //record, box\n  }\n  return headings\n}\n\nconst parseMlb = function(section) {\n  let wiki = section.wiki\n  wiki = wiki.replace(/\\{\\{mlb game log (section|month)[\\s\\S]+?\\{\\{mlb game log (section|month) end\\}\\}/gi, tmpl => {\n    let headings = whichHeadings(tmpl)\n    tmpl = tmpl.replace(/^\\{\\{.*?\\}\\}/, '')\n    tmpl = tmpl.replace(/\\{\\{mlb game log (section|month) end\\}\\}/i, '')\n    let headers = '! ' + headings.join(' !! ')\n    let table = '{|\\n' + headers + '\\n' + tmpl + '\\n|}'\n    let rows = tableParser(table)\n    rows = rows.map(row => {\n      Object.keys(row).forEach(k => {\n        row[k] = row[k].text()\n      })\n      return row\n    })\n    section.templates.push({\n      template: 'mlb game log section',\n      data: rows\n    })\n    return ''\n  })\n  section.wiki = wiki\n}\nmodule.exports = parseMlb\n","const tableParser = require('../../table/parse')\nlet headings = ['res', 'record', 'opponent', 'method', 'event', 'date', 'round', 'time', 'location', 'notes']\n\n//https://en.wikipedia.org/wiki/Template:MMA_record_start\nconst parseMMA = function(section) {\n  let wiki = section.wiki\n  wiki = wiki.replace(/\\{\\{mma record start[\\s\\S]+?\\{\\{end\\}\\}/gi, tmpl => {\n    tmpl = tmpl.replace(/^\\{\\{.*?\\}\\}/, '')\n    tmpl = tmpl.replace(/\\{\\{end\\}\\}/i, '')\n    let headers = '! ' + headings.join(' !! ')\n    let table = '{|\\n' + headers + '\\n' + tmpl + '\\n|}'\n    let rows = tableParser(table)\n    rows = rows.map(row => {\n      Object.keys(row).forEach(k => {\n        row[k] = row[k].text()\n      })\n      return row\n    })\n    section.templates.push({\n      template: 'mma record start',\n      data: rows\n    })\n    return ''\n  })\n  section.wiki = wiki\n}\nmodule.exports = parseMMA\n","const parseSentence = require('../../04-sentence/').fromText\n//xml <math>y=mx+b</math> support\n//https://en.wikipedia.org/wiki/Help:Displaying_a_formula\nconst parseMath = function(section) {\n  let wiki = section.wiki\n  wiki = wiki.replace(/<math([^>]*?)>([\\s\\S]+?)<\\/math>/g, (_, attrs, inside) => {\n    //clean it up a little?\n    let formula = parseSentence(inside).text()\n    section.templates.push({\n      template: 'math',\n      formula: formula,\n      raw: inside\n    })\n    //should we atleast try to render it in plaintext? :/\n    if (formula && formula.length < 12) {\n      return formula\n    }\n    return ''\n  })\n  //try chemistry version too\n  wiki = wiki.replace(/<chem([^>]*?)>([\\s\\S]+?)<\\/chem>/g, (_, attrs, inside) => {\n    section.templates.push({\n      template: 'chem',\n      data: inside\n    })\n    return ''\n  })\n  section.wiki = wiki\n}\nmodule.exports = parseMath\n","const parseGallery = require('./gallery')\nconst parseElection = require('./election')\nconst parseNBA = require('./nba')\nconst parseMlb = require('./mlb')\nconst parseMMA = require('./mma')\nconst parseMath = require('./math')\n// Most templates are '{{template}}', but then, some are '<template></template>'.\n// ... others are {{start}}...{{end}}\n// -> these are those ones.\nconst xmlTemplates = function(section) {\n  parseElection(section)\n  parseGallery(section)\n  parseMath(section)\n  parseMlb(section)\n  parseMMA(section)\n  parseNBA(section)\n}\n\nmodule.exports = xmlTemplates\n","const Section = require('./Section')\nconst i18n = require('../_data/i18n')\nconst isReference = new RegExp('^(' + i18n.references.join('|') + '):?', 'i')\nconst section_reg = /(?:\\n|^)(={2,5}.{1,200}?={2,5})/g\n\n//interpret ==heading== lines\nconst parse = {\n  heading: require('./heading'),\n  table: require('../table'),\n  paragraphs: require('../03-paragraph'),\n  templates: require('../template'),\n  references: require('../reference'),\n  startEndTemplates: require('./start-to-end')\n}\n\nconst oneSection = function(section, doc) {\n  parse.startEndTemplates(section)\n  //parse-out the <ref></ref> tags\n  parse.references(section)\n  //parse-out all {{templates}}\n  parse.templates(section)\n  // //parse the tables\n  parse.table(section)\n  //now parse all double-newlines\n  parse.paragraphs(section, doc)\n  section = new Section(section)\n  return section\n}\n\nconst removeReferenceSection = function(sections) {\n  return sections.filter((s, i) => {\n    if (isReference.test(s.title()) === true) {\n      if (s.paragraphs().length > 0) {\n        return true\n      }\n      //does it have some wacky templates?\n      if (s.templates().length > 0) {\n        return true\n      }\n      //what it has children? awkward\n      if (sections[i + 1] && sections[i + 1].depth > s.depth) {\n        sections[i + 1].depth -= 1 //move it up a level?...\n      }\n      return false\n    }\n    return true\n  })\n}\n\nconst parseSections = function(doc) {\n  let sections = []\n  let split = doc.wiki.split(section_reg)\n  for (let i = 0; i < split.length; i += 2) {\n    let heading = split[i - 1] || ''\n    let wiki = split[i] || ''\n    if (wiki === '' && heading === '') {\n      //usually an empty 'intro' section\n      continue\n    }\n    let section = {\n      title: '',\n      depth: null,\n      wiki: wiki,\n      templates: [],\n      tables: [],\n      infoboxes: [],\n      references: []\n    }\n    //figure-out title/depth\n    parse.heading(section, heading)\n    //parse it up\n    let s = oneSection(section, doc)\n    sections.push(s)\n  }\n  //remove empty references section\n  doc.sections = removeReferenceSection(sections)\n}\n\nmodule.exports = parseSections\n","const i18n = require('../_data/i18n')\nconst cat_reg = new RegExp('\\\\[\\\\[:?(' + i18n.categories.join('|') + '):(.{2,178}?)]](w{0,10})', 'ig')\nconst cat_remove_reg = new RegExp('^\\\\[\\\\[:?(' + i18n.categories.join('|') + '):', 'ig')\n\nconst parse_categories = function(doc) {\n  let wiki = doc.wiki\n  let tmp = wiki.match(cat_reg) //regular links\n  if (tmp) {\n    tmp.forEach(function(c) {\n      c = c.replace(cat_remove_reg, '')\n      c = c.replace(/\\|?[ \\*]?\\]\\]$/i, '') //parse fancy onces..\n      c = c.replace(/\\|.*/, '') //everything after the '|' is metadata\n      if (c && !c.match(/[\\[\\]]/)) {\n        doc.categories.push(c.trim())\n      }\n    })\n  }\n  wiki = wiki.replace(cat_reg, '')\n  doc.wiki = wiki\n}\nmodule.exports = parse_categories\n","const Document = require('./Document')\nconst redirects = require('./redirects')\nconst disambig = require('./disambig')\nconst preProcess = require('./preProcess')\nconst parse = {\n  section: require('../02-section'),\n  categories: require('./categories')\n}\n\n//convert wikiscript markup lang to json\nconst main = function(wiki, options) {\n  options = options || {}\n  let doc = Object.assign(options, {\n    title: options.title || null,\n    pageID: options.pageID || options.id || null,\n    namespace: options.namespace || options.ns || null,\n    type: 'page',\n    wiki: wiki || '',\n    categories: [],\n    sections: [],\n    categories: [],\n    coordinates: []\n  })\n  //detect if page is just redirect, and return it\n  if (redirects.isRedirect(wiki) === true) {\n    doc.type = 'redirect'\n    doc.redirectTo = redirects.parse(wiki)\n    parse.categories(doc)\n    return new Document(doc)\n  }\n  //detect if page is just disambiguator page, and return\n  if (disambig.isDisambig(doc.wiki) === true) {\n    doc.type = 'disambiguation'\n  }\n  //give ourselves a little head-start\n  preProcess(doc)\n  //pull-out [[category:whatevers]]\n  parse.categories(doc)\n  //parse all the headings, and their texts/sentences\n  parse.section(doc) || []\n  //all together now\n  return new Document(doc)\n}\n\nmodule.exports = main\n","const wtf = require('../01-document')\n\n// flip response object into proper Doc objs\nconst parseDoc = function(res) {\n  res = res.filter(o => o)\n  let docs = res.map(o => {\n    return wtf(o.wiki, o.meta)\n  })\n  if (docs.length === 0) {\n    return null\n  }\n  if (docs.length === 1) {\n    return docs[0]\n  }\n  return docs\n}\nmodule.exports = parseDoc\n","// use the native client-side fetch function\nconst request = function(url, opts) {\n  //eslint-disable-next-line\n  return fetch(url, opts).then(function(res) {\n    return res.json()\n  })\n}\nmodule.exports = request\n","const makeHeaders = function(options) {\n  let agent =\n    options.userAgent ||\n    options['User-Agent'] ||\n    options['Api-User-Agent'] ||\n    'User of the wtf_wikipedia library'\n\n  const opts = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Api-User-Agent': agent,\n      'User-Agent': agent,\n      Origin: '*'\n    },\n    redirect: 'follow'\n  }\n  return opts\n}\nmodule.exports = makeHeaders\n","const parseUrl = require('./00-parseUrl')\nconst makeUrl = require('./01-makeUrl')\nconst getResult = require('./02-getResult')\nconst parseDoc = require('./03-parseDoc')\nconst http = require('./http/server')\nconst makeHeaders = require('./_headers')\nconst isUrl = /^https?:\\/\\//\n\nconst defaults = {\n  lang: 'en',\n  wiki: 'wikipedia',\n  domain: null,\n  follow_redirects: true,\n  path: 'api.php' //some 3rd party sites use a weird path\n}\n\nconst fetch = function(title, options, c) {\n  let callback = null\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n  if (typeof c === 'function') {\n    callback = c\n    c = {}\n  }\n  //support lang 2nd param\n  if (typeof options === 'string') {\n    c = c || {}\n    options = Object.assign({}, { lang: options }, c)\n  }\n  options = options || {}\n  options = Object.assign({}, defaults, options)\n  options.title = title\n  // parse url input\n  if (isUrl.test(title)) {\n    options = Object.assign(options, parseUrl(title))\n  }\n\n  const url = makeUrl(options)\n  const headers = makeHeaders(options)\n  return http(url, headers)\n    .then(res => {\n      try {\n        let data = getResult(res, options)\n        data = parseDoc(data)\n        if (callback) {\n          callback(null, data)\n        }\n        return data\n      } catch (e) {\n        throw e\n      }\n    })\n    .catch(e => {\n      console.error(e)\n      if (callback) {\n        callback(e, null)\n      }\n      return null\n    })\n}\nmodule.exports = fetch\n","const http = require('./http/server')\nconst makeHeaders = require('./_headers')\nconst getResult = require('./02-getResult')\nconst parseDoc = require('./03-parseDoc')\n\nconst defaults = {\n  lang: 'en',\n  wiki: 'wikipedia',\n  domain: null,\n  path: 'w/api.php' //some 3rd party sites use a weird path\n}\nconst isObject = function(obj) {\n  return obj && Object.prototype.toString.call(obj) === '[object Object]'\n}\n\nconst fetchRandom = function(lang, options) {\n  options = options || {}\n  options = Object.assign({}, defaults, options)\n  //support lang 2nd param\n  if (typeof lang === 'string') {\n    options.lang = lang\n  } else if (isObject(lang)) {\n    options = Object.assign(options, lang)\n  }\n\n  let url = `https://${options.lang}.wikipedia.org/${options.path}?`\n  if (options.domain) {\n    url = `https://${options.domain}/${options.path}?`\n  }\n  url += `format=json&action=query&generator=random&grnnamespace=0&prop=revisions&rvprop=content&grnlimit=1&rvslots=main&origin=*`\n\n  const headers = makeHeaders(options)\n  return http(url, headers)\n    .then(res => {\n      try {\n        let data = getResult(res)\n        return parseDoc(data)\n      } catch (e) {\n        throw e\n      }\n    })\n    .catch(e => {\n      console.error(e)\n      return null\n    })\n}\nmodule.exports = fetchRandom\n","const http = require('./http/server')\nconst makeHeaders = require('./_headers')\n\nconst defaults = {\n  lang: 'en',\n  wiki: 'wikipedia',\n  domain: null,\n  path: 'w/api.php' //some 3rd party sites use a weird path\n}\n\nconst normalizeCategory = function(cat = '') {\n  if (/^Category/i.test(cat) === false) {\n    cat = 'Category:' + cat\n  }\n  cat = cat.replace(/ /g, '_')\n  return cat\n}\n\nconst isObject = function(obj) {\n  return obj && Object.prototype.toString.call(obj) === '[object Object]'\n}\n\nconst getResult = function(body) {\n  let list = body.query.categorymembers || []\n  let res = {\n    pages: [],\n    categories: []\n  }\n  list.forEach(p => {\n    if (p.ns === 14) {\n      delete p.ns\n      res.categories.push(p)\n    } else {\n      delete p.ns\n      res.pages.push(p)\n    }\n  })\n  return res\n}\n\nconst makeUrl = function(category, options, cm) {\n  category = normalizeCategory(category)\n  category = encodeURIComponent(category)\n  let url = `https://${options.lang}.wikipedia.org/${options.path}?`\n  if (options.domain) {\n    url = `https://${options.domain}/${options.path}?`\n  }\n  url += `action=query&list=categorymembers&cmtitle=${category}&cmlimit=500&format=json&origin=*&redirects=true&cmtype=page|subcat`\n  if (cm) {\n    url += '&cmcontinue=' + cm\n  }\n  return url\n}\n\nconst fetchCategory = function(category, lang, options) {\n  options = options || {}\n  options = Object.assign({}, defaults, options)\n  //support lang 2nd param\n  if (typeof lang === 'string') {\n    options.lang = lang\n  } else if (isObject(lang)) {\n    options = Object.assign(options, lang)\n  }\n  let res = {\n    pages: [],\n    categories: []\n  }\n  // wrap a promise around potentially-many requests\n  return new Promise((resolve, reject) => {\n    const doit = function(cm) {\n      let url = makeUrl(category, options, cm)\n      const headers = makeHeaders(options)\n      return http(url, headers)\n        .then(body => {\n          res = getResult(body, res)\n          if (body.continue && body.continue.cmcontinue) {\n            doit(body.continue.cmcontinue)\n          } else {\n            resolve(res)\n          }\n        })\n        .catch(e => {\n          console.error(e)\n          reject(e)\n        })\n    }\n    doit(null)\n  })\n}\n\nmodule.exports = fetchCategory\n","module.exports = '8.1.0'","const fetch = require('./_fetch')\nconst random = require('./_fetch/random')\nconst category = require('./_fetch/category')\nconst version = require('./_version')\nconst parseDocument = require('./01-document/index.js')\n\n//the main 'factory' exported method\nconst wtf = function(wiki, options) {\n  return parseDocument(wiki, options)\n}\n\n// export classes for plugin development\nconst models = {\n  Doc: require('./01-document/Document'),\n  Section: require('./02-section/Section'),\n  Paragraph: require('./03-paragraph/Paragraph'),\n  Sentence: require('./04-sentence/Sentence'),\n  Image: require('./image/Image'),\n  Infobox: require('./infobox/Infobox'),\n  Link: require('./link/Link'),\n  List: require('./list/List'),\n  Reference: require('./reference/Reference'),\n  Table: require('./table/Table'),\n  Template: require('./template/Template'),\n  wtf: wtf\n}\nlet templates = require('./template/templates')\n\nwtf.fetch = function(title, lang, options, cb) {\n  return fetch(title, lang, options, cb)\n}\nwtf.random = function(lang, options, cb) {\n  return random(lang, options, cb)\n}\nwtf.category = function(cat, lang, options, cb) {\n  return category(cat, lang, options, cb)\n}\nwtf.extend = function(fn) {\n  fn(models, templates, this)\n  return this\n}\nwtf.version = version\n\nmodule.exports = wtf\n"],"names":["parseUrl","url","parsed","URL","title","pathname","replace","decodeURIComponent","domain","host","isInterWiki","defaults","action","prop","rvprop","maxlag","rvslots","origin","format","redirects","toQueryString","obj","Object","entries","map","key","value","encodeURIComponent","join","isArray","arr","prototype","toString","call","cleanTitle","page","trim","makeUrl","options","params","assign","lang","wiki","wikiUrl","path","test","follow_redirects","pageids","titles","getResult","data","pages","keys","query","docs","id","hasOwnProperty","text","revisions","slots","main","meta","pageID","pageid","namespace","ns","e","console","error","sectionMap","doc","fn","clue","sections","forEach","sec","list","t","push","setDefaults","categories","toJSON","i","json","isRedirect","redirectTo","coordinates","infoboxes","images","plaintext","citations","references","caption","alt","links","thumb","toJson","img","file","thumbnail","server","encodeTitle","charAt","toUpperCase","substring","makeSrc","Image","defineProperty","enumerable","methods","str","size","split","length","toLowerCase","k","src","tables","lists","paragraphs","Document","undefined","guess","sen","sentences","bolds","language","type","isDisambiguation","find","s","n","concat","paragraph","sentence","info","image","unshift","templates","template","interwiki","sort","a","b","debug","log","indent","depth","plurals","sing","res","isDisambig","redirectsTo","redirect","require$$0","disambig","require$$1","require$$2","require$$3","require$$4","require$$5","aa","ab","af","ak","als","am","an","ang","ar","arc","as","ast","av","ay","az","ba","bar","bcl","be","bg","bh","bi","bm","bn","bo","bpy","br","bs","bug","bxr","ca","cdo","ce","ceb","ch","cho","chr","chy","co","cr","cs","csb","cu","cv","cy","da","de","diq","dsb","dv","dz","ee","far","el","en","eo","es","et","eu","ext","ff","fi","fj","fo","fr","frp","fur","fy","ga","gan","gd","gil","gl","gn","got","gu","gv","ha","hak","haw","he","hi","ho","hr","ht","hu","hy","hz","ia","ie","ig","ii","ik","ilo","io","is","it","iu","ja","jbo","jv","ka","kg","ki","kj","kk","kl","km","kn","khw","ko","kr","ks","ksh","ku","kv","kw","ky","la","lad","lan","lb","lg","li","lij","lmo","ln","lo","lt","lv","mg","man","mh","mi","min","mk","ml","mn","mo","mr","ms","mt","mus","my","na","nah","nap","nd","nds","ne","ng","nl","nn","no","nr","nso","nrm","nv","ny","oc","oj","om","or","os","pa","pag","pam","pap","pdc","pi","pih","pl","pms","ps","pt","qu","rm","rmy","rn","ro","ru","rw","sa","sc","scn","sco","sd","se","sg","sh","si","simple","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tet","tg","th","ti","tk","tl","tlh","tn","to","tpi","tr","ts","tt","tum","tw","ty","udm","ug","uk","ur","uz","ve","vi","vec","vls","vo","wa","war","wo","xal","xh","yi","yo","za","zh","zu","interwikis","allowed","reduce","h","wik","languages","parseInterwiki","indexOf","m","match","site","ignore_links","external_link","link_reg","external_links","raw","protocol","link","internal_links","suffix","txt","anchor","parse_interwiki","parse_links","REDIRECT_REGEX","RegExp","i18n","parse","parseLink","getReg","allowedCharacters","templateReg","d","english","enDisambigs","ignore","openTag","closeTag","anyChar","noThanks","kill_xml","preProcess","specialChar","encodeStr","encodeObj","headers","section","p","encode","ref","Section","_title","index","indentation","templ","o","filter","name","num","remove","bads","children","nextSibling","lastSibling","parent","pList","next","last","previousSibling","previous","capitalise","slice","trim_whitespace","acronym","advisory","advogato","aew","appropedia","aquariumwiki","arborwiki","arxiv","atmwiki","baden","battlestarwiki","bcnbio","beacha","betawiki","bibcode","bibliowiki","bluwiki","blw","botwiki","boxrec","brickwiki","bugzilla","bulba","c","c2","c2find","cache","ĉej","cellwiki","centralwikia","chej","choralwiki","citizendium","ckwiss","comixpedia","commons","communityscheme","communitywiki","comune","creativecommons","creativecommonswiki","cxej","dcc","dcdatabase","dcma","debian","delicious","devmo","dictionary","dict","disinfopedia","distributedproofreaders","distributedproofreadersca","dmoz","dmozs","doi","donate","doom_wiki","download","dbdump","dpd","drae","dreamhost","drumcorpswiki","dwjwiki","eĉei","ecoreality","ecxei","elibre","emacswiki","encyc","energiewiki","englyphwiki","enkol","eokulturcentro","esolang","etherpad","ethnologue","ethnologuefamily","evowiki","exotica","fanimutationwiki","fedora","finalfantasy","finnix","flickruser","flickrphoto","floralwiki","foldoc","foundation","foundationsite","foxwiki","freebio","freebsdman","freeculturewiki","freedomdefined","freefeel","freekiwiki","freenode","freesoft","ganfyd","gardenology","gausswiki","gentoo","genwiki","gerrit","git","google","googledefine","googlegroups","guildwarswiki","guildwiki","guc","gucprefix","gutenberg","gutenbergwiki","hackerspaces","h2wiki","hammondwiki","hdl","heraldik","heroeswiki","horizonlabs","hrwiki","hrfwiki","hupwiki","iarchive","imdbname","imdbtitle","imdbcompany","imdbcharacter","incubator","infosecpedia","infosphere","irc","ircs","ircrc","rcirc","issn","iuridictum","jaglyphwiki","jefo","jerseydatabase","jira","jspwiki","jstor","kamelo","karlsruhe","kinowiki","komicawiki","kontuwiki","wikitech","libreplanet","linguistlist","linuxwiki","linuxwikide","liswiki","literateprograms","livepedia","localwiki","lojban","lostpedia","lqwiki","luxo","mail","mailarchive","mariowiki","marveldatabase","meatball","mw","mediazilla","memoryalpha","metawiki","metawikimedia","metawikipedia","mineralienatlas","moinmoin","monstropedia","mosapedia","mozcom","mozillawiki","mozillazinekb","musicbrainz","mediawikiwiki","mwod","mwot","nkcells","nara","nosmoke","nost","nostalgia","oeis","oldwikisource","olpc","omegawiki","onelook","openlibrary","openstreetmap","openwetware","opera7wiki","organicdesign","orthodoxwiki","osmwiki","otrs","otrswiki","ourmedia","outreach","outreachwiki","owasp","panawiki","patwiki","personaltelco","petscan","phab","phabricator","phwiki","phpwiki","planetmath","pmeg","pmid","pokewiki","pokéwiki","policy","proofwiki","pyrev","pythoninfo","pythonwiki","pywiki","psycle","quality","quarry","regiowiki","rev","revo","rfc","rheinneckar","robowiki","rodovid","reuterswiki","rowiki","rt","rtfm","s23wiki","scholar","schoolswp","scores","scoutwiki","scramble","seapig","seattlewiki","slwiki","senseislibrary","sharemap","silcode","slashdot","sourceforge","spcom","species","squeak","stats","stewardry","strategy","strategywiki","sulutil","swtrain","svn","swinbrain","tabwiki","tclerswiki","technorati","tenwiki","testwiki","testwikidata","test2wiki","tfwiki","thelemapedia","theopedia","thinkwiki","ticket","tmbw","tmnet","tmwiki","toolforge","toollabs","tools","tswiki","translatewiki","tviv","tvtropes","twiki","tyvawiki","umap","uncyclopedia","unihan","unreal","urbandict","usej","usemod","usability","utrs","vikidia","vlos","vkol","voipinfo","votewiki","werelate","wg","wikia","wikiasite","wikiapiary","wikibooks","wikichristian","wikicities","wikicity","wikiconference","wikidata","wikif1","wikifur","wikihow","wikiindex","wikilemon","wikilivres","wikilivresru","wikimedia","wikinews","wikinfo","wikinvest","wikiotics","wikipapers","wikipedia","wikipediawikipedia","wikiquote","wikisophia","wikisource","wikispecies","wikispot","wikiskripta","labsconsole","wikiti","wikiversity","wikivoyage","betawikiversity","wikiwikiweb","wiktionary","wipipedia","wlug","wmam","wmar","wmat","wmau","wmbd","wmbe","wmbr","wmca","wmch","wmcl","wmcn","wmco","wmcz","wmdc","securewikidc","wmde","wmdk","wmee","wmec","wmes","wmet","wmfdashboard","wmfi","wmfr","wmge","wmhi","wmhk","wmhu","wmid","wmil","wmin","wmit","wmke","wmmk","wmmx","wmnl","wmnyc","wmno","wmph","wmpl","wmpt","wmpunjabi","wmromd","wmrs","wmru","wmse","wmsk","wmtr","wmtw","wmua","wmuk","wmve","wmza","wm2005","wm2006","wm2007","wm2008","wm2009","wm2010","wm2011","wm2012","wm2013","wm2014","wm2015","wm2016","wm2017","wm2018","wmania","wikimania","wmteam","wmf","wmfblog","wmdeblog","wookieepedia","wowwiki","wqy","wurmpedia","viaf","zrhwiki","zum","zwiki","sep11","ace","ady","arz","atj","azb","ban","bjn","ckb","crh","din","dty","eml","fa","frr","gag","gcr","glk","gom","gor","hif","hsb","hyw","inh","jam","kaa","kab","kbd","kbp","koi","krc","lbe","lez","lfn","lrc","ltg","mai","mdf","mhr","mnw","mrj","mwl","myv","mzn","nov","nqo","olo","pcd","pfl","pnb","pnt","rue","sah","sat","shn","shy","srn","stq","szl","szy","tcy","tyv","vep","wuu","xmf","yue","zea","cz","dk","epo","jp","minnan","nb","nan","vro","cmn","lzh","rup","gsw","sgs","egl","w","wikt","q","chapter","v","voy","Link","href","wikis","removeLinks","line","getLinks","parseLinks","formatting","italics","fmt","bold","italic","isNumber","dates","numbers","Number","isNaN","number","l","Sentence","abbreviations","literalAbbreviations","abbrev_reg","acronym_reg","elipses_reg","hasWord","flatten","all","naiive_split","splits","isBalanced","open","closed","quotes","sentence_parser","chunks","isSentence","hmm","fromText","postprocess","parseFmt","helpers","byParagraph","sentenceParser","strip","tmpl","fmtName","pipeSplitter","pop","hasKey","reserved","parseKey","parts","val","keyMaker","order","whoCares","classname","style","align","margin","left","boxsize","framestyle","item_style","collapsible","list_style_type","colwidth","cleanup","parseSentence","makeFormat","parser","shift","Reference","encyclopedia","author","hasCitation","parseCitation","parseInline","inline","parseRefs","r","heading_reg","parseHeading","parseReferences","fns","lines","findRows","rows","row","getRowSpan","getColSpan","doColSpan","parseInt","splice","doRowSpan","handleSpans","isHeading","headings","age","born","date","year","city","country","population","count","cleanText","skipSpanRow","len","hasTxt","removeMidSpans","findHeaders","first","Boolean","parseRow","firstRowHeader","parseTable","want","table","Table","keyValue","keyvalue","keyval","openReg","closeReg","findTables","stack","Paragraph","opener","closer","nested_find","out","chars","open_count","close_count","j","isFile","fileNames","file_reg","imgLayouts","border","right","center","top","bottom","none","upright","baseline","middle","sub","oneImage","imgData","parseTemplate","parseImages","matches","toText","List","list_reg","bullet_reg","number_reg","has_word","isList","cleanList","grabList","parseList","theRest","parseSentences","twoNewLines","parseParagraphs","infobox","normalize","Infobox","_type","get","tmp","close","findFlat","carry","getName","hasTemplate","body","doEach","substr","inside","findTemplates","i18nReg","startReg","endReg","yearIn","known","editnotice","geobox","hybridbox","ichnobox","infraspeciesbox","mycomorphbox","oobox","speciesbox","subspeciesbox","taxobox","nhlteamseason","edencharacter","samurai","protein","ordination","mlbbioret","isInfobox","fmtInfobox","monthName","months","ymd","units","month","String","tz","pad","hour","minute","time","second","misc","reign","start","end","circa","Date","getFullYear","getMonth","getDate","monthname","oldstyledate","day","getEpoch","getTime","delta","from","diff","years","Math","floor","days","getBoth","parsers","timezone","natural_date","one_year","two_dates","birth_year","birth_month","birth_date","death_year","death_month","death_date","timeSince","now","predicate","abs","hours","dateTmpl","currentday","currentdayname","getDay","currentmonth","currentyear","monthyear","setMonth","birth_day","dts","birth","death","birthdeathage","dob","localday","localdayname","localmonth","localyear","currentmonthname","currentmonthabbrev","bda","tag","span","div","content","attribs","plural","word","sep","trunc","p1","p2","p3","braces","attrs","nobold","noitalic","nocaps","syntaxhighlight","code","samp","vanchor","resize","ra","minutes","seconds","deg2hms","degrees","hms2deg","decdeg","deg","rnd","dec","toLocaleString","u","ul","upl","tmpls","plainlist","hlist","pagelist","catlist","f","flatlist","ublist","collist","columnslist","convert","two","four","three","term","defn","lino","linum","ill","frac","height","result","unit","quote","lbs","lbc","lbb","own","sic","one","nolink","formatnum","lc","lcfirst","uc","ucfirst","padleft","padStart","padright","padEnd","abbr","abbrlink","finedetail","parseDms","hemisphere","sign","decDeg","round","places","negative","findLatLng","types","lat","lon","convertDMS","parseParams","props","parseCoor","coord","display","geo","etyl","mention","sortname","target","dab","ll","sisterProjects","commonscat","about","desc","sfn","audio","rp","gallery","unreferenced","citation","titlecase","cells","moreCells","won","place","zeroPad","parseTeam","team","score","seed","playoffBracket","rounds","brackets","codes","a$","au$","aud","bdt","brl","ca$","cad","chf","cny","czk","dkk","dkk2","euro","gbp","hk$","hkd","ils","inr","jpy","myr","nis","nok","nok2","nz$","nzd","peso","pkr","r$","rmb","rub","ruble","rupee","s$","sek","sek2","sfr","sgd","shekel","sheqel","ttd","us$","usd","yen","zar","parseCurrency","amount","inrConvert","currency_formatting","multiplier","rupee_value","currencies","currency","monnaie","unité","nombre","iso4217","inrconvert","flag","found","flags","flagcountry","flagcu","flagicon","flagdeco","fb","fbicon","flagathlete","getLang","english_title","ipa","ipac","transcription","transl","text2","iso","taste","nihongo","romaji","kanji","percentage","numerator","denominator","perc","decimals","toFixed","math","formula","integer","radic","before","after","done","total","digits","wins","losses","ties","games","ignore_ties","winlosspct","uss","isbn","marriage","spouse","releases","region","barrels","punctuation","mpc","chem2","equation","sky","ascension","asc_hours","asc_minutes","asc_seconds","declination","dec_sign","dec_degrees","dec_minutes","dec_seconds","distance","sports","player","goal","note","summary","yel","subon","suboff","pengoal","penmiss","cards","mins","mlbplayer","adx","aim","bvpasa","asx","athex","bhse","bvb","bbv","bsx","b3","bwse","bse","bpse","bcba","bvc","cse","darse","dse","dfm","euronext","fwb","fse","gse","gtsm","sehk","idx","nse","ise","isin","bist","bit","jasdaq","jse","kase","krx","bvl","lse","luxse","bmad","myx","bmv","mcx","mutf","nag","nasdaq","neeq","nepse","nyse","nzx","amex","omx","ose","otcqb","otcqx","prse","qe","bcs","sgx","sse","szse","swx","set","tase","tyo","tsx","twse","tsxv","nex","ttse","wse","wbag","zse","parseStockExchange","ticketnumber","hasMonth","isYear","monthList","toNumber","byMonth","properties","byYear","source","low","high","precip","generic","idName","externals","allgame","youtube","twitter","facebook","instagram","tumblr","pinterest","hockeydb","worldcat","playmate","congbio","imdb","inflection","tags","lemma","rhymes","conjugations","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","nums","inf","Template","isCitation","refn","harvnb","isReference","isObject","allTemplates","keep","parseThem","removeIt","node","parseGallery","_","pos","parseElection","parseTemplates","candidates","coach","roster","parseNBA","tableParser","whichHeadings","parseMlb","parseMMA","parseMath","xmlTemplates","section_reg","heading","startEndTemplates","oneSection","removeReferenceSection","parseSections","cat_reg","cat_remove_reg","parse_categories","parseDoc","wtf","request","opts","fetch","then","makeHeaders","agent","userAgent","method","Origin","isUrl","callback","http","fetchRandom","normalizeCategory","cat","categorymembers","category","cm","fetchCategory","Promise","resolve","reject","doit","cmcontinue","parseDocument","models","Doc","cb","random","extend","version"],"mappings":"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"}