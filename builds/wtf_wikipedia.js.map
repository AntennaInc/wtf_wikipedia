{"version":3,"file":"wtf_wikipedia.js","sources":["../src/_fetch/00-parseUrl.js","../src/_fetch/01-makeUrl.js","../src/_fetch/02-getResult.js","../src/01-document/_sectionMap.js","../src/_lib/setDefaults.js","../src/01-document/toJson.js","../src/_lib/aliases.js","../src/image/toJson.js","../src/image/Image.js","../src/01-document/Document.js","../src/_data/i18n.js","../src/_data/languages.js","../src/04-sentence/interwiki.js","../src/link/parse.js","../src/01-document/redirects.js","../src/01-document/disambig.js","../src/01-document/preProcess/kill_xml.js","../src/01-document/preProcess/index.js","../src/_lib/encode.js","../src/02-section/toJson.js","../src/02-section/Section.js","../src/_lib/helpers.js","../src/link/Link.js","../src/link/index.js","../src/04-sentence/formatting.js","../src/04-sentence/toJson.js","../src/04-sentence/Sentence.js","../src/_data/abbreviations.js","../src/04-sentence/parse.js","../src/04-sentence/index.js","../src/template/_parsers/_strip.js","../src/template/_parsers/_fmtName.js","../src/template/_parsers/01-pipe-splitter.js","../src/template/_parsers/02-keyMaker.js","../src/template/_parsers/03-cleanup.js","../src/template/_parsers/parse.js","../src/reference/Reference.js","../src/reference/index.js","../src/02-section/heading.js","../src/table/parse/_findRows.js","../src/table/parse/_spans.js","../src/table/parse/index.js","../src/table/toJson.js","../src/table/Table.js","../src/table/index.js","../src/03-paragraph/toJson.js","../src/03-paragraph/Paragraph.js","../src/_lib/recursive_match.js","../src/image/index.js","../src/list/List.js","../src/list/index.js","../src/03-paragraph/index.js","../src/infobox/toJson.js","../src/infobox/Infobox.js","../src/template/_getTemplates.js","../src/template/Template.js","../src/template/_ignore.js","../src/template/_parsers/_getName.js","../src/template/_infobox.js","../src/template/templates/dates/_months.js","../src/template/templates/dates/_format.js","../src/template/templates/dates/misc.js","../src/template/templates/dates/_delta.js","../src/template/templates/dates/parsers.js","../src/template/templates/dates/_timeSince.js","../src/template/templates/dates/index.js","../src/template/templates/formatting/format.js","../src/template/templates/formatting/lists.js","../src/template/templates/formatting/misc.js","../src/template/templates/formatting/index.js","../src/template/templates/geo/dms-format.js","../src/template/templates/geo/coor.js","../src/template/templates/geo/index.js","../src/template/templates/wikipedia/links.js","../src/template/templates/wikipedia/page.js","../src/template/templates/wikipedia/table-cell.js","../src/template/templates/wikipedia/index.js","../src/template/templates/brackets.js","../src/template/templates/currency.js","../src/template/templates/elections.js","../src/_data/flags.js","../src/template/templates/flags.js","../src/template/templates/ipa.js","../src/template/templates/languages.js","../src/template/templates/math.js","../src/template/templates/misc.js","../src/template/templates/punctuation.js","../src/template/templates/science.js","../src/template/templates/soccer.js","../src/template/templates/sports.js","../src/template/templates/stock-exchanges.js","../src/template/templates/weather.js","../src/template/templates/websites.js","../src/template/templates/wiktionary.js","../src/template/templates/index.js","../src/template/parse.js","../src/template/index.js","../src/02-section/start-to-end/gallery.js","../src/02-section/start-to-end/election.js","../src/02-section/start-to-end/nba.js","../src/02-section/start-to-end/mlb.js","../src/02-section/start-to-end/mma.js","../src/02-section/start-to-end/math.js","../src/02-section/start-to-end/index.js","../src/02-section/index.js","../src/01-document/categories.js","../src/01-document/index.js","../src/_fetch/03-parseDoc.js","../src/_fetch/http/server.js","../src/_fetch/index.js"],"sourcesContent":["const parseUrl = function(url) {\n  let parsed = new URL(url) //eslint-disable-line\n  let title = parsed.pathname.replace(/^\\/(wiki\\/)?/, '')\n  title = decodeURIComponent(title)\n  return {\n    domain: parsed.host,\n    title: title\n  }\n}\nmodule.exports = parseUrl\n","const isInterWiki = /(wiktionary|wikinews|wikibooks|wikiquote|wikisource|wikispecies|wikiversity|wikivoyage|wikipedia|wikimedia|foundation|meta)\\.org/\n\nconst defaults = {\n  action: 'query',\n  prop: 'revisions', //we use the 'revisions' api here, instead of the Raw api, for its CORS-rules..\n  rvprop: 'content',\n  maxlag: 5,\n  rvslots: 'main',\n  origin: '*',\n  format: 'json',\n  redirects: 'true'\n}\n\nconst toQueryString = function(obj) {\n  return Object.entries(obj)\n    .map(([key, value]) => {\n      return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`\n    })\n    .join('&')\n}\n\nconst isArray = function(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\nconst cleanTitle = page => {\n  page = page.replace(/ /g, '_')\n  page = page.trim()\n  // page = encodeURIComponent(page)\n  return page\n}\n\nconst makeUrl = function(options) {\n  let params = Object.assign({}, defaults)\n  // default url\n  let url = `https://${options.lang}.${options.wiki}.org/w/api.php?`\n  // from a 3rd party wiki\n  if (options.domain) {\n    let path = options.path\n    //wikimedia api uses ./w/api path. no others do\n    if (isInterWiki.test(options.domain)) {\n      path = 'w/api.php'\n    }\n    url = `https://${options.domain}/${path}?`\n  }\n  if (!options.follow_redirects) {\n    delete params.redirects\n  }\n  // support numerical ids\n  let page = options.title\n  if (typeof page === 'number' || (isArray(page) && typeof page[0] === 'number')) {\n    params.pageids = page\n  } else if (isArray(page) === true) {\n    //support array\n    params.titles = page.map(cleanTitle).join('|')\n  } else {\n    console.log(page)\n    // single page\n    params.titles = cleanTitle(page)\n    console.log(params.titles)\n  }\n  // make it!\n  url += toQueryString(params)\n  return url\n}\nmodule.exports = makeUrl\n","//this data-format from mediawiki api is nutso\nconst getResult = function(data) {\n  let pages = Object.keys(data.query.pages)\n  let docs = pages.map(id => {\n    let page = data.query.pages[id] || {}\n    if (page.hasOwnProperty('missing') || page.hasOwnProperty('invalid')) {\n      return null\n    }\n    let text = page.revisions[0]['*']\n    //us the 'generator' result format, for the random() method\n    if (!text && page.revisions[0].slots) {\n      text = page.revisions[0].slots.main['*']\n    }\n    let meta = {\n      title: page.title,\n      id: page.pageid,\n      namespace: page.ns\n    }\n    try {\n      return { wiki: text, meta: meta }\n    } catch (e) {\n      console.error(e)\n      throw e\n    }\n  })\n  return docs\n}\nmodule.exports = getResult\n","//helper for looping around all sections of a document\nconst sectionMap = function(doc, fn, clue) {\n  let arr = []\n  doc.sections().forEach(sec => {\n    let list = []\n    if (typeof clue === 'string') {\n      list = sec[fn](clue)\n    } else {\n      list = sec[fn]()\n    }\n    list.forEach(t => {\n      arr.push(t)\n    })\n  })\n  if (typeof clue === 'number') {\n    return arr[clue]\n  }\n  return arr\n}\nmodule.exports = sectionMap\n","//\nconst setDefaults = function(options, defaults) {\n  return Object.assign({}, defaults, options)\n}\nmodule.exports = setDefaults\n","const setDefaults = require('../_lib/setDefaults')\nconst defaults = {\n  title: true,\n  sections: true,\n  pageID: true,\n  categories: true\n}\n\n//an opinionated output of the most-wanted data\nconst toJSON = function(doc, options) {\n  options = setDefaults(options, defaults)\n  let data = {}\n  if (options.title) {\n    data.title = doc.options.title || doc.title()\n  }\n  if (options.pageID && doc.options.pageID) {\n    data.pageID = doc.options.pageID\n  }\n  if (options.categories) {\n    data.categories = doc.categories()\n  }\n  if (options.sections) {\n    data.sections = doc.sections().map(i => i.json(options))\n  }\n  if (doc.isRedirect() === true) {\n    data.isRedirect = true\n    data.redirectTo = doc.data.redirectTo\n    data.sections = []\n  }\n\n  //these are default-off\n  if (options.coordinates) {\n    data.coordinates = doc.coordinates()\n  }\n  if (options.infoboxes) {\n    data.infoboxes = doc.infoboxes().map(i => i.json(options))\n  }\n  if (options.images) {\n    data.images = doc.images().map(i => i.json(options))\n  }\n  if (options.plaintext) {\n    data.plaintext = doc.plaintext(options)\n  }\n  if (options.citations || options.references) {\n    data.references = doc.references()\n  }\n  return data\n}\nmodule.exports = toJSON\n","//alternative names for methods in API\nconst aliasList = {\n  plaintext: 'text',\n\n  wikiscript: 'wikitext',\n  wiki: 'wikitext',\n  original: 'wikitext'\n}\nmodule.exports = aliasList\n","const setDefaults = require('../_lib/setDefaults')\n\nconst defaults = {\n  caption: true,\n  alt: true,\n  links: true,\n  thumb: true,\n  url: true\n}\n//\nconst toJson = function(img, options) {\n  options = setDefaults(options, defaults)\n  let json = {\n    file: img.file()\n  }\n  if (options.thumb !== false) {\n    json.thumb = img.thumbnail()\n  }\n  if (options.url !== false) {\n    json.url = img.url()\n  }\n  //add captions\n  if (options.caption !== false && img.data.caption) {\n    json.caption = img.caption()\n    if (options.links !== false && img.data.caption.links()) {\n      json.links = img.links()\n    }\n  }\n  if (options.alt !== false && img.data.alt) {\n    json.alt = img.alt()\n  }\n  return json\n}\nmodule.exports = toJson\n","// const fetch = require('cross-fetch')\nconst toJson = require('./toJson')\nconst server = 'https://wikipedia.org/wiki/Special:Redirect/file/'\nconst aliasList = require('../_lib/aliases')\n\nconst encodeTitle = function(file) {\n  let title = file.replace(/^(image|file?)\\:/i, '')\n  //titlecase it\n  title = title.charAt(0).toUpperCase() + title.substring(1)\n  //spaces to underscores\n  title = title.trim().replace(/ /g, '_')\n  return title\n}\n\n//the wikimedia image url is a little silly:\nconst makeSrc = function(file) {\n  let title = encodeTitle(file)\n  title = encodeURIComponent(title)\n  return title\n}\n\n//the class for our image generation functions\nconst Image = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  file() {\n    return this.data.file || ''\n  },\n  alt() {\n    let str = this.data.alt || this.data.file || ''\n    str = str.replace(/^(file|image):/i, '')\n    str = str.replace(/\\.(jpg|jpeg|png|gif|svg)/i, '')\n    return str.replace(/_/g, ' ')\n  },\n  caption() {\n    if (this.data.caption) {\n      return this.data.caption.text()\n    }\n    return ''\n  },\n  links() {\n    if (this.data.caption) {\n      return this.data.caption.links()\n    }\n    return []\n  },\n  url() {\n    return server + makeSrc(this.file())\n  },\n  thumbnail(size) {\n    size = size || 300\n    let path = makeSrc(this.file())\n    return server + path + '?width=' + size\n  },\n  format() {\n    let arr = this.file().split('.')\n    if (arr[arr.length - 1]) {\n      return arr[arr.length - 1].toLowerCase()\n    }\n    return null\n  },\n  json: function(options) {\n    options = options || {}\n    return toJson(this, options)\n  },\n  text: function() {\n    return ''\n  }\n}\n\nObject.keys(methods).forEach(k => {\n  Image.prototype[k] = methods[k]\n})\n//add alises, too\nObject.keys(aliasList).forEach(k => {\n  Image.prototype[k] = methods[aliasList[k]]\n})\nImage.prototype.src = Image.prototype.url\nImage.prototype.thumb = Image.prototype.thumbnail\nmodule.exports = Image\n","const sectionMap = require('./_sectionMap')\nconst toJSON = require('./toJson')\nconst setDefaults = require('../_lib/setDefaults')\nconst aliasList = require('../_lib/aliases')\nconst Image = require('../image/Image')\n\nconst defaults = {\n  tables: true,\n  lists: true,\n  paragraphs: true\n}\n\n//\nconst Document = function(data, options) {\n  this.options = options || {}\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  title: function(str) {\n    //use like a setter\n    if (str !== undefined) {\n      this.data.title = str\n      return str\n    }\n    //few places this could be stored..\n    if (this.data.title !== '') {\n      return this.data.title\n    }\n    if (this.options.title) {\n      return this.options.title\n    }\n    let guess = null\n    //guess the title of this page from first sentence bolding\n    let sen = this.sentences(0)\n    if (sen) {\n      guess = sen.bolds(0)\n    }\n    return guess\n  },\n  isRedirect: function() {\n    return this.data.type === 'redirect'\n  },\n  redirectTo: function() {\n    return this.data.redirectTo\n  },\n  isDisambiguation: function() {\n    return this.data.type === 'disambiguation'\n  },\n  categories: function(clue) {\n    if (typeof clue === 'number') {\n      return this.data.categories[clue]\n    }\n    return this.data.categories || []\n  },\n  sections: function(clue) {\n    let arr = this.data.sections || []\n    arr.forEach(sec => (sec.doc = this))\n    //grab a specific section, by its title\n    if (typeof clue === 'string') {\n      let str = clue.toLowerCase().trim()\n      return arr.find(s => {\n        return s.title().toLowerCase() === str\n      })\n    }\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr\n  },\n  paragraphs: function(n) {\n    let arr = []\n    this.data.sections.forEach(s => {\n      arr = arr.concat(s.paragraphs())\n    })\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr\n  },\n  paragraph: function(n) {\n    let arr = this.paragraphs() || []\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr[0]\n  },\n  sentences: function(n) {\n    let arr = []\n    this.sections().forEach(sec => {\n      arr = arr.concat(sec.sentences())\n    })\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr\n  },\n  images: function(clue) {\n    let arr = sectionMap(this, 'images', null)\n    //grab image from infobox, first\n    this.infoboxes().forEach(info => {\n      let img = info.image()\n      if (img) {\n        arr.unshift(img) //put it at the top\n      }\n    })\n    //look for 'gallery' templates, too\n    this.templates().forEach(obj => {\n      if (obj.template === 'gallery') {\n        obj.images = obj.images || []\n        obj.images.forEach(img => {\n          if (img instanceof Image === false) {\n            img = new Image(img)\n          }\n          arr.push(img)\n        })\n      }\n    })\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr\n  },\n  links: function(clue) {\n    return sectionMap(this, 'links', clue)\n  },\n  interwiki: function(clue) {\n    return sectionMap(this, 'interwiki', clue)\n  },\n  lists: function(clue) {\n    return sectionMap(this, 'lists', clue)\n  },\n  tables: function(clue) {\n    return sectionMap(this, 'tables', clue)\n  },\n  templates: function(clue) {\n    return sectionMap(this, 'templates', clue)\n  },\n  references: function(clue) {\n    return sectionMap(this, 'references', clue)\n  },\n  coordinates: function(clue) {\n    return sectionMap(this, 'coordinates', clue)\n  },\n  infoboxes: function(clue) {\n    let arr = sectionMap(this, 'infoboxes')\n    //sort them by biggest-first\n    arr = arr.sort((a, b) => {\n      if (Object.keys(a.data).length > Object.keys(b.data).length) {\n        return -1\n      }\n      return 1\n    })\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr\n  },\n  text: function(options) {\n    options = setDefaults(options, defaults)\n    //nah, skip these.\n    if (this.isRedirect() === true) {\n      return ''\n    }\n    let arr = this.sections().map(sec => sec.text(options))\n    return arr.join('\\n\\n')\n  },\n  json: function(options) {\n    options = setDefaults(options, defaults)\n    return toJSON(this, options)\n  },\n  debug: function() {\n    console.log('\\n')\n    this.sections().forEach(sec => {\n      let indent = ' - '\n      for (let i = 0; i < sec.depth; i += 1) {\n        indent = ' -' + indent\n      }\n      console.log(indent + (sec.title() || '(Intro)'))\n    })\n    return this\n  }\n}\n\n//add alises\nObject.keys(aliasList).forEach(k => {\n  Document.prototype[k] = methods[aliasList[k]]\n})\n//add singular-methods, too\nlet plurals = [\n  'sections',\n  'infoboxes',\n  'sentences',\n  'citations',\n  'references',\n  'coordinates',\n  'tables',\n  'links',\n  'images',\n  'categories'\n]\nplurals.forEach(fn => {\n  let sing = fn.replace(/ies$/, 'y')\n  sing = sing.replace(/e?s$/, '')\n  methods[sing] = function(n) {\n    n = n || 0\n    return this[fn](n)\n  }\n})\n\nObject.keys(methods).forEach(k => {\n  Document.prototype[k] = methods[k]\n})\n\n//alias these ones\nDocument.prototype.isDisambig = Document.prototype.isDisambiguation\nDocument.prototype.citations = Document.prototype.references\nDocument.prototype.redirectsTo = Document.prototype.redirectTo\nDocument.prototype.redirect = Document.prototype.redirectTo\nDocument.prototype.redirects = Document.prototype.redirectTo\n\nmodule.exports = Document\n","// wikipedia special terms lifted and augmented from parsoid parser april 2015\n// (not even close to being complete)\nlet i18n = {\n  files: [\n    'файл',\n    'fitxer',\n    'soubor',\n    'datei',\n    'file',\n    'archivo',\n    'پرونده',\n    'tiedosto',\n    'mynd',\n    \"su'wret\",\n    'fichier',\n    'bestand',\n    'датотека',\n    'dosya',\n    'fil',\n    'ファイル',\n    'चित्र',\n    '파일' //ko\n  ],\n  images: ['image', 'चित्र'],\n  templates: [\n    'шаблён',\n    'plantilla',\n    'šablona',\n    'vorlage',\n    'template',\n    'الگو',\n    'malline',\n    'snið',\n    'shablon',\n    'modèle',\n    'sjabloon',\n    'шаблон',\n    'şablon'\n  ],\n  categories: [\n    'катэгорыя',\n    'categoria',\n    'kategorie',\n    'category',\n    'categoría',\n    'رده',\n    'luokka',\n    'flokkur',\n    'kategoriya',\n    'catégorie',\n    'categorie',\n    'категорија',\n    'kategori',\n    'kategoria',\n    'تصنيف',\n    'श्रेणी',\n    '분류', //ko\n    //--\n    'flocc',\n    'Kateqoriya'\n  ],\n  redirects: [\n    'перанакіраваньне',\n    'redirect',\n    'přesměruj',\n    'weiterleitung',\n    'redirección',\n    'redireccion',\n    'تغییر_مسیر',\n    'تغییرمسیر',\n    'ohjaus',\n    'uudelleenohjaus',\n    'tilvísun',\n    'aýdaw',\n    'айдау',\n    'redirection',\n    'doorverwijzing',\n    'преусмери',\n    'преусмјери',\n    'yönlendi̇rme',\n    'yönlendi̇r',\n    '重定向',\n    'redirección',\n    'redireccion',\n    '重定向',\n    'yönlendirm?e?',\n    'تغییر_مسیر',\n    'تغییرمسیر',\n    'перанакіраваньне',\n    'yönlendirme'\n  ],\n  specials: [\n    'спэцыяльныя',\n    'especial',\n    'speciální',\n    'spezial',\n    'special',\n    'ویژه',\n    'toiminnot',\n    'kerfissíða',\n    'arnawlı',\n    'spécial',\n    'speciaal',\n    'посебно',\n    'özel',\n    '特別'\n  ],\n  users: [\n    'удзельнік',\n    'usuari',\n    'uživatel',\n    'benutzer',\n    'user',\n    'usuario',\n    'کاربر',\n    'käyttäjä',\n    'notandi',\n    'paydalanıwshı',\n    'utilisateur',\n    'gebruiker',\n    'корисник',\n    'kullanıcı',\n    '利用者'\n  ],\n  disambigs: [\n    'disambig', //en\n    'disambiguation', //en\n    'dab', //en\n    'disamb', //en\n    'begriffsklärung', //de\n    'ujednoznacznienie', //pl\n    'doorverwijspagina', //nl\n    '消歧义', //zh\n    'desambiguación', //es\n    'dubbelsinnig', //af\n    'disambigua', //it\n    'desambiguação', //pt\n    'homonymie', //fr\n    'неоднозначность', //ru\n    'anlam ayrımı', //tr\n    '曖昧さ回避' //ja\n  ],\n  infoboxes: [\n    'infobox',\n    'ficha',\n    'канадский',\n    'inligtingskas',\n    'inligtingskas3', //af\n    'لغة',\n    'bilgi kutusu', //tr\n    'yerleşim bilgi kutusu',\n    'infoboks', //nn, no\n    'ज्ञानसन्दूक'\n  ],\n  sources: [\n    //blacklist these headings, as they're not plain-text\n    'references',\n    'see also',\n    'external links',\n    'further reading',\n    'notes et références',\n    'voir aussi',\n    'liens externes',\n    '参考文献', //references (ja)\n    '脚注', //citations (ja)\n    '関連項目', //see also (ja)\n    '外部リンク' //external links (ja)\n  ]\n}\n\nlet dictionary = {}\nObject.keys(i18n).forEach(k => {\n  i18n[k].forEach(w => {\n    dictionary[w] = true\n  })\n})\ni18n.dictionary = dictionary\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = i18n\n}\n","// TODO: not used. remove local_title or english_title, and probably direction.\nmodule.exports = {\n  aa: {\n    english_title: 'Afar',\n    direction: 'ltr',\n    local_title: 'Afar'\n  },\n  ab: {\n    english_title: 'Abkhazian',\n    direction: 'ltr',\n    local_title: 'Аҧсуа'\n  },\n  af: {\n    english_title: 'Afrikaans',\n    direction: 'ltr',\n    local_title: 'Afrikaans'\n  },\n  ak: {\n    english_title: 'Akan',\n    direction: 'ltr',\n    local_title: 'Akana'\n  },\n  als: {\n    english_title: 'Alemannic',\n    direction: 'ltr',\n    local_title: 'Alemannisch'\n  },\n  am: {\n    english_title: 'Amharic',\n    direction: 'ltr',\n    local_title: 'አማርኛ'\n  },\n  an: {\n    english_title: 'Aragonese',\n    direction: 'ltr',\n    local_title: 'Aragonés'\n  },\n  ang: {\n    english_title: 'Anglo-Saxon',\n    direction: 'ltr',\n    local_title: 'Englisc'\n  },\n  ar: {\n    english_title: 'Arabic',\n    direction: 'rtl',\n    local_title: 'العربية'\n  },\n  arc: {\n    english_title: 'Aramaic',\n    direction: 'rtl',\n    local_title: 'ܣܘܪܬ'\n  },\n  as: {\n    english_title: 'Assamese',\n    direction: 'ltr',\n    local_title: 'অসমীয়া'\n  },\n  ast: {\n    english_title: 'Asturian',\n    direction: 'ltr',\n    local_title: 'Asturianu'\n  },\n  av: {\n    english_title: 'Avar',\n    direction: 'ltr',\n    local_title: 'Авар'\n  },\n  ay: {\n    english_title: 'Aymara',\n    direction: 'ltr',\n    local_title: 'Aymar'\n  },\n  az: {\n    english_title: 'Azerbaijani',\n    direction: 'ltr',\n    local_title: 'Azərbaycanca'\n  },\n  ba: {\n    english_title: 'Bashkir',\n    direction: 'ltr',\n    local_title: 'Башҡорт'\n  },\n  bar: {\n    english_title: 'Bavarian',\n    direction: 'ltr',\n    local_title: 'Boarisch'\n  },\n  'bat-smg': {\n    english_title: 'Samogitian',\n    direction: 'ltr',\n    local_title: 'Žemaitėška'\n  },\n  bcl: {\n    english_title: 'Bikol',\n    direction: 'ltr',\n    local_title: 'Bikol'\n  },\n  be: {\n    english_title: 'Belarusian',\n    direction: 'ltr',\n    local_title: 'Беларуская'\n  },\n  'be-x-old': {\n    english_title: 'Belarusian',\n    direction: '(Taraškievica)',\n    local_title: 'ltr'\n  },\n  bg: {\n    english_title: 'Bulgarian',\n    direction: 'ltr',\n    local_title: 'Български'\n  },\n  bh: {\n    english_title: 'Bihari',\n    direction: 'ltr',\n    local_title: 'भोजपुरी'\n  },\n  bi: {\n    english_title: 'Bislama',\n    direction: 'ltr',\n    local_title: 'Bislama'\n  },\n  bm: {\n    english_title: 'Bambara',\n    direction: 'ltr',\n    local_title: 'Bamanankan'\n  },\n  bn: {\n    english_title: 'Bengali',\n    direction: 'ltr',\n    local_title: 'বাংলা'\n  },\n  bo: {\n    english_title: 'Tibetan',\n    direction: 'ltr',\n    local_title: 'བོད་ཡིག'\n  },\n  bpy: {\n    english_title: 'Bishnupriya',\n    direction: 'Manipuri',\n    local_title: 'ltr'\n  },\n  br: {\n    english_title: 'Breton',\n    direction: 'ltr',\n    local_title: 'Brezhoneg'\n  },\n  bs: {\n    english_title: 'Bosnian',\n    direction: 'ltr',\n    local_title: 'Bosanski'\n  },\n  bug: {\n    english_title: 'Buginese',\n    direction: 'ltr',\n    local_title: 'ᨅᨔ'\n  },\n  bxr: {\n    english_title: 'Buriat',\n    direction: '(Russia)',\n    local_title: 'ltr'\n  },\n  ca: {\n    english_title: 'Catalan',\n    direction: 'ltr',\n    local_title: 'Català'\n  },\n  cdo: {\n    english_title: 'Min',\n    direction: 'Dong',\n    local_title: 'Chinese'\n  },\n  ce: {\n    english_title: 'Chechen',\n    direction: 'ltr',\n    local_title: 'Нохчийн'\n  },\n  ceb: {\n    english_title: 'Cebuano',\n    direction: 'ltr',\n    local_title: 'Sinugboanong'\n  },\n  ch: {\n    english_title: 'Chamorro',\n    direction: 'ltr',\n    local_title: 'Chamoru'\n  },\n  cho: {\n    english_title: 'Choctaw',\n    direction: 'ltr',\n    local_title: 'Choctaw'\n  },\n  chr: {\n    english_title: 'Cherokee',\n    direction: 'ltr',\n    local_title: 'ᏣᎳᎩ'\n  },\n  chy: {\n    english_title: 'Cheyenne',\n    direction: 'ltr',\n    local_title: 'Tsetsêhestâhese'\n  },\n  co: {\n    english_title: 'Corsican',\n    direction: 'ltr',\n    local_title: 'Corsu'\n  },\n  cr: {\n    english_title: 'Cree',\n    direction: 'ltr',\n    local_title: 'Nehiyaw'\n  },\n  cs: {\n    english_title: 'Czech',\n    direction: 'ltr',\n    local_title: 'Česky'\n  },\n  csb: {\n    english_title: 'Kashubian',\n    direction: 'ltr',\n    local_title: 'Kaszëbsczi'\n  },\n  cu: {\n    english_title: 'Old',\n    direction: 'Church',\n    local_title: 'Slavonic'\n  },\n  cv: {\n    english_title: 'Chuvash',\n    direction: 'ltr',\n    local_title: 'Чăваш'\n  },\n  cy: {\n    english_title: 'Welsh',\n    direction: 'ltr',\n    local_title: 'Cymraeg'\n  },\n  da: {\n    english_title: 'Danish',\n    direction: 'ltr',\n    local_title: 'Dansk'\n  },\n  de: {\n    english_title: 'German',\n    direction: 'ltr',\n    local_title: 'Deutsch'\n  },\n  diq: {\n    english_title: 'Dimli',\n    direction: 'ltr',\n    local_title: 'Zazaki'\n  },\n  dsb: {\n    english_title: 'Lower',\n    direction: 'Sorbian',\n    local_title: 'ltr'\n  },\n  dv: {\n    english_title: 'Divehi',\n    direction: 'rtl',\n    local_title: 'ދިވެހިބަސް'\n  },\n  dz: {\n    english_title: 'Dzongkha',\n    direction: 'ltr',\n    local_title: 'ཇོང་ཁ'\n  },\n  ee: {\n    english_title: 'Ewe',\n    direction: 'ltr',\n    local_title: 'Ɛʋɛ'\n  },\n  far: {\n    english_title: 'Farsi',\n    direction: 'ltr',\n    local_title: 'فارسی'\n  },\n  el: {\n    english_title: 'Greek',\n    direction: 'ltr',\n    local_title: 'Ελληνικά'\n  },\n  en: {\n    english_title: 'English',\n    direction: 'ltr',\n    local_title: 'English'\n  },\n  eo: {\n    english_title: 'Esperanto',\n    direction: 'ltr',\n    local_title: 'Esperanto'\n  },\n  es: {\n    english_title: 'Spanish',\n    direction: 'ltr',\n    local_title: 'Español'\n  },\n  et: {\n    english_title: 'Estonian',\n    direction: 'ltr',\n    local_title: 'Eesti'\n  },\n  eu: {\n    english_title: 'Basque',\n    direction: 'ltr',\n    local_title: 'Euskara'\n  },\n  ext: {\n    english_title: 'Extremaduran',\n    direction: 'ltr',\n    local_title: 'Estremeñu'\n  },\n  ff: {\n    english_title: 'Peul',\n    direction: 'ltr',\n    local_title: 'Fulfulde'\n  },\n  fi: {\n    english_title: 'Finnish',\n    direction: 'ltr',\n    local_title: 'Suomi'\n  },\n  'fiu-vro': {\n    english_title: 'Võro',\n    direction: 'ltr',\n    local_title: 'Võro'\n  },\n  fj: {\n    english_title: 'Fijian',\n    direction: 'ltr',\n    local_title: 'Na'\n  },\n  fo: {\n    english_title: 'Faroese',\n    direction: 'ltr',\n    local_title: 'Føroyskt'\n  },\n  fr: {\n    english_title: 'French',\n    direction: 'ltr',\n    local_title: 'Français'\n  },\n  frp: {\n    english_title: 'Arpitan',\n    direction: 'ltr',\n    local_title: 'Arpitan'\n  },\n  fur: {\n    english_title: 'Friulian',\n    direction: 'ltr',\n    local_title: 'Furlan'\n  },\n  fy: {\n    english_title: 'West',\n    direction: 'Frisian',\n    local_title: 'ltr'\n  },\n  ga: {\n    english_title: 'Irish',\n    direction: 'ltr',\n    local_title: 'Gaeilge'\n  },\n  gan: {\n    english_title: 'Gan',\n    direction: 'Chinese',\n    local_title: 'ltr'\n  },\n  gd: {\n    english_title: 'Scottish',\n    direction: 'Gaelic',\n    local_title: 'ltr'\n  },\n  gil: {\n    english_title: 'Gilbertese',\n    direction: 'ltr',\n    local_title: 'Taetae'\n  },\n  gl: {\n    english_title: 'Galician',\n    direction: 'ltr',\n    local_title: 'Galego'\n  },\n  gn: {\n    english_title: 'Guarani',\n    direction: 'ltr',\n    local_title: \"Avañe'ẽ\"\n  },\n  got: {\n    english_title: 'Gothic',\n    direction: 'ltr',\n    local_title: 'gutisk'\n  },\n  gu: {\n    english_title: 'Gujarati',\n    direction: 'ltr',\n    local_title: 'ગુજરાતી'\n  },\n  gv: {\n    english_title: 'Manx',\n    direction: 'ltr',\n    local_title: 'Gaelg'\n  },\n  ha: {\n    english_title: 'Hausa',\n    direction: 'rtl',\n    local_title: 'هَوُسَ'\n  },\n  hak: {\n    english_title: 'Hakka',\n    direction: 'Chinese',\n    local_title: 'ltr'\n  },\n  haw: {\n    english_title: 'Hawaiian',\n    direction: 'ltr',\n    local_title: 'Hawai`i'\n  },\n  he: {\n    english_title: 'Hebrew',\n    direction: 'rtl',\n    local_title: 'עברית'\n  },\n  hi: {\n    english_title: 'Hindi',\n    direction: 'ltr',\n    local_title: 'हिन्दी'\n  },\n  ho: {\n    english_title: 'Hiri',\n    direction: 'Motu',\n    local_title: 'ltr'\n  },\n  hr: {\n    english_title: 'Croatian',\n    direction: 'ltr',\n    local_title: 'Hrvatski'\n  },\n  ht: {\n    english_title: 'Haitian',\n    direction: 'ltr',\n    local_title: 'Krèyol'\n  },\n  hu: {\n    english_title: 'Hungarian',\n    direction: 'ltr',\n    local_title: 'Magyar'\n  },\n  hy: {\n    english_title: 'Armenian',\n    direction: 'ltr',\n    local_title: 'Հայերեն'\n  },\n  hz: {\n    english_title: 'Herero',\n    direction: 'ltr',\n    local_title: 'Otsiherero'\n  },\n  ia: {\n    english_title: 'Interlingua',\n    direction: 'ltr',\n    local_title: 'Interlingua'\n  },\n  id: {\n    english_title: 'Indonesian',\n    direction: 'ltr',\n    local_title: 'Bahasa'\n  },\n  ie: {\n    english_title: 'Interlingue',\n    direction: 'ltr',\n    local_title: 'Interlingue'\n  },\n  ig: {\n    english_title: 'Igbo',\n    direction: 'ltr',\n    local_title: 'Igbo'\n  },\n  ii: {\n    english_title: 'Sichuan',\n    direction: 'Yi',\n    local_title: 'ltr'\n  },\n  ik: {\n    english_title: 'Inupiak',\n    direction: 'ltr',\n    local_title: 'Iñupiak'\n  },\n  ilo: {\n    english_title: 'Ilokano',\n    direction: 'ltr',\n    local_title: 'Ilokano'\n  },\n  io: {\n    english_title: 'Ido',\n    direction: 'ltr',\n    local_title: 'Ido'\n  },\n  is: {\n    english_title: 'Icelandic',\n    direction: 'ltr',\n    local_title: 'Íslenska'\n  },\n  it: {\n    english_title: 'Italian',\n    direction: 'ltr',\n    local_title: 'Italiano'\n  },\n  iu: {\n    english_title: 'Inuktitut',\n    direction: 'ltr',\n    local_title: 'ᐃᓄᒃᑎᑐᑦ'\n  },\n  ja: {\n    english_title: 'Japanese',\n    direction: 'ltr',\n    local_title: '日本語'\n  },\n  jbo: {\n    english_title: 'Lojban',\n    direction: 'ltr',\n    local_title: 'Lojban'\n  },\n  jv: {\n    english_title: 'Javanese',\n    direction: 'ltr',\n    local_title: 'Basa'\n  },\n  ka: {\n    english_title: 'Georgian',\n    direction: 'ltr',\n    local_title: 'ქართული'\n  },\n  kg: {\n    english_title: 'Kongo',\n    direction: 'ltr',\n    local_title: 'KiKongo'\n  },\n  ki: {\n    english_title: 'Kikuyu',\n    direction: 'ltr',\n    local_title: 'Gĩkũyũ'\n  },\n  kj: {\n    english_title: 'Kuanyama',\n    direction: 'ltr',\n    local_title: 'Kuanyama'\n  },\n  kk: {\n    english_title: 'Kazakh',\n    direction: 'ltr',\n    local_title: 'Қазақша'\n  },\n  kl: {\n    english_title: 'Greenlandic',\n    direction: 'ltr',\n    local_title: 'Kalaallisut'\n  },\n  km: {\n    english_title: 'Cambodian',\n    direction: 'ltr',\n    local_title: 'ភាសាខ្មែរ'\n  },\n  kn: {\n    english_title: 'Kannada',\n    direction: 'ltr',\n    local_title: 'ಕನ್ನಡ'\n  },\n  khw: {\n    english_title: 'Khowar',\n    direction: 'rtl',\n    local_title: 'کھوار'\n  },\n  ko: {\n    english_title: 'Korean',\n    direction: 'ltr',\n    local_title: '한국어'\n  },\n  kr: {\n    english_title: 'Kanuri',\n    direction: 'ltr',\n    local_title: 'Kanuri'\n  },\n  ks: {\n    english_title: 'Kashmiri',\n    direction: 'rtl',\n    local_title: 'कश्मीरी'\n  },\n  ksh: {\n    english_title: 'Ripuarian',\n    direction: 'ltr',\n    local_title: 'Ripoarisch'\n  },\n  ku: {\n    english_title: 'Kurdish',\n    direction: 'rtl',\n    local_title: 'Kurdî'\n  },\n  kv: {\n    english_title: 'Komi',\n    direction: 'ltr',\n    local_title: 'Коми'\n  },\n  kw: {\n    english_title: 'Cornish',\n    direction: 'ltr',\n    local_title: 'Kernewek'\n  },\n  ky: {\n    english_title: 'Kirghiz',\n    direction: 'ltr',\n    local_title: 'Kırgızca'\n  },\n  la: {\n    english_title: 'Latin',\n    direction: 'ltr',\n    local_title: 'Latina'\n  },\n  lad: {\n    english_title: 'Ladino',\n    direction: 'ltr',\n    local_title: 'Dzhudezmo'\n  },\n  lan: {\n    english_title: 'Lango',\n    direction: 'ltr',\n    local_title: 'Leb'\n  },\n  lb: {\n    english_title: 'Luxembourgish',\n    direction: 'ltr',\n    local_title: 'Lëtzebuergesch'\n  },\n  lg: {\n    english_title: 'Ganda',\n    direction: 'ltr',\n    local_title: 'Luganda'\n  },\n  li: {\n    english_title: 'Limburgian',\n    direction: 'ltr',\n    local_title: 'Limburgs'\n  },\n  lij: {\n    english_title: 'Ligurian',\n    direction: 'ltr',\n    local_title: 'Líguru'\n  },\n  lmo: {\n    english_title: 'Lombard',\n    direction: 'ltr',\n    local_title: 'Lumbaart'\n  },\n  ln: {\n    english_title: 'Lingala',\n    direction: 'ltr',\n    local_title: 'Lingála'\n  },\n  lo: {\n    english_title: 'Laotian',\n    direction: 'ltr',\n    local_title: 'ລາວ'\n  },\n  lt: {\n    english_title: 'Lithuanian',\n    direction: 'ltr',\n    local_title: 'Lietuvių'\n  },\n  lv: {\n    english_title: 'Latvian',\n    direction: 'ltr',\n    local_title: 'Latviešu'\n  },\n  'map-bms': {\n    english_title: 'Banyumasan',\n    direction: 'ltr',\n    local_title: 'Basa'\n  },\n  mg: {\n    english_title: 'Malagasy',\n    direction: 'ltr',\n    local_title: 'Malagasy'\n  },\n  man: {\n    english_title: 'Mandarin',\n    direction: 'ltr',\n    local_title: '官話'\n  },\n  mh: {\n    english_title: 'Marshallese',\n    direction: 'ltr',\n    local_title: 'Kajin'\n  },\n  mi: {\n    english_title: 'Maori',\n    direction: 'ltr',\n    local_title: 'Māori'\n  },\n  min: {\n    english_title: 'Minangkabau',\n    direction: 'ltr',\n    local_title: 'Minangkabau'\n  },\n  mk: {\n    english_title: 'Macedonian',\n    direction: 'ltr',\n    local_title: 'Македонски'\n  },\n  ml: {\n    english_title: 'Malayalam',\n    direction: 'ltr',\n    local_title: 'മലയാളം'\n  },\n  mn: {\n    english_title: 'Mongolian',\n    direction: 'ltr',\n    local_title: 'Монгол'\n  },\n  mo: {\n    english_title: 'Moldovan',\n    direction: 'ltr',\n    local_title: 'Moldovenească'\n  },\n  mr: {\n    english_title: 'Marathi',\n    direction: 'ltr',\n    local_title: 'मराठी'\n  },\n  ms: {\n    english_title: 'Malay',\n    direction: 'ltr',\n    local_title: 'Bahasa'\n  },\n  mt: {\n    english_title: 'Maltese',\n    direction: 'ltr',\n    local_title: 'bil-Malti'\n  },\n  mus: {\n    english_title: 'Creek',\n    direction: 'ltr',\n    local_title: 'Muskogee'\n  },\n  my: {\n    english_title: 'Burmese',\n    direction: 'ltr',\n    local_title: 'Myanmasa'\n  },\n  na: {\n    english_title: 'Nauruan',\n    direction: 'ltr',\n    local_title: 'Dorerin'\n  },\n  nah: {\n    english_title: 'Nahuatl',\n    direction: 'ltr',\n    local_title: 'Nahuatl'\n  },\n  nap: {\n    english_title: 'Neapolitan',\n    direction: 'ltr',\n    local_title: 'Nnapulitano'\n  },\n  nd: {\n    english_title: 'North',\n    direction: 'Ndebele',\n    local_title: 'ltr'\n  },\n  nds: {\n    english_title: 'Low German',\n    direction: 'ltr',\n    local_title: 'Plattdüütsch'\n  },\n  'nds-nl': {\n    english_title: 'Dutch',\n    direction: 'Low',\n    local_title: 'Saxon'\n  },\n  ne: {\n    english_title: 'Nepali',\n    direction: 'ltr',\n    local_title: 'नेपाली'\n  },\n  new: {\n    english_title: 'Newar',\n    direction: 'ltr',\n    local_title: 'नेपालभाषा'\n  },\n  ng: {\n    english_title: 'Ndonga',\n    direction: 'ltr',\n    local_title: 'Oshiwambo'\n  },\n  nl: {\n    english_title: 'Dutch',\n    direction: 'ltr',\n    local_title: 'Nederlands'\n  },\n  nn: {\n    english_title: 'Norwegian',\n    direction: 'Nynorsk',\n    local_title: 'ltr'\n  },\n  no: {\n    english_title: 'Norwegian',\n    direction: 'ltr',\n    local_title: 'Norsk'\n  },\n  nr: {\n    english_title: 'South',\n    direction: 'Ndebele',\n    local_title: 'ltr'\n  },\n  nso: {\n    english_title: 'Northern',\n    direction: 'Sotho',\n    local_title: 'ltr'\n  },\n  nrm: {\n    english_title: 'Norman',\n    direction: 'ltr',\n    local_title: 'Nouormand'\n  },\n  nv: {\n    english_title: 'Navajo',\n    direction: 'ltr',\n    local_title: 'Diné'\n  },\n  ny: {\n    english_title: 'Chichewa',\n    direction: 'ltr',\n    local_title: 'Chi-Chewa'\n  },\n  oc: {\n    english_title: 'Occitan',\n    direction: 'ltr',\n    local_title: 'Occitan'\n  },\n  oj: {\n    english_title: 'Ojibwa',\n    direction: 'ltr',\n    local_title: 'ᐊᓂᔑᓈᐯᒧᐎᓐ'\n  },\n  om: {\n    english_title: 'Oromo',\n    direction: 'ltr',\n    local_title: 'Oromoo'\n  },\n  or: {\n    english_title: 'Oriya',\n    direction: 'ltr',\n    local_title: 'ଓଡ଼ିଆ'\n  },\n  os: {\n    english_title: 'Ossetian',\n    direction: 'ltr',\n    local_title: 'Иронау'\n  },\n  pa: {\n    english_title: 'Panjabi',\n    direction: 'ltr',\n    local_title: 'ਪੰਜਾਬੀ'\n  },\n  pag: {\n    english_title: 'Pangasinan',\n    direction: 'ltr',\n    local_title: 'Pangasinan'\n  },\n  pam: {\n    english_title: 'Kapampangan',\n    direction: 'ltr',\n    local_title: 'Kapampangan'\n  },\n  pap: {\n    english_title: 'Papiamentu',\n    direction: 'ltr',\n    local_title: 'Papiamentu'\n  },\n  pdc: {\n    english_title: 'Pennsylvania',\n    direction: 'German',\n    local_title: 'ltr'\n  },\n  pi: {\n    english_title: 'Pali',\n    direction: 'ltr',\n    local_title: 'Pāli'\n  },\n  pih: {\n    english_title: 'Norfolk',\n    direction: 'ltr',\n    local_title: 'Norfuk'\n  },\n  pl: {\n    english_title: 'Polish',\n    direction: 'ltr',\n    local_title: 'Polski'\n  },\n  pms: {\n    english_title: 'Piedmontese',\n    direction: 'ltr',\n    local_title: 'Piemontèis'\n  },\n  ps: {\n    english_title: 'Pashto',\n    direction: 'rtl',\n    local_title: 'پښتو'\n  },\n  pt: {\n    english_title: 'Portuguese',\n    direction: 'ltr',\n    local_title: 'Português'\n  },\n  qu: {\n    english_title: 'Quechua',\n    direction: 'ltr',\n    local_title: 'Runa'\n  },\n  rm: {\n    english_title: 'Raeto',\n    direction: 'Romance',\n    local_title: 'ltr'\n  },\n  rmy: {\n    english_title: 'Romani',\n    direction: 'ltr',\n    local_title: 'Romani'\n  },\n  rn: {\n    english_title: 'Kirundi',\n    direction: 'ltr',\n    local_title: 'Kirundi'\n  },\n  ro: {\n    english_title: 'Romanian',\n    direction: 'ltr',\n    local_title: 'Română'\n  },\n  'roa-rup': {\n    english_title: 'Aromanian',\n    direction: 'ltr',\n    local_title: 'Armâneashti'\n  },\n  ru: {\n    english_title: 'Russian',\n    direction: 'ltr',\n    local_title: 'Русский'\n  },\n  rw: {\n    english_title: 'Rwandi',\n    direction: 'ltr',\n    local_title: 'Kinyarwandi'\n  },\n  sa: {\n    english_title: 'Sanskrit',\n    direction: 'ltr',\n    local_title: 'संस्कृतम्'\n  },\n  sc: {\n    english_title: 'Sardinian',\n    direction: 'ltr',\n    local_title: 'Sardu'\n  },\n  scn: {\n    english_title: 'Sicilian',\n    direction: 'ltr',\n    local_title: 'Sicilianu'\n  },\n  sco: {\n    english_title: 'Scots',\n    direction: 'ltr',\n    local_title: 'Scots'\n  },\n  sd: {\n    english_title: 'Sindhi',\n    direction: 'ltr',\n    local_title: 'सिनधि'\n  },\n  se: {\n    english_title: 'Northern',\n    direction: 'Sami',\n    local_title: 'ltr'\n  },\n  sg: {\n    english_title: 'Sango',\n    direction: 'ltr',\n    local_title: 'Sängö'\n  },\n  sh: {\n    english_title: 'Serbo-Croatian',\n    direction: 'ltr',\n    local_title: 'Srpskohrvatski'\n  },\n  si: {\n    english_title: 'Sinhalese',\n    direction: 'ltr',\n    local_title: 'සිංහල'\n  },\n  simple: {\n    english_title: 'Simple',\n    direction: 'English',\n    local_title: 'ltr'\n  },\n  sk: {\n    english_title: 'Slovak',\n    direction: 'ltr',\n    local_title: 'Slovenčina'\n  },\n  sl: {\n    english_title: 'Slovenian',\n    direction: 'ltr',\n    local_title: 'Slovenščina'\n  },\n  sm: {\n    english_title: 'Samoan',\n    direction: 'ltr',\n    local_title: 'Gagana'\n  },\n  sn: {\n    english_title: 'Shona',\n    direction: 'ltr',\n    local_title: 'chiShona'\n  },\n  so: {\n    english_title: 'Somalia',\n    direction: 'ltr',\n    local_title: 'Soomaaliga'\n  },\n  sq: {\n    english_title: 'Albanian',\n    direction: 'ltr',\n    local_title: 'Shqip'\n  },\n  sr: {\n    english_title: 'Serbian',\n    direction: 'ltr',\n    local_title: 'Српски'\n  },\n  ss: {\n    english_title: 'Swati',\n    direction: 'ltr',\n    local_title: 'SiSwati'\n  },\n  st: {\n    english_title: 'Southern',\n    direction: 'Sotho',\n    local_title: 'ltr'\n  },\n  su: {\n    english_title: 'Sundanese',\n    direction: 'ltr',\n    local_title: 'Basa'\n  },\n  sv: {\n    english_title: 'Swedish',\n    direction: 'ltr',\n    local_title: 'Svenska'\n  },\n  sw: {\n    english_title: 'Swahili',\n    direction: 'ltr',\n    local_title: 'Kiswahili'\n  },\n  ta: {\n    english_title: 'Tamil',\n    direction: 'ltr',\n    local_title: 'தமிழ்'\n  },\n  te: {\n    english_title: 'Telugu',\n    direction: 'ltr',\n    local_title: 'తెలుగు'\n  },\n  tet: {\n    english_title: 'Tetum',\n    direction: 'ltr',\n    local_title: 'Tetun'\n  },\n  tg: {\n    english_title: 'Tajik',\n    direction: 'ltr',\n    local_title: 'Тоҷикӣ'\n  },\n  th: {\n    english_title: 'Thai',\n    direction: 'ltr',\n    local_title: 'ไทย'\n  },\n  ti: {\n    english_title: 'Tigrinya',\n    direction: 'ltr',\n    local_title: 'ትግርኛ'\n  },\n  tk: {\n    english_title: 'Turkmen',\n    direction: 'ltr',\n    local_title: 'Туркмен'\n  },\n  tl: {\n    english_title: 'Tagalog',\n    direction: 'ltr',\n    local_title: 'Tagalog'\n  },\n  tlh: {\n    english_title: 'Klingon',\n    direction: 'ltr',\n    local_title: 'tlhIngan-Hol'\n  },\n  tn: {\n    english_title: 'Tswana',\n    direction: 'ltr',\n    local_title: 'Setswana'\n  },\n  to: {\n    english_title: 'Tonga',\n    direction: 'ltr',\n    local_title: 'Lea'\n  },\n  tpi: {\n    english_title: 'Tok',\n    direction: 'Pisin',\n    local_title: 'ltr'\n  },\n  tr: {\n    english_title: 'Turkish',\n    direction: 'ltr',\n    local_title: 'Türkçe'\n  },\n  ts: {\n    english_title: 'Tsonga',\n    direction: 'ltr',\n    local_title: 'Xitsonga'\n  },\n  tt: {\n    english_title: 'Tatar',\n    direction: 'ltr',\n    local_title: 'Tatarça'\n  },\n  tum: {\n    english_title: 'Tumbuka',\n    direction: 'ltr',\n    local_title: 'chiTumbuka'\n  },\n  tw: {\n    english_title: 'Twi',\n    direction: 'ltr',\n    local_title: 'Twi'\n  },\n  ty: {\n    english_title: 'Tahitian',\n    direction: 'ltr',\n    local_title: 'Reo'\n  },\n  udm: {\n    english_title: 'Udmurt',\n    direction: 'ltr',\n    local_title: 'Удмурт'\n  },\n  ug: {\n    english_title: 'Uyghur',\n    direction: 'ltr',\n    local_title: 'Uyƣurqə'\n  },\n  uk: {\n    english_title: 'Ukrainian',\n    direction: 'ltr',\n    local_title: 'Українська'\n  },\n  ur: {\n    english_title: 'Urdu',\n    direction: 'rtl',\n    local_title: 'اردو'\n  },\n  uz: {\n    english_title: 'Uzbek',\n    direction: 'ltr',\n    local_title: 'Ўзбек'\n  },\n  ve: {\n    english_title: 'Venda',\n    direction: 'ltr',\n    local_title: 'Tshivenḓa'\n  },\n  vi: {\n    english_title: 'Vietnamese',\n    direction: 'ltr',\n    local_title: 'Việtnam'\n  },\n  vec: {\n    english_title: 'Venetian',\n    direction: 'ltr',\n    local_title: 'Vèneto'\n  },\n  vls: {\n    english_title: 'West',\n    direction: 'Flemish',\n    local_title: 'ltr'\n  },\n  vo: {\n    english_title: 'Volapük',\n    direction: 'ltr',\n    local_title: 'Volapük'\n  },\n  wa: {\n    english_title: 'Walloon',\n    direction: 'ltr',\n    local_title: 'Walon'\n  },\n  war: {\n    english_title: 'Waray-Waray',\n    direction: 'ltr',\n    local_title: 'Winaray'\n  },\n  wo: {\n    english_title: 'Wolof',\n    direction: 'ltr',\n    local_title: 'Wollof'\n  },\n  xal: {\n    english_title: 'Kalmyk',\n    direction: 'ltr',\n    local_title: 'Хальмг'\n  },\n  xh: {\n    english_title: 'Xhosa',\n    direction: 'ltr',\n    local_title: 'isiXhosa'\n  },\n  yi: {\n    english_title: 'Yiddish',\n    direction: 'rtl',\n    local_title: 'ייִדיש'\n  },\n  yo: {\n    english_title: 'Yoruba',\n    direction: 'ltr',\n    local_title: 'Yorùbá'\n  },\n  za: {\n    english_title: 'Zhuang',\n    direction: 'ltr',\n    local_title: 'Cuengh'\n  },\n  zh: {\n    english_title: 'Chinese',\n    direction: 'ltr',\n    local_title: '中文'\n  },\n  'zh-classical': {\n    english_title: 'Classical',\n    direction: 'Chinese',\n    local_title: 'ltr'\n  },\n  'zh-min-nan': {\n    english_title: 'Minnan',\n    direction: 'ltr',\n    local_title: 'Bân-lâm-gú'\n  },\n  'zh-yue': {\n    english_title: 'Cantonese',\n    direction: 'ltr',\n    local_title: '粵語'\n  },\n  zu: {\n    english_title: 'Zulu',\n    direction: 'ltr',\n    local_title: 'isiZulu'\n  }\n}\n","const languages = require('../_data/languages')\n//some colon symbols are valid links, like `America: That place`\n//so we have to whitelist allowable interwiki links\nconst interwikis = [\n  'wiktionary',\n  'wikinews',\n  'wikibooks',\n  'wikiquote',\n  'wikisource',\n  'wikispecies',\n  'wikiversity',\n  'wikivoyage',\n  'wikipedia',\n  'wikimedia',\n  'foundation',\n  'meta',\n  'metawikipedia',\n  'w',\n  'wikt',\n  'n',\n  'b',\n  'q',\n  's',\n  'v',\n  'voy',\n  'wmf',\n  'c',\n  'm',\n  'mw',\n  'phab',\n  'd'\n]\nlet allowed = interwikis.reduce((h, wik) => {\n  h[wik] = true\n  return h\n}, {})\n//add language prefixes too..\nObject.keys(languages).forEach(k => (allowed[k] = true))\n\n//this is predictably very complicated.\n// https://meta.wikimedia.org/wiki/Help:Interwiki_linking\nconst parseInterwiki = function(obj) {\n  let str = obj.page || ''\n  if (str.indexOf(':') !== -1) {\n    let m = str.match(/^(.*):(.*)/)\n    if (m === null) {\n      return obj\n    }\n    let site = m[1] || ''\n    site = site.toLowerCase()\n    //only allow interwikis to these specific places\n    if (allowed.hasOwnProperty(site) === false) {\n      return obj\n    }\n    obj.wiki = site\n    obj.page = m[2]\n  }\n  return obj\n}\nmodule.exports = parseInterwiki\n","// const helpers = require('../_lib/helpers');\nconst parse_interwiki = require('../04-sentence/interwiki')\nconst ignore_links = /^:?(category|catégorie|Kategorie|Categoría|Categoria|Categorie|Kategoria|تصنيف|image|file|image|fichier|datei|media):/i\nconst external_link = /\\[(https?|news|ftp|mailto|gopher|irc)(:\\/\\/[^\\]\\| ]{4,1500})([\\| ].*?)?\\]/g\nconst link_reg = /\\[\\[(.{0,160}?)\\]\\]([a-z']+)?(\\w{0,10})/gi //allow dangling suffixes - \"[[flanders]]'s\"\n// const i18n = require('../_data/i18n');\n// const isFile = new RegExp('(' + i18n.images.concat(i18n.files).join('|') + '):', 'i');\n\nconst external_links = function(links, str) {\n  str.replace(external_link, function(all, protocol, link, text) {\n    text = text || ''\n    links.push({\n      type: 'external',\n      site: protocol + link,\n      text: text.trim()\n    })\n    return text\n  })\n  return links\n}\n\nconst internal_links = function(links, str) {\n  //regular links\n  str.replace(link_reg, function(_, s, apostrophe) {\n    var txt = null\n    //make a copy of original\n    var link = s\n    if (s.match(/\\|/)) {\n      //replacement link [[link|text]]\n      s = s.replace(/\\[\\[(.{2,100}?)\\]\\](\\w{0,10})/g, '$1$2') //remove ['s and keep suffix\n      link = s.replace(/(.{2,100})\\|.{0,200}/, '$1') //replaced links\n      txt = s.replace(/.{2,100}?\\|/, '')\n      //handle funky case of [[toronto|]]\n      if (txt === null && link.match(/\\|$/)) {\n        link = link.replace(/\\|$/, '')\n        txt = link\n      }\n    }\n    //kill off non-wikipedia namespaces\n    if (link.match(ignore_links)) {\n      return s\n    }\n    //kill off just these just-anchor links [[#history]]\n    if (link.match(/^#/i)) {\n      return s\n    }\n    //remove anchors from end [[toronto#history]]\n    var obj = {\n      page: link\n    }\n    obj.page = obj.page.replace(/#(.*)/, (a, b) => {\n      obj.anchor = b\n      return ''\n    })\n    //grab any fr:Paris parts\n    obj = parse_interwiki(obj)\n    if (txt !== null && txt !== obj.page) {\n      obj.text = txt\n    }\n    //finally, support [[link]]'s apostrophe\n    if (apostrophe === \"'s\") {\n      obj.text = obj.text || obj.page\n      obj.text += apostrophe\n    }\n\n    //titlecase it, if necessary\n    if (obj.page && /^[A-Z]/.test(obj.page) === false) {\n      if (!obj.text) {\n        obj.text = obj.page\n      }\n      obj.page = obj.page.charAt(0).toUpperCase() + obj.page.substring(1)\n    }\n    links.push(obj)\n    return s\n  })\n  return links\n}\n\n//grab an array of internal links in the text\nconst parse_links = function(str) {\n  let links = []\n  //first, parse external links\n  links = external_links(links, str)\n  //internal links\n  links = internal_links(links, str)\n\n  if (links.length === 0) {\n    return undefined\n  }\n  return links\n}\nmodule.exports = parse_links\n","const i18n = require('../_data/i18n')\nconst parseLink = require('../link/parse')\n//pulls target link out of redirect page\nconst REDIRECT_REGEX = new RegExp(\n  '^[ \\n\\t]*?#(' + i18n.redirects.join('|') + ') *?(\\\\[\\\\[.{2,180}?\\\\]\\\\])',\n  'i'\n)\n\nconst isRedirect = function(wiki) {\n  //too long to be a redirect?\n  if (!wiki || wiki.length > 500) {\n    return false\n  }\n  return REDIRECT_REGEX.test(wiki)\n}\n\nconst parse = function(wiki) {\n  let m = wiki.match(REDIRECT_REGEX)\n  if (m && m[2]) {\n    let links = parseLink(m[2]) || []\n    return links[0]\n  }\n  return {}\n}\n\nmodule.exports = {\n  isRedirect: isRedirect,\n  parse: parse\n}\n","const i18n = require('../_data/i18n')\n\nconst getReg = function(templates) {\n  const allowedCharacters = '(\\\\|[a-z, =]*?)*?'\n  return new RegExp(\n    '\\\\{\\\\{ ?(' + templates.join('|') + ')' + allowedCharacters + ' ?\\\\}\\\\}',\n    'i'\n  )\n}\n\nconst templateReg = getReg(i18n.disambigs)\n\n//special disambig-templates en-wikipedia uses\nlet d = ' disambiguation'\nconst english = [\n  'airport',\n  'biology' + d,\n  'call sign' + d,\n  'caselaw' + d,\n  'chinese title' + d,\n  'dab',\n  'dab',\n  'disamb',\n  'disambig',\n  'disambiguation cleanup',\n  'genus' + d,\n  'geodis',\n  'hndis',\n  'hospital' + d,\n  'lake index',\n  'letter' + d,\n  'letter-number combination' + d,\n  'mathematical' + d,\n  'military unit' + d,\n  'mountainindex',\n  'number' + d,\n  'phonetics' + d,\n  'place name' + d,\n  'place name' + d,\n  'portal' + d,\n  'road' + d,\n  'school' + d,\n  'setindex',\n  'ship index',\n  'species latin name abbreviation' + d,\n  'species latin name' + d,\n  'split dab',\n  'sport index',\n  'station' + d,\n  'synagogue' + d,\n  'taxonomic authority' + d,\n  'taxonomy' + d,\n  'wp disambig'\n]\nconst enDisambigs = getReg(english)\n\nconst isDisambig = function(wiki) {\n  //test for {{disambiguation}} templates\n  if (templateReg.test(wiki) === true) {\n    return true\n  }\n  //more english-centric disambiguation templates\n\n  //{{hndis}}, etc\n  if (enDisambigs.test(wiki) === true) {\n    return true\n  }\n\n  //try 'may refer to' on first line for en-wiki?\n  // let firstLine = wiki.match(/^.+?\\n/);\n  // if (firstLine !== null && firstLine[0]) {\n  //   if (/ may refer to/i.test(firstLine) === true) {\n  //     return true;\n  //   }\n  // }\n  return false\n}\n\nmodule.exports = {\n  isDisambig: isDisambig\n}\n","//okay, i know you're not supposed to regex html, but...\n//https://en.wikipedia.org/wiki/Help:HTML_in_wikitext\n\n//these are things we throw-away\n//these will mess-up if they're nested, but they're not usually.\nconst ignore = [\n  'table',\n  'code',\n  'score',\n  'data',\n  'categorytree',\n  'charinsert',\n  'hiero',\n  'imagemap',\n  'inputbox',\n  'nowiki',\n  'poem',\n  'references',\n  'source',\n  'syntaxhighlight',\n  'timeline'\n]\nconst openTag = `< ?(${ignore.join('|')}) ?[^>]{0,200}?>`\nconst closeTag = `< ?/ ?(${ignore.join('|')}) ?>`\nconst anyChar = '\\\\s\\\\S' //including newline\nconst noThanks = new RegExp(`${openTag}[${anyChar}]+?${closeTag}`, 'ig')\n\nconst kill_xml = function(wiki) {\n  //(<ref> tags are parsed in Section class) - luckily, refs can't be recursive.\n  //types of html/xml that we want to trash completely.\n  wiki = wiki.replace(noThanks, ' ')\n  //some xml-like fragments we can also kill\n  wiki = wiki.replace(/ ?< ?(span|div|table|data) [a-zA-Z0-9=%\\.#:;'\" ]{2,100}\\/? ?> ?/g, ' ') //<ref name=\"asd\">\n  //only kill ref tags if they are selfclosing\n  wiki = wiki.replace(/ ?< ?(ref) [a-zA-Z0-9=\" ]{2,100}\\/ ?> ?/g, ' ') //<ref name=\"asd\"/>\n  //some formatting xml, we'll keep their insides though\n  wiki = wiki.replace(\n    / ?<[ \\/]?(p|sub|sup|span|nowiki|div|table|br|tr|td|th|pre|pre2|hr)[ \\/]?> ?/g,\n    ' '\n  ) //<sub>, </sub>\n  wiki = wiki.replace(\n    / ?<[ \\/]?(abbr|bdi|bdo|blockquote|cite|del|dfn|em|i|ins|kbd|mark|q|s)[ \\/]?> ?/g,\n    ' '\n  ) //<abbr>, </abbr>\n  wiki = wiki.replace(/ ?<[ \\/]?h[0-9][ \\/]?> ?/g, ' ') //<h2>, </h2>\n  wiki = wiki.replace(/ ?< ?br ?\\/> ?/g, '\\n') //<br />\n  return wiki.trim()\n}\nmodule.exports = kill_xml\n","const kill_xml = require('./kill_xml')\n\n//this mostly-formatting stuff can be cleaned-up first, to make life easier\nfunction preProcess(r, wiki, options) {\n  //remove comments\n  wiki = wiki.replace(/<!--[\\s\\S]{0,2000}?-->/g, '')\n  wiki = wiki.replace(/__(NOTOC|NOEDITSECTION|FORCETOC|TOC)__/gi, '')\n  //signitures\n  wiki = wiki.replace(/~~{1,3}/g, '')\n  //windows newlines\n  wiki = wiki.replace(/\\r/g, '')\n  //japanese periods - '。'\n  wiki = wiki.replace(/\\u3002/g, '. ')\n  //horizontal rule\n  wiki = wiki.replace(/----/g, '')\n  //formatting for templates-in-templates...\n  wiki = wiki.replace(/\\{\\{\\}\\}/g, ' – ')\n  wiki = wiki.replace(/\\{\\{\\\\\\}\\}/g, ' / ')\n  //space\n  wiki = wiki.replace(/&nbsp;/g, ' ')\n  //give it the inglorious send-off it deserves..\n  wiki = kill_xml(wiki, r, options)\n  //({{template}},{{template}}) leaves empty parentheses\n  wiki = wiki.replace(/\\([,;: ]+?\\)/g, '')\n  //these templates just screw things up, too\n  wiki = wiki.replace(/{{(baseball|basketball) (primary|secondary) (style|color).*?\\}\\}/i, '')\n  return wiki\n}\nmodule.exports = preProcess\n","// dumpster-dive throws everything into mongodb  - github.com/spencermountain/dumpster-dive\n// mongo has some opinions about what characters are allowed as keys and ids.\n//https://stackoverflow.com/questions/12397118/mongodb-dot-in-key-name/30254815#30254815\nconst specialChar = /[\\\\\\.$]/\n\nconst encodeStr = function(str) {\n  if (typeof str !== 'string') {\n    str = ''\n  }\n  str = str.replace(/\\\\/g, '\\\\\\\\')\n  str = str.replace(/^\\$/, '\\\\u0024')\n  str = str.replace(/\\./g, '\\\\u002e')\n  return str\n}\n\nconst encodeObj = function(obj = {}) {\n  let keys = Object.keys(obj)\n  for (let i = 0; i < keys.length; i += 1) {\n    if (specialChar.test(keys[i]) === true) {\n      let str = encodeStr(keys[i])\n      if (str !== keys[i]) {\n        obj[str] = obj[keys[i]]\n        delete obj[keys[i]]\n      }\n    }\n  }\n  return obj\n}\n\nmodule.exports = {\n  encodeObj: encodeObj\n}\n","const setDefaults = require('../_lib/setDefaults')\nconst encode = require('../_lib/encode')\n\nconst defaults = {\n  headers: true,\n  depth: true,\n  paragraphs: true,\n  images: true,\n  tables: true,\n  templates: true,\n  infoboxes: true,\n  lists: true,\n  references: true\n}\n//\nconst toJSON = function(section, options) {\n  options = setDefaults(options, defaults)\n  let data = {}\n  if (options.headers === true) {\n    data.title = section.title()\n  }\n  if (options.depth === true) {\n    data.depth = section.depth\n  }\n  //these return objects\n  if (options.paragraphs === true) {\n    let paragraphs = section.paragraphs().map(p => p.json(options))\n    if (paragraphs.length > 0) {\n      data.paragraphs = paragraphs\n    }\n  }\n  //image json data\n  if (options.images === true) {\n    let images = section.images().map(img => img.json(options))\n    if (images.length > 0) {\n      data.images = images\n    }\n  }\n  //table json data\n  if (options.tables === true) {\n    let tables = section.tables().map(t => t.json(options))\n    if (tables.length > 0) {\n      data.tables = tables\n    }\n  }\n  //template json data\n  if (options.templates === true) {\n    let templates = section.templates()\n    if (templates.length > 0) {\n      data.templates = templates\n      //encode them, for mongodb\n      if (options.encode === true) {\n        data.templates.forEach(t => encode.encodeObj(t))\n      }\n    }\n  }\n  //infobox json data\n  if (options.infoboxes === true) {\n    let infoboxes = section.infoboxes().map(i => i.json(options))\n    if (infoboxes.length > 0) {\n      data.infoboxes = infoboxes\n    }\n  }\n  //list json data\n  if (options.lists === true) {\n    let lists = section.lists().map(list => list.json(options))\n    if (lists.length > 0) {\n      data.lists = lists\n    }\n  }\n  //list references - default true\n  if (options.references === true || options.citations === true) {\n    let references = section.references().map(ref => ref.json(options))\n    if (references.length > 0) {\n      data.references = references\n    }\n  }\n  //default off\n  if (options.sentences === true) {\n    data.sentences = section.sentences().map(s => s.json(options))\n  }\n  return data\n}\nmodule.exports = toJSON\n","const toJSON = require('./toJson')\nconst setDefaults = require('../_lib/setDefaults')\nconst aliasList = require('../_lib/aliases')\n\nconst defaults = {\n  tables: true,\n  references: true,\n  paragraphs: true,\n  templates: true,\n  infoboxes: true\n}\n\n//the stuff between headings - 'History' section for example\nconst Section = function(data) {\n  this.depth = data.depth\n  this.doc = null\n  this._title = data.title || ''\n  Object.defineProperty(this, 'doc', {\n    enumerable: false,\n    value: null\n  })\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  title: function() {\n    return this._title || ''\n  },\n  index: function() {\n    if (!this.doc) {\n      return null\n    }\n    let index = this.doc.sections().indexOf(this)\n    if (index === -1) {\n      return null\n    }\n    return index\n  },\n  indentation: function() {\n    return this.depth\n  },\n  sentences: function(n) {\n    let arr = this.paragraphs().reduce((list, p) => {\n      return list.concat(p.sentences())\n    }, [])\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr || []\n  },\n  paragraphs: function(n) {\n    let arr = this.data.paragraphs || []\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr || []\n  },\n  paragraph: function(n) {\n    let arr = this.data.paragraphs || []\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr[0]\n  },\n  links: function(n) {\n    let arr = []\n    this.infoboxes().forEach(templ => {\n      templ.links(n).forEach(link => arr.push(link))\n    })\n    this.sentences().forEach(s => {\n      s.links(n).forEach(link => arr.push(link))\n    })\n    this.tables().forEach(t => {\n      t.links(n).forEach(link => arr.push(link))\n    })\n    this.lists().forEach(list => {\n      list.links(n).forEach(link => arr.push(link))\n    })\n    if (typeof n === 'number') {\n      return arr[n]\n    } else if (typeof n === 'string') {\n      //grab a link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1) //titlecase it\n      let link = arr.find(o => o.page() === n)\n      return link === undefined ? [] : [link]\n    }\n    return arr\n  },\n  tables: function(clue) {\n    let arr = this.data.tables || []\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr\n  },\n  templates: function(clue) {\n    let arr = this.data.templates || []\n    arr = arr.map(t => t.json())\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    if (typeof clue === 'string') {\n      clue = clue.toLowerCase()\n      return arr.filter(o => o.template === clue || o.name === clue)\n    }\n    return arr\n  },\n  infoboxes: function(clue) {\n    let arr = this.data.infoboxes || []\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr\n  },\n  coordinates: function(clue) {\n    let arr = [].concat(this.templates('coord'), this.templates('coor'))\n    if (typeof clue === 'number') {\n      if (!arr[clue]) {\n        return []\n      }\n      return arr[clue]\n    }\n    return arr\n  },\n  lists: function(clue) {\n    let arr = []\n    this.paragraphs().forEach(p => {\n      arr = arr.concat(p.lists())\n    })\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr\n  },\n  interwiki(num) {\n    let arr = []\n    this.paragraphs().forEach(p => {\n      arr = arr.concat(p.interwiki())\n    })\n    if (typeof num === 'number') {\n      return arr[num]\n    }\n    return arr || []\n  },\n  images: function(clue) {\n    let arr = []\n    this.paragraphs().forEach(p => {\n      arr = arr.concat(p.images())\n    })\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr || []\n  },\n  references: function(clue) {\n    let arr = this.data.references || []\n    if (typeof clue === 'number') {\n      return arr[clue]\n    }\n    return arr\n  },\n\n  //transformations\n  remove: function() {\n    if (!this.doc) {\n      return null\n    }\n    let bads = {}\n    bads[this.title()] = true\n    //remove children too\n    this.children().forEach(sec => (bads[sec.title()] = true))\n    let arr = this.doc.data.sections\n    arr = arr.filter(sec => bads.hasOwnProperty(sec.title()) !== true)\n    this.doc.data.sections = arr\n    return this.doc\n  },\n\n  //move-around sections like in jquery\n  nextSibling: function() {\n    if (!this.doc) {\n      return null\n    }\n    let sections = this.doc.sections()\n    let index = this.index()\n    for (let i = index + 1; i < sections.length; i += 1) {\n      if (sections[i].depth < this.depth) {\n        return null\n      }\n      if (sections[i].depth === this.depth) {\n        return sections[i]\n      }\n    }\n    return null\n  },\n  lastSibling: function() {\n    if (!this.doc) {\n      return null\n    }\n    let sections = this.doc.sections()\n    let index = this.index()\n    return sections[index - 1] || null\n  },\n  children: function(n) {\n    if (!this.doc) {\n      return null\n    }\n\n    let sections = this.doc.sections()\n    let index = this.index()\n    let children = []\n    //(immediately preceding sections with higher depth)\n    if (sections[index + 1] && sections[index + 1].depth > this.depth) {\n      for (let i = index + 1; i < sections.length; i += 1) {\n        if (sections[i].depth > this.depth) {\n          children.push(sections[i])\n        } else {\n          break\n        }\n      }\n    }\n    if (typeof n === 'string') {\n      n = n.toLowerCase()\n      // children.forEach((c) => console.log(c));\n      return children.find(s => s.title().toLowerCase() === n)\n    }\n    if (typeof n === 'number') {\n      return children[n]\n    }\n    return children\n  },\n  parent: function() {\n    if (!this.doc) {\n      return null\n    }\n    let sections = this.doc.sections()\n    let index = this.index()\n    for (let i = index; i >= 0; i -= 1) {\n      if (sections[i] && sections[i].depth < this.depth) {\n        return sections[i]\n      }\n    }\n    return null\n  },\n  text: function(options) {\n    options = setDefaults(options, defaults)\n    let pList = this.paragraphs()\n    pList = pList.map(p => p.text(options))\n    return pList.join('\\n\\n')\n  },\n  json: function(options) {\n    options = setDefaults(options, defaults)\n    return toJSON(this, options)\n  }\n}\n//aliases\nmethods.next = methods.nextSibling\nmethods.last = methods.lastSibling\nmethods.previousSibling = methods.lastSibling\nmethods.previous = methods.lastSibling\nmethods.citations = methods.references\nmethods.sections = methods.children\nObject.keys(methods).forEach(k => {\n  Section.prototype[k] = methods[k]\n})\n//add alises, too\nObject.keys(aliasList).forEach(k => {\n  Section.prototype[k] = methods[aliasList[k]]\n})\nmodule.exports = Section\n","var helpers = {\n  capitalise: function(str) {\n    if (str && typeof str === 'string') {\n      return str.charAt(0).toUpperCase() + str.slice(1)\n    }\n    return ''\n  },\n  onlyUnique: function(value, index, self) {\n    return self.indexOf(value) === index\n  },\n  trim_whitespace: function(str) {\n    if (str && typeof str === 'string') {\n      str = str.replace(/^\\s\\s*/, '')\n      str = str.replace(/\\s\\s*$/, '')\n      str = str.replace(/ {2}/, ' ')\n      str = str.replace(/\\s, /, ', ')\n      return str\n    }\n    return ''\n  }\n}\nmodule.exports = helpers\n","const Link = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\nconst methods = {\n  text: function() {\n    return this.data.text\n  },\n  json: function() {\n    return this.data\n  },\n  page: function() {\n    return this.data.page\n  },\n  anchor: function() {\n    return this.data.anchor\n  },\n  wiki: function() {\n    return this.data.wiki\n  },\n  site: function() {\n    return this.data.site\n  },\n  type: function() {\n    return this.data.type\n  }\n}\nObject.keys(methods).forEach(k => {\n  Link.prototype[k] = methods[k]\n})\nmodule.exports = Link\n","const Link = require('./Link')\nconst parseLinks = require('./parse')\nconst i18n = require('../_data/i18n')\nconst cat_reg = new RegExp(\n  '\\\\[\\\\[:?(' + i18n.categories.join('|') + '):[^\\\\]\\\\]]{2,80}\\\\]\\\\]',\n  'gi'\n)\n\n//return only rendered text of wiki links\nconst removeLinks = function(line) {\n  // categories, images, files\n  line = line.replace(cat_reg, '')\n  // [[Common links]]\n  line = line.replace(/\\[\\[:?([^|]{1,80}?)\\]\\](\\w{0,5})/g, '$1$2')\n  // [[File:with|Size]]\n  line = line.replace(/\\[\\[File:(.{2,80}?)\\|([^\\]]+?)\\]\\](\\w{0,5})/g, '$1')\n  // [[Replaced|Links]]\n  line = line.replace(/\\[\\[:?(.{2,80}?)\\|([^\\]]+?)\\]\\](\\w{0,5})/g, '$2$3')\n  // External links\n  line = line.replace(\n    /\\[(https?|news|ftp|mailto|gopher|irc):\\/\\/[^\\]\\| ]{4,1500}([\\| ].*?)?\\]/g,\n    '$2'\n  )\n  return line\n}\n// console.log(resolve_links(\"[http://www.whistler.ca www.whistler.ca]\"))\n\nconst getLinks = function(wiki, data) {\n  let links = parseLinks(wiki) || []\n  data.links = links.map(link => new Link(link))\n  wiki = removeLinks(wiki)\n  return wiki\n}\nmodule.exports = getLinks\n","//handle the bold/italics\nconst formatting = function(obj) {\n  let bolds = []\n  let italics = []\n  let wiki = obj.text || ''\n  //bold and italics combined 5 's\n  wiki = wiki.replace(/'''''(.{0,200}?)'''''/g, (a, b) => {\n    bolds.push(b)\n    italics.push(b)\n    return b\n  })\n  //''''four'''' → bold with quotes\n  wiki = wiki.replace(/''''(.{0,200}?)''''/g, (a, b) => {\n    bolds.push(`'${b}'`)\n    return `'${b}'`\n  })\n  //'''bold'''\n  wiki = wiki.replace(/'''(.{0,200}?)'''/g, (a, b) => {\n    bolds.push(b)\n    return b\n  })\n  //''italic''\n  wiki = wiki.replace(/''(.{0,200}?)''/g, (a, b) => {\n    italics.push(b)\n    return b\n  })\n\n  //pack it all up..\n  obj.text = wiki\n  if (bolds.length > 0) {\n    obj.fmt = obj.fmt || {}\n    obj.fmt.bold = bolds\n  }\n  if (italics.length > 0) {\n    obj.fmt = obj.fmt || {}\n    obj.fmt.italic = italics\n  }\n  return obj\n}\nmodule.exports = formatting\n","const setDefaults = require('../_lib/setDefaults')\nconst isNumber = /^[0-9,.]+$/\n\nconst defaults = {\n  text: true,\n  links: true,\n  formatting: true,\n  dates: true,\n  numbers: true\n}\n\nconst toJSON = function(s, options) {\n  options = setDefaults(options, defaults)\n  let data = {}\n  let text = s.plaintext()\n  if (options.text === true) {\n    data.text = text\n  }\n  //add number field\n  if (options.numbers === true && isNumber.test(text)) {\n    let num = Number(text.replace(/,/g, ''))\n    if (isNaN(num) === false) {\n      data.number = num\n    }\n  }\n  if (options.links && s.links().length > 0) {\n    data.links = s.links()\n  }\n  if (options.formatting && s.data.fmt) {\n    data.formatting = s.data.fmt\n  }\n  if (options.dates && s.data.dates !== undefined) {\n    data.dates = s.data.dates\n  }\n  return data\n}\nmodule.exports = toJSON\n","const toJSON = require('./toJson')\nconst aliasList = require('../_lib/aliases')\n\n//where we store the formatting, link, date information\nconst Sentence = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  links: function(n) {\n    let arr = this.data.links || []\n    if (typeof n === 'number') {\n      return arr[n]\n    } else if (typeof n === 'string') {\n      //grab a link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1) //titlecase it\n      let link = arr.find(o => o.page === n)\n      return link === undefined ? [] : [link]\n    }\n    return arr\n  },\n  interwiki: function(n) {\n    let arr = this.links().filter(l => l.wiki !== undefined)\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr\n  },\n  bolds: function(n) {\n    let arr = []\n    if (this.data && this.data.fmt && this.data.fmt.bold) {\n      arr = this.data.fmt.bold || []\n    }\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr\n  },\n  italics: function(n) {\n    let arr = []\n    if (this.data && this.data.fmt && this.data.fmt.italic) {\n      arr = this.data.fmt.italic || []\n    }\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr\n  },\n  dates: function(n) {\n    let arr = []\n    if (this.data && this.data.dates) {\n      arr = this.data.dates || []\n    }\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    return arr\n  },\n  text: function(str) {\n    if (str !== undefined && typeof str === 'string') {\n      //set the text?\n      this.data.text = str\n    }\n    return this.data.text || ''\n  },\n  json: function(options) {\n    return toJSON(this, options)\n  }\n}\n\nObject.keys(methods).forEach(k => {\n  Sentence.prototype[k] = methods[k]\n})\n//add alises, too\nObject.keys(aliasList).forEach(k => {\n  Sentence.prototype[k] = methods[aliasList[k]]\n})\nSentence.prototype.italic = Sentence.prototype.italics\nSentence.prototype.bold = Sentence.prototype.bolds\nSentence.prototype.plaintext = Sentence.prototype.text\n\nmodule.exports = Sentence\n","//these are used for the sentence-splitter\nmodule.exports = [\n  'jr',\n  'mr',\n  'mrs',\n  'ms',\n  'dr',\n  'prof',\n  'sr',\n  'sen',\n  'corp',\n  'calif',\n  'rep',\n  'gov',\n  'atty',\n  'supt',\n  'det',\n  'rev',\n  'col',\n  'gen',\n  'lt',\n  'cmdr',\n  'adm',\n  'capt',\n  'sgt',\n  'cpl',\n  'maj',\n  'dept',\n  'univ',\n  'assn',\n  'bros',\n  'inc',\n  'ltd',\n  'co',\n  'corp',\n  'arc',\n  'al',\n  'ave',\n  'blvd',\n  'cl',\n  'ct',\n  'cres',\n  'exp',\n  'rd',\n  'st',\n  'dist',\n  'mt',\n  'ft',\n  'fy',\n  'hwy',\n  'la',\n  'pd',\n  'pl',\n  'plz',\n  'tce',\n  'Ala',\n  'Ariz',\n  'Ark',\n  'Cal',\n  'Calif',\n  'Col',\n  'Colo',\n  'Conn',\n  'Del',\n  'Fed',\n  'Fla',\n  'Ga',\n  'Ida',\n  'Id',\n  'Ill',\n  'Ind',\n  'Ia',\n  'Kan',\n  'Kans',\n  'Ken',\n  'Ky',\n  'La',\n  'Me',\n  'Md',\n  'Mass',\n  'Mich',\n  'Minn',\n  'Miss',\n  'Mo',\n  'Mont',\n  'Neb',\n  'Nebr',\n  'Nev',\n  'Mex',\n  'Okla',\n  'Ok',\n  'Ore',\n  'Penna',\n  'Penn',\n  'Pa',\n  'Dak',\n  'Tenn',\n  'Tex',\n  'Ut',\n  'Vt',\n  'Va',\n  'Wash',\n  'Wis',\n  'Wisc',\n  'Wy',\n  'Wyo',\n  'USAFA',\n  'Alta',\n  'Ont',\n  'QuÔøΩ',\n  'Sask',\n  'Yuk',\n  'jan',\n  'feb',\n  'mar',\n  'apr',\n  'jun',\n  'jul',\n  'aug',\n  'sep',\n  'oct',\n  'nov',\n  'dec',\n  'sept',\n  'vs',\n  'etc',\n  'esp',\n  'llb',\n  'md',\n  'bl',\n  'phd',\n  'ma',\n  'ba',\n  'miss',\n  'misses',\n  'mister',\n  'sir',\n  'esq',\n  'mstr',\n  'lit',\n  'fl',\n  'ex',\n  'eg',\n  'sep',\n  'sept'\n]\n","//split text into sentences, using regex\n//@spencermountain MIT\n\n//(Rule-based sentence boundary segmentation) - chop given text into its proper sentences.\n// Ignore periods/questions/exclamations used in acronyms/abbreviations/numbers, etc.\n// @spencermountain 2015 MIT\nconst literalAbbreviations = require('../_data/abbreviations')\nconst abbreviations = literalAbbreviations.concat('[^]][^]]')\nconst abbrev_reg = new RegExp(\"(^| |')(\" + abbreviations.join('|') + `)[.!?] ?$`, 'i')\nconst acronym_reg = new RegExp(\"[ |.|'|[][A-Z].? *?$\", 'i')\nconst elipses_reg = new RegExp('\\\\.\\\\.\\\\.* +?$')\nconst hasWord = new RegExp('[a-zа-яぁ-ゟ][a-zа-яぁ-ゟ゠-ヿ]', 'iu')\n// 3040-309F : hiragana\n// 30A0-30FF : katakana\n\n//turn a nested array into one array\nconst flatten = function(arr) {\n  let all = []\n  arr.forEach(function(a) {\n    all = all.concat(a)\n  })\n  return all\n}\n\nconst naiive_split = function(text) {\n  //first, split by newline\n  let splits = text.split(/(\\n+)/)\n  splits = splits.filter(s => s.match(/\\S/))\n  //split by period, question-mark, and exclamation-mark\n  splits = splits.map(function(str) {\n    return str.split(/(\\S.+?[.!?]\"?)(?=\\s+|$)/g) //\\u3002\n  })\n  return flatten(splits)\n}\n\n// if this looks like a period within a wikipedia link, return false\nconst isBalanced = function(str) {\n  str = str || ''\n  const open = str.split(/\\[\\[/) || []\n  const closed = str.split(/\\]\\]/) || []\n  if (open.length > closed.length) {\n    return false\n  }\n  //make sure quotes are closed too\n  const quotes = str.match(/\"/g)\n  if (quotes && quotes.length % 2 !== 0 && str.length < 900) {\n    return false\n  }\n  return true\n}\n\nconst sentence_parser = function(text) {\n  let sentences = []\n  //first do a greedy-split..\n  let chunks = []\n  //ensure it 'smells like' a sentence\n  if (!text || typeof text !== 'string' || text.trim().length === 0) {\n    return sentences\n  }\n  // This was the splitter regex updated to fix quoted punctuation marks.\n  // let splits = text.split(/(\\S.+?[.\\?!])(?=\\s+|$|\")/g);\n  // todo: look for side effects in this regex replacement:\n  let splits = naiive_split(text)\n  //filter-out the grap ones\n  for (let i = 0; i < splits.length; i++) {\n    let s = splits[i]\n    if (!s || s === '') {\n      continue\n    }\n    //this is meaningful whitespace\n    if (!s.match(/\\S/)) {\n      //add it to the last one\n      if (chunks[chunks.length - 1]) {\n        chunks[chunks.length - 1] += s\n        continue\n      } else if (splits[i + 1]) {\n        //add it to the next one\n        splits[i + 1] = s + splits[i + 1]\n        continue\n      }\n    }\n    chunks.push(s)\n  }\n\n  //detection of non-sentence chunks\n  const isSentence = function(hmm) {\n    if (hmm.match(abbrev_reg) || hmm.match(acronym_reg) || hmm.match(elipses_reg)) {\n      return false\n    }\n    //too short? - no consecutive letters\n    if (hasWord.test(hmm) === false) {\n      return false\n    }\n    if (!isBalanced(hmm)) {\n      return false\n    }\n    return true\n  }\n  //loop through these chunks, and join the non-sentence chunks back together..\n  for (let i = 0; i < chunks.length; i++) {\n    //should this chunk be combined with the next one?\n    if (chunks[i + 1] && !isSentence(chunks[i])) {\n      chunks[i + 1] = chunks[i] + (chunks[i + 1] || '') //.replace(/ +/g, ' ');\n    } else if (chunks[i] && chunks[i].length > 0) {\n      //this chunk is a proper sentence..\n      sentences.push(chunks[i])\n      chunks[i] = ''\n    }\n  }\n  //if we never got a sentence, return the given text\n  if (sentences.length === 0) {\n    return [text]\n  }\n  return sentences\n}\n\nmodule.exports = sentence_parser\n// console.log(sentence_parser('Tony is nice. He lives in Japan.').length === 2);\n","const helpers = require('../_lib/helpers')\nconst parseLinks = require('../link')\nconst parseFmt = require('./formatting')\nconst Sentence = require('./Sentence')\n// const templates = require('./templates');\nconst sentenceParser = require('./parse')\n\nfunction postprocess(line) {\n  //remove empty parentheses (sometimes caused by removing templates)\n  line = line.replace(/\\([,;: ]*\\)/g, '')\n  //these semi-colons in parentheses are particularly troublesome\n  line = line.replace(/\\( *(; ?)+/g, '(')\n  //dangling punctuation\n  line = helpers.trim_whitespace(line)\n  line = line.replace(/ +\\.$/, '.')\n  return line\n}\n\nfunction oneSentence(str) {\n  let obj = {}\n  //pull-out the [[links]]\n  str = parseLinks(str, obj)\n  obj.text = postprocess(str)\n\n  // let links = parseLinks(str)\n  // if (links) {\n  // obj.links = links\n  // }\n  //pull-out the bolds and ''italics''\n  obj = parseFmt(obj)\n  //pull-out things like {{start date|...}}\n  // obj = templates(obj);\n  return new Sentence(obj)\n}\n\n//turn a text into an array of sentence objects\nconst parseSentences = function(wiki) {\n  let sentences = sentenceParser(wiki)\n  sentences = sentences.map(oneSentence)\n\n  //remove :indented first line, as it is often a disambiguation\n  if (sentences[0] && sentences[0].text() && sentences[0].text()[0] === ':') {\n    sentences = sentences.slice(1)\n  }\n  return sentences\n}\n\n//used for consistency with other class-definitions\nconst addSentences = function(wiki, data) {\n  data.sentences = parseSentences(wiki)\n  return wiki\n}\n\nmodule.exports = {\n  parseSentences: parseSentences,\n  oneSentence: oneSentence,\n  addSentences: addSentences\n}\n","//remove the top/bottom off the template\nconst strip = function(tmpl) {\n  tmpl = tmpl.replace(/^\\{\\{/, '')\n  tmpl = tmpl.replace(/\\}\\}$/, '')\n  return tmpl\n}\nmodule.exports = strip\n","//normalize template names\nconst fmtName = function(name) {\n  name = (name || '').trim()\n  name = name.toLowerCase()\n  name = name.replace(/_/g, ' ')\n  return name\n}\nmodule.exports = fmtName\n","//turn {{name|one|two|three}} into [name, one, two, three]\nconst pipeSplitter = function(tmpl) {\n  //start with a naiive '|' split\n  let arr = tmpl.split(/\\n?\\|/)\n  //we've split by '|', which is pretty lame\n  //look for broken-up links and fix them :/\n  arr.forEach((a, i) => {\n    if (a === null) {\n      return\n    }\n    //has '[[' but no ']]'\n    //has equal number of openning and closing tags. handle nested case '[[[[' ']]'\n    if (/\\[\\[[^\\]]+$/.test(a) || /\\{\\{[^\\}]+$/.test(a)\n    || \n      (a.split('{{').length !== a.split('}}').length)\n      || (a.split('[[').length !== a.split(']]').length)\n    ) {\n      arr[i + 1] = arr[i] + '|' + arr[i + 1]\n      arr[i] = null\n    }\n  })\n  //cleanup any mistakes we've made\n  arr = arr.filter(a => a !== null)\n  arr = arr.map(a => (a || '').trim())\n  //remove empty fields, only at the end:\n  for (let i = arr.length - 1; i >= 0; i -= 1) {\n    if (arr[i] === '') {\n      arr.pop()\n    }\n    break\n  }\n  return arr\n}\nmodule.exports = pipeSplitter\n","// every value in {{tmpl|a|b|c}} needs a name\n// here we come up with names for them\nconst hasKey = /^[a-z0-9\\u00C0-\\u00FF\\._\\- '()œ]+=/iu\n\n//templates with these properties are asking for trouble\nconst reserved = {\n  template: true,\n  list: true,\n  prototype: true\n}\n\n//turn 'key=val' into {key:key, val:val}\nconst parseKey = function(str) {\n  let parts = str.split('=')\n  let key = parts[0] || ''\n  key = key.toLowerCase().trim()\n  let val = parts.slice(1).join('=')\n  //don't let it be called 'template'..\n  if (reserved.hasOwnProperty(key)) {\n    key = '_' + key\n  }\n  return {\n    key: key,\n    val: val.trim()\n  }\n}\n\n//turn [a, b=v, c] into {'1':a, b:v, '2':c}\nconst keyMaker = function(arr, order) {\n  let o = 0\n  return arr.reduce((h, str) => {\n    str = (str || '').trim()\n    //support named keys - 'foo=bar'\n    if (hasKey.test(str) === true) {\n      let res = parseKey(str)\n      if (res.key) {\n        h[res.key] = res.val\n        return h\n      }\n    }\n    //try a key from given 'order' names\n    if (order && order[o]) {\n      let key = order[o] //here goes!\n      h[key] = str\n    } else {\n      h.list = h.list || []\n      h.list.push(str)\n    }\n    o += 1\n    return h\n  }, {})\n}\n\nmodule.exports = keyMaker\n","const whoCares = {\n  classname: true,\n  style: true,\n  align: true,\n  margin: true,\n  left: true,\n  break: true,\n  boxsize: true,\n  framestyle: true,\n  item_style: true,\n  collapsible: true,\n  list_style_type: true,\n  'list-style-type': true,\n  colwidth: true\n}\n\n//remove wiki-cruft & some styling info from templates\nconst cleanup = function(obj) {\n  Object.keys(obj).forEach(k => {\n    if (whoCares[k.toLowerCase()] === true) {\n      delete obj[k]\n    }\n    //remove empty values, too\n    if (obj[k] === null || obj[k] === '') {\n      delete obj[k]\n    }\n  })\n  return obj\n}\nmodule.exports = cleanup\n","//remove the top/bottom off the template\nconst strip = require('./_strip')\nconst fmtName = require('./_fmtName')\nconst parseSentence = require('../../04-sentence').oneSentence\nconst pipeSplitter = require('./01-pipe-splitter')\nconst keyMaker = require('./02-keyMaker')\nconst cleanup = require('./03-cleanup')\n\n// most templates just want plaintext...\nconst makeFormat = function(str, fmt) {\n  let s = parseSentence(str)\n  //support various output formats\n  if (fmt === 'json') {\n    return s.json()\n  } else if (fmt === 'raw') {\n    return s\n  }\n  //default to flat text\n  return s.text()\n}\n\n//\nconst parser = function(tmpl, order, fmt) {\n  order = order || []\n  //renomove {{}}'s\n  tmpl = strip(tmpl || '')\n  let arr = pipeSplitter(tmpl)\n  //get template name\n  let name = arr.shift()\n  //name each value\n  let obj = keyMaker(arr, order)\n  //remove wiki-junk\n  obj = cleanup(obj)\n  //is this a infobox/reference?\n  // let known = isKnown(obj);\n\n  //using '|1=content' is an escaping-thing..\n  if (obj['1'] && order[0] && obj.hasOwnProperty(order[0]) === false) {\n    //move it over..\n    obj[order[0]] = obj['1']\n    delete obj['1']\n  }\n\n  Object.keys(obj).forEach(k => {\n    if (k === 'list') {\n      obj[k] = obj[k].map(v => makeFormat(v, fmt))\n      return\n    }\n    obj[k] = makeFormat(obj[k], fmt)\n  })\n  //add the template name\n  if (name) {\n    obj.template = fmtName(name)\n  }\n  return obj\n}\nmodule.exports = parser\n","//also called 'citations'\nconst Reference = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  title: function() {\n    let data = this.data\n    return data.title || data.encyclopedia || data.author || ''\n  },\n  links: function(n) {\n    let arr = []\n    if (typeof n === 'number') {\n      return arr[n]\n    }\n    //grab a specific link..\n    if (typeof n === 'number') {\n      return arr[n]\n    } else if (typeof n === 'string') {\n      //grab a link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1) //titlecase it\n      let link = arr.find(o => o.page() === n)\n      return link === undefined ? [] : [link]\n    }\n    return arr || []\n  },\n  text: function() {\n    return '' //nah, skip these.\n  },\n\n  json: function() {\n    return this.data\n  }\n}\nObject.keys(methods).forEach(k => {\n  Reference.prototype[k] = methods[k]\n})\nmodule.exports = Reference\n","const parse = require('../template/_parsers/parse')\n// const parse = require('../../templates/wikipedia/page').citation;\nconst parseSentence = require('../04-sentence').oneSentence\nconst Reference = require('./Reference')\n\n//structured Cite templates - <ref>{{Cite..</ref>\nconst hasCitation = function(str) {\n  return (\n    /^ *?\\{\\{ *?(cite|citation)/i.test(str) &&\n    /\\}\\} *?$/.test(str) &&\n    /citation needed/i.test(str) === false\n  )\n}\n\nconst parseCitation = function(tmpl) {\n  let obj = parse(tmpl)\n  obj.type = obj.template.replace(/cite /, '')\n  obj.template = 'citation'\n  return obj\n}\n\n//handle unstructured ones - <ref>some text</ref>\nconst parseInline = function(str) {\n  let obj = parseSentence(str) || {}\n  return {\n    template: 'citation',\n    type: 'inline',\n    data: {},\n    inline: obj\n  }\n}\n\n// parse <ref></ref> xml tags\nconst parseRefs = function(wiki, data) {\n  let references = []\n  wiki = wiki.replace(/ ?<ref>([\\s\\S]{0,1800}?)<\\/ref> ?/gi, function(a, tmpl) {\n    if (hasCitation(tmpl)) {\n      let obj = parseCitation(tmpl)\n      if (obj) {\n        references.push(obj)\n      }\n      wiki = wiki.replace(tmpl, '')\n    } else {\n      references.push(parseInline(tmpl))\n    }\n    return ' '\n  })\n  // <ref name=\"\"/>\n  wiki = wiki.replace(/ ?<ref [^>]{0,200}?\\/> ?/gi, ' ')\n  // <ref name=\"\"></ref>\n  wiki = wiki.replace(/ ?<ref [^>]{0,200}?>([\\s\\S]{0,1800}?)<\\/ref> ?/gi, function(a, tmpl) {\n    if (hasCitation(tmpl)) {\n      let obj = parseCitation(tmpl)\n      if (obj) {\n        references.push(obj)\n      }\n      wiki = wiki.replace(tmpl, '')\n    } else {\n      references.push(parseInline(tmpl))\n    }\n    return ' '\n  })\n  //now that we're done with xml, do a generic + dangerous xml-tag removal\n  wiki = wiki.replace(/ ?<[ \\/]?[a-z0-9]{1,8}[a-z0-9=\" ]{2,20}[ \\/]?> ?/g, ' ') //<samp name=\"asd\">\n  data.references = references.map(r => new Reference(r))\n  return wiki\n}\nmodule.exports = parseRefs\n","const fns = require('../_lib/helpers')\nconst parseSentence = require('../04-sentence/').oneSentence\nconst parseReferences = require('../reference/')\nconst heading_reg = /^(={1,5})(.{1,200}?)={1,5}$/\n\n//interpret depth, title of headings like '==See also=='\nconst parseHeading = function(data, str) {\n  let heading = str.match(heading_reg)\n  if (!heading) {\n    data.title = ''\n    data.depth = 0\n    return data\n  }\n  let title = heading[2] || ''\n  title = parseSentence(title).text()\n  //amazingly, you can see inline {{templates}} in this text, too\n  //... let's not think about that now.\n  title = title.replace(/\\{\\{.+?\\}\\}/, '')\n  //same for references (i know..)\n  title = parseReferences(title, {})\n  //trim leading/trailing whitespace\n  title = fns.trim_whitespace(title)\n  let depth = 0\n  if (heading[1]) {\n    depth = heading[1].length - 2\n  }\n  data.title = title\n  data.depth = depth\n  return data\n}\nmodule.exports = parseHeading\n","//remove top-bottoms\nconst cleanup = function(lines) {\n  lines = lines.filter(line => {\n    //a '|+' row is a 'table caption', remove it.\n    return line && /^\\|\\+/.test(line) !== true\n  })\n  if (/^{\\|/.test(lines[0]) === true) {\n    lines.shift()\n  }\n  if (/^\\|}/.test(lines[lines.length - 1]) === true) {\n    lines.pop()\n  }\n  if (/^\\|-/.test(lines[0]) === true) {\n    lines.shift()\n  }\n  return lines\n}\n\n//turn newline seperated into '|-' seperated\nconst findRows = function(lines) {\n  let rows = []\n  let row = []\n  lines = cleanup(lines)\n  for (let i = 0; i < lines.length; i += 1) {\n    let line = lines[i]\n    //'|-' is a row-seperator\n    if (/^\\|-/.test(line) === true) {\n      //okay, we're done the row\n      if (row.length > 0) {\n        rows.push(row)\n        row = []\n      }\n    } else {\n      //look for '||' inline row-splitter\n      line = line.split(/(?:\\|\\||!!)/)\n      //support newline -> '||'\n      if (!line[0] && line[1]) {\n        line.shift()\n      }\n      line.forEach(l => {\n        l = l.replace(/^\\| */, '')\n        l = l.trim()\n        row.push(l)\n      })\n    }\n  }\n  //finish the last one\n  if (row.length > 0) {\n    rows.push(row)\n  }\n  return rows\n}\nmodule.exports = findRows\n","const getRowSpan = /.*rowspan *?= *?[\"']?([0-9]+)[\"']?[ \\|]*/\nconst getColSpan = /.*colspan *?= *?[\"']?([0-9]+)[\"']?[ \\|]*/\n\n//colspans stretch ←left/right→\nconst doColSpan = function(rows) {\n  rows.forEach((row, r) => {\n    row.forEach((str, c) => {\n      let m = str.match(getColSpan)\n      if (m !== null) {\n        let num = parseInt(m[1], 10)\n\n        //...maybe if num is so big, and centered, remove it?\n        if (num > 3) {\n          rows[r] = []\n          return\n        }\n        //splice-in n empty columns right here\n        row[c] = str.replace(getColSpan, '')\n        for (let i = 1; i < num; i += 1) {\n          row.splice(c + 1, 0, '')\n        }\n      }\n    })\n  })\n  rows = rows.filter(r => r.length > 0)\n  return rows\n}\n\n//colspans stretch up/down\nconst doRowSpan = function(rows) {\n  rows.forEach((row, r) => {\n    row.forEach((str, c) => {\n      let m = str.match(getRowSpan)\n      if (m !== null) {\n        let num = parseInt(m[1], 10)\n        //copy this cell down n rows\n        str = str.replace(getRowSpan, '')\n        row[c] = str\n        for (let i = r + 1; i < r + num; i += 1) {\n          if (!rows[i]) {\n            break\n          }\n          rows[i].splice(c, 0, str)\n        }\n      }\n    })\n  })\n  return rows\n}\n\n//\nconst handleSpans = function(rows) {\n  rows = doRowSpan(rows)\n  rows = doColSpan(rows)\n  return rows\n}\nmodule.exports = handleSpans\n","const parseSentence = require('../../04-sentence/').oneSentence\nconst findRows = require('./_findRows')\nconst handleSpans = require('./_spans')\n\n//common ones\nconst headings = {\n  name: true,\n  age: true,\n  born: true,\n  date: true,\n  year: true,\n  city: true,\n  country: true,\n  population: true,\n  count: true,\n  number: true\n}\n\n//additional table-cruft to remove before parseLine method\nconst cleanText = function(str) {\n  str = parseSentence(str).text()\n  //anything before a single-pipe is styling, so remove it\n  if (str.match(/\\|/)) {\n    str = str.replace(/.+\\| ?/, '') //class=\"unsortable\"|title\n  }\n  str = str.replace(/style=['\"].*?[\"']/, '')\n  //'!' is used as a highlighed-column\n  str = str.replace(/^!/, '')\n  str = str.trim()\n  return str\n}\n\n//'!' starts a header-row\nconst findHeaders = function(rows = []) {\n  let headers = []\n  let first = rows[0]\n  if (first && first[0] && /^!/.test(first[0]) === true) {\n    headers = first.map(h => {\n      h = h.replace(/^\\! */, '')\n      h = cleanText(h)\n      return h\n    })\n    rows.shift()\n  }\n  //try the second row, too (overwrite first-row, if it exists)\n  first = rows[0]\n  if (first && first[0] && first[1] && /^!/.test(first[0]) && /^!/.test(first[1])) {\n    first.forEach((h, i) => {\n      h = h.replace(/^\\! */, '')\n      h = cleanText(h)\n      if (Boolean(h) === true) {\n        headers[i] = h\n      }\n    })\n    rows.shift()\n  }\n  return headers\n}\n\n//turn headers, array into an object\nconst parseRow = function(arr, headers) {\n  let row = {}\n  arr.forEach((str, i) => {\n    let h = headers[i] || 'col' + (i + 1)\n    let s = parseSentence(str)\n    s.text(cleanText(s.text()))\n    row[h] = s\n  })\n  return row\n}\n\n//should we use the first row as a the headers?\nconst firstRowHeader = function(rows) {\n  if (rows.length <= 3) {\n    return []\n  }\n  let headers = rows[0].slice(0)\n  headers = headers.map(h => {\n    h = h.replace(/^\\! */, '')\n    h = parseSentence(h).text()\n    h = cleanText(h)\n    h = h.toLowerCase()\n    return h\n  })\n  for (let i = 0; i < headers.length; i += 1) {\n    if (headings.hasOwnProperty(headers[i])) {\n      rows.shift()\n      return headers\n    }\n  }\n  return []\n}\n\n//turn a {|...table string into an array of arrays\nconst parseTable = function(wiki) {\n  let lines = wiki\n    .replace(/\\r/g, '')\n    .replace(/\\n(\\s*[^|!{\\s])/g, ' $1') //remove unecessary newlines\n    .split(/\\n/)\n    .map(l => l.trim())\n  let rows = findRows(lines)\n  //support colspan, rowspan...\n  rows = handleSpans(rows)\n  //grab the header rows\n  let headers = findHeaders(rows)\n  if (!headers || headers.length <= 1) {\n    headers = firstRowHeader(rows)\n    let want = rows[rows.length - 1] || []\n    //try the second row\n    if (headers.length <= 1 && want.length > 2) {\n      headers = firstRowHeader(rows.slice(1))\n      if (headers.length > 0) {\n        rows = rows.slice(2) //remove them\n      }\n    }\n  }\n  //index each column by it's header\n  let table = rows.map(arr => {\n    return parseRow(arr, headers)\n  })\n  return table\n}\n\nmodule.exports = parseTable\n","const encode = require('../_lib/encode')\n//\nconst toJson = function(tables, options) {\n  return tables.map(table => {\n    let row = {}\n    Object.keys(table).forEach(k => {\n      row[k] = table[k].json() //(they're sentence objects)\n    })\n    //encode them, for mongodb\n    if (options.encode === true) {\n      row = encode.encodeObj(row)\n    }\n    return row\n  })\n}\nmodule.exports = toJson\n","const setDefaults = require('../_lib/setDefaults')\nconst toJson = require('./toJson')\nconst aliasList = require('../_lib/aliases')\nconst defaults = {}\n\nconst Table = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  links(n) {\n    let links = []\n    this.data.forEach(r => {\n      Object.keys(r).forEach(k => {\n        links = links.concat(r[k].links())\n      })\n    })\n    //grab a specific link..\n    if (typeof n === 'number') {\n      return links[n]\n    } else if (typeof n === 'string') {\n      //grab a link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1) //titlecase it\n      let link = links.find(o => o.page() === n)\n      return link === undefined ? [] : [link]\n    }\n    return links\n  },\n  keyValue(options) {\n    let rows = this.json(options)\n    rows.forEach(row => {\n      Object.keys(row).forEach(k => {\n        row[k] = row[k].text\n      })\n    })\n    return rows\n  },\n  json(options) {\n    options = setDefaults(options, defaults)\n    return toJson(this.data, options)\n  },\n\n  text() {\n    return ''\n  }\n}\nmethods.keyvalue = methods.keyValue\nmethods.keyval = methods.keyValue\n\nObject.keys(methods).forEach(k => {\n  Table.prototype[k] = methods[k]\n})\n//add alises, too\nObject.keys(aliasList).forEach(k => {\n  Table.prototype[k] = methods[aliasList[k]]\n})\nmodule.exports = Table\n","const parseTable = require('./parse')\nconst Table = require('./Table')\n// const table_reg = /\\{\\|[\\s\\S]+?\\|\\}/g; //the largest-cities table is ~70kchars.\nconst openReg = /^\\s*{\\|/\nconst closeReg = /^\\s*\\|}/\n\n//tables can be recursive, so looky-here.\nconst findTables = function(section, wiki) {\n  let list = []\n  let lines = wiki.split('\\n')\n  let stack = []\n  for (let i = 0; i < lines.length; i += 1) {\n    //start a table\n    if (openReg.test(lines[i]) === true) {\n      stack.push(lines[i])\n      continue\n    }\n    //close a table\n    if (closeReg.test(lines[i]) === true) {\n      stack[stack.length - 1] += '\\n' + lines[i]\n      let table = stack.pop()\n      list.push(table)\n      continue\n    }\n    //keep-going on one\n    if (stack.length > 0) {\n      stack[stack.length - 1] += '\\n' + lines[i]\n    }\n  }\n  //work-em together for a Table class\n  let tables = []\n  list.forEach(str => {\n    if (str) {\n      //also reremove a newline at the end of the table (awkward)\n      wiki = wiki.replace(str + '\\n', '')\n      wiki = wiki.replace(str, '')\n      let data = parseTable(str)\n      if (data && data.length > 0) {\n        tables.push(new Table(data))\n      }\n    }\n  })\n\n  if (tables.length > 0) {\n    section.tables = tables\n  }\n  return wiki\n}\n\nmodule.exports = findTables\n","const setDefaults = require('../_lib/setDefaults')\n\nconst defaults = {\n  sentences: true\n}\n\nconst toJson = function(p, options) {\n  options = setDefaults(options, defaults)\n  let data = {}\n  if (options.sentences === true) {\n    data.sentences = p.sentences().map(s => s.json(options))\n  }\n  return data\n}\nmodule.exports = toJson\n","const toJSON = require('./toJson')\nconst setDefaults = require('../_lib/setDefaults')\nconst defaults = {\n  sentences: true,\n  lists: true,\n  images: true\n}\n\nconst Paragraph = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  sentences: function(num) {\n    if (typeof num === 'number') {\n      return this.data.sentences[num]\n    }\n    return this.data.sentences || []\n  },\n  references: function(num) {\n    if (typeof num === 'number') {\n      return this.data.references[num]\n    }\n    return this.data.references\n  },\n  lists: function(num) {\n    if (typeof num === 'number') {\n      return this.data.lists[num]\n    }\n    return this.data.lists\n  },\n  images(num) {\n    if (typeof num === 'number') {\n      return this.data.images[num]\n    }\n    return this.data.images || []\n  },\n  links: function(n) {\n    let arr = []\n    this.sentences().forEach(s => {\n      arr = arr.concat(s.links(n))\n    })\n    if (typeof n === 'number') {\n      return arr[n]\n    } else if (typeof n === 'string') {\n      //grab a specific link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1) //titlecase it\n      let link = arr.find(o => o.page() === n)\n      return link === undefined ? [] : [link]\n    }\n    return arr || []\n  },\n  interwiki(num) {\n    let arr = []\n    this.sentences().forEach(s => {\n      arr = arr.concat(s.interwiki())\n    })\n    if (typeof num === 'number') {\n      return arr[num]\n    }\n    return arr || []\n  },\n  text: function(options) {\n    options = setDefaults(options, defaults)\n    let str = this.sentences()\n      .map(s => s.text(options))\n      .join(' ')\n    this.lists().forEach(list => {\n      str += '\\n' + list.text()\n    })\n    return str\n  },\n  json: function(options) {\n    options = setDefaults(options, defaults)\n    return toJSON(this, options)\n  }\n}\nmethods.citations = methods.references\nObject.keys(methods).forEach(k => {\n  Paragraph.prototype[k] = methods[k]\n})\nmodule.exports = Paragraph\n","//find all the pairs of '[[...[[..]]...]]' in the text\n//used to properly root out recursive template calls, [[.. [[...]] ]]\n//basically just adds open tags, and subtracts closing tags\nfunction find_recursive(opener, closer, text) {\n  var out = []\n  var last = []\n  const chars = text.split('')\n  var open = 0\n  for (var i = 0; i < chars.length; i++) {\n    const c = text[i]\n    //increment open tag\n    if (c === opener) {\n      open += 1\n    }\n    //decrement close tag\n    else if (c === closer) {\n      open -= 1\n      if (open < 0) {\n        open = 0\n      }\n    } else if (last.length === 0) {\n      // If we're not inside of a pair of delimiters, we can discard the current letter.\n      // The return of this function is only used to extract images.\n      continue\n    }\n\n    last.push(c)\n    if (open === 0 && last.length > 0) {\n      //first, fix botched parse\n      var open_count = 0\n      var close_count = 0\n      for (var j = 0; j < last.length; j++) {\n        if (last[j] === opener) {\n          open_count++\n        } else if (last[j] === closer) {\n          close_count++\n        }\n      }\n      //is it botched?\n      if (open_count > close_count) {\n        last.push(closer)\n      }\n      //looks good, keep it\n      out.push(last.join(''))\n      last = []\n    }\n  }\n  return out\n}\nmodule.exports = find_recursive\n\n// console.log(find_recursive('{', '}', 'he is president. {{nowrap|{{small|(1995–present)}}}} he lives in texas'));\n// console.log(find_recursive(\"{\", \"}\", \"this is fun {{nowrap{{small1995–present}}}} and it works\"))\n","const i18n = require('../_data/i18n')\nconst Image = require('./Image')\nconst parseTemplate = require('../template/_parsers/parse')\nconst parseSentence = require('../04-sentence').oneSentence\n//regexes:\nconst isFile = new RegExp('(' + i18n.images.concat(i18n.files).join('|') + '):', 'i')\nlet fileNames = `(${i18n.images.concat(i18n.files).join('|')})`\nconst file_reg = new RegExp(fileNames + ':(.+?)[\\\\||\\\\]]', 'iu')\n\n//style directives for Wikipedia:Extended_image_syntax\nconst imgLayouts = {\n  thumb: true,\n  thumbnail: true,\n  border: true,\n  right: true,\n  left: true,\n  center: true,\n  top: true,\n  bottom: true,\n  none: true,\n  upright: true,\n  baseline: true,\n  middle: true,\n  sub: true,\n  super: true\n}\n\n//images are usually [[image:my_pic.jpg]]\nconst oneImage = function(img) {\n  let m = img.match(file_reg)\n  if (m === null || !m[2]) {\n    return null\n  }\n  let file = `${m[1]}:${m[2] || ''}`\n  file = file.trim()\n  //titlecase it\n  let title = file.charAt(0).toUpperCase() + file.substring(1)\n  //spaces to underscores\n  title = title.replace(/ /g, '_')\n  if (title) {\n    let obj = {\n      file: file\n    }\n    //try to grab other metadata, too\n    img = img.replace(/^\\[\\[/, '')\n    img = img.replace(/\\]\\]$/, '')\n\n    //https://en.wikipedia.org/wiki/Wikipedia:Extended_image_syntax\n    // - [[File:Name|Type|Border|Location|Alignment|Size|link=Link|alt=Alt|lang=Langtag|Caption]]\n    let imgData = parseTemplate(img)\n    let arr = imgData.list || []\n    //parse-out alt text, if explicitly given\n    if (imgData.alt) {\n      obj.alt = imgData.alt\n    }\n    //remove 'thumb' and things\n    arr = arr.filter(str => imgLayouts.hasOwnProperty(str) === false)\n    if (arr[arr.length - 1]) {\n      obj.caption = parseSentence(arr[arr.length - 1])\n    }\n    return new Image(obj, img)\n  }\n  return null\n}\n\nconst parseImages = function(matches, r, wiki) {\n  matches.forEach(function(s) {\n    if (isFile.test(s) === true) {\n      r.images = r.images || []\n      let img = oneImage(s)\n      if (img) {\n        r.images.push(img)\n      }\n      wiki = wiki.replace(s, '')\n    }\n  })\n  return wiki\n}\nmodule.exports = parseImages\n","const aliasList = require('../_lib/aliases')\nconst setDefaults = require('../_lib/setDefaults')\nconst defaults = {}\n\nconst toText = (list, options) => {\n  return list\n    .map(s => {\n      let str = s.text(options)\n      return ' * ' + str\n    })\n    .join('\\n')\n}\n\nconst List = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\n\nconst methods = {\n  lines() {\n    return this.data\n  },\n  links(n) {\n    let links = []\n    this.lines().forEach(s => {\n      links = links.concat(s.links())\n    })\n    if (typeof n === 'number') {\n      return links[n]\n    } else if (typeof n === 'string') {\n      //grab a link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1) //titlecase it\n      let link = links.find(o => o.page() === n)\n      return link === undefined ? [] : [link]\n    }\n    return links\n  },\n  json(options) {\n    options = setDefaults(options, defaults)\n    return this.lines().map(s => s.json(options))\n  },\n  text() {\n    return toText(this.data)\n  }\n}\n\nObject.keys(methods).forEach(k => {\n  List.prototype[k] = methods[k]\n})\n//add alises, too\nObject.keys(aliasList).forEach(k => {\n  List.prototype[k] = methods[aliasList[k]]\n})\nmodule.exports = List\n","const List = require('./List')\nconst parseSentence = require('../04-sentence/').oneSentence\nconst list_reg = /^[#\\*:;\\|]+/\nconst bullet_reg = /^\\*+[^:,\\|]{4}/\nconst number_reg = /^ ?\\#[^:,\\|]{4}/\nconst has_word = /[a-z_0-9\\]\\}]/i\n\n// does it start with a bullet point or something?\nconst isList = function(line) {\n  return list_reg.test(line) || bullet_reg.test(line) || number_reg.test(line)\n}\n\n//make bullets/numbers into human-readable *'s\nconst cleanList = function(list) {\n  let number = 1\n  list = list.filter(l => l)\n  for (var i = 0; i < list.length; i++) {\n    var line = list[i]\n    //add # numberings formatting\n    if (line.match(number_reg)) {\n      line = line.replace(/^ ?#*/, number + ') ')\n      line = line + '\\n'\n      number += 1\n    } else if (line.match(list_reg)) {\n      number = 1\n      line = line.replace(list_reg, '')\n    }\n    list[i] = parseSentence(line)\n  }\n  return list\n}\n\nconst grabList = function(lines, i) {\n  let sub = []\n  for (let o = i; o < lines.length; o++) {\n    if (isList(lines[o])) {\n      sub.push(lines[o])\n    } else {\n      break\n    }\n  }\n  sub = sub.filter(a => a && has_word.test(a))\n  sub = cleanList(sub)\n  return sub\n}\n\nconst parseList = function(wiki, data) {\n  let lines = wiki.split(/\\n/g)\n  // lines = lines.filter(l => has_word.test(l));\n  let lists = []\n  let theRest = []\n  for (let i = 0; i < lines.length; i++) {\n    if (isList(lines[i]) && lines[i + 1] && isList(lines[i + 1])) {\n      let sub = grabList(lines, i)\n      if (sub.length > 0) {\n        lists.push(sub)\n        i += sub.length - 1\n      }\n    } else {\n      theRest.push(lines[i])\n    }\n  }\n  data.lists = lists.map(l => new List(l))\n  wiki = theRest.join('\\n')\n  return wiki\n}\nmodule.exports = parseList\n","const Paragraph = require('./Paragraph')\nconst find_recursive = require('../_lib/recursive_match')\nconst parseSentences = require('../04-sentence').addSentences\n\nconst twoNewLines = /\\r?\\n\\r?\\n/\nconst parse = {\n  image: require('../image'),\n  list: require('../list')\n}\n\nconst parseParagraphs = function(wiki) {\n  let pList = wiki.split(twoNewLines)\n  //don't create empty paragraphs\n  pList = pList.filter(p => p && p.trim().length > 0)\n  pList = pList.map(str => {\n    let data = {\n      lists: [],\n      sentences: [],\n      images: []\n    }\n    //parse the lists\n    str = parse.list(str, data)\n    //parse+remove scary '[[ [[]] ]]' stuff\n    let matches = find_recursive('[', ']', str)\n    // parse images\n    str = parse.image(matches, data, str)\n    //parse the sentences\n    parseSentences(str, data)\n    return new Paragraph(data)\n  })\n  return {\n    paragraphs: pList,\n    wiki: wiki\n  }\n}\nmodule.exports = parseParagraphs\n","const encode = require('../_lib/encode')\n\n//turn an infobox into some nice json\nconst toJson = function(infobox, options) {\n  let json = Object.keys(infobox.data).reduce((h, k) => {\n    if (infobox.data[k]) {\n      h[k] = infobox.data[k].json()\n    }\n    return h\n  }, {})\n\n  //support mongo-encoding keys\n  if (options.encode === true) {\n    json = encode.encodeObj(json)\n  }\n  return json\n}\nmodule.exports = toJson\n","const toJson = require('./toJson')\nconst Image = require('../image/Image')\nconst aliasList = require('../_lib/aliases')\n\n//a formal key-value data table about a topic\nconst Infobox = function(obj) {\n  this._type = obj.type\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: obj.data\n  })\n}\n\nconst methods = {\n  type: function() {\n    return this._type\n  },\n  links: function(n) {\n    let arr = []\n    Object.keys(this.data).forEach(k => {\n      this.data[k].links().forEach(l => arr.push(l))\n    })\n    if (typeof n === 'number') {\n      return arr[n]\n    } else if (typeof n === 'string') {\n      //grab a link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1) //titlecase it\n      let link = arr.find(o => o.page() === n)\n      return link === undefined ? [] : [link]\n    }\n    return arr\n  },\n  image: function() {\n    let s = this.get('image') || this.get('image2')\n    if (!s) {\n      return null\n    }\n    let obj = s.json()\n    obj.file = obj.text\n    obj.text = ''\n    return new Image(obj)\n  },\n  get: function(key = '') {\n    key = key.toLowerCase()\n    let keys = Object.keys(this.data)\n    for (let i = 0; i < keys.length; i += 1) {\n      let tmp = keys[i].toLowerCase().trim()\n      if (key === tmp) {\n        return this.data[keys[i]]\n      }\n    }\n    return null\n  },\n  text: function() {\n    return ''\n  },\n  json: function(options) {\n    options = options || {}\n    return toJson(this, options)\n  },\n  keyValue: function() {\n    return Object.keys(this.data).reduce((h, k) => {\n      if (this.data[k]) {\n        h[k] = this.data[k].text()\n      }\n      return h\n    }, {})\n  }\n}\n//aliases\n\nObject.keys(methods).forEach(k => {\n  Infobox.prototype[k] = methods[k]\n})\n//add alises, too\nObject.keys(aliasList).forEach(k => {\n  Infobox.prototype[k] = methods[aliasList[k]]\n})\nInfobox.prototype.data = Infobox.prototype.keyValue\nInfobox.prototype.template = Infobox.prototype.type\nInfobox.prototype.images = Infobox.prototype.image\nmodule.exports = Infobox\n","const strip = require('./_parsers/_strip')\nconst open = '{'\nconst close = '}'\n\n//grab all first-level recursions of '{{...}}'\nconst findFlat = function(wiki) {\n  let depth = 0\n  let list = []\n  let carry = []\n  for (\n    var i = wiki.indexOf(open);\n    i !== -1 && i < wiki.length;\n    depth > 0 ? i++ : (i = wiki.indexOf(open, i + 1))\n  ) {\n    let c = wiki[i]\n    //open it\n    if (c === open) {\n      depth += 1\n    }\n    //close it\n    if (depth > 0) {\n      if (c === close) {\n        depth -= 1\n        if (depth === 0) {\n          carry.push(c)\n          let tmpl = carry.join('')\n          carry = []\n          //last check\n          if (/\\{\\{/.test(tmpl) && /\\}\\}/.test(tmpl)) {\n            list.push(tmpl)\n          }\n          continue\n        }\n      }\n      //require two '{{' to open it\n      if (depth === 1 && c !== open && c !== close) {\n        depth = 0\n        carry = []\n        continue\n      }\n      carry.push(c)\n    }\n  }\n  return list\n}\n\n//get all nested templates\nconst findNested = function(top) {\n  let deep = []\n  top.forEach(str => {\n    if (/\\{\\{/.test(str.substr(2)) === true) {\n      str = strip(str)\n      findFlat(str).forEach(o => {\n        if (o) {\n          deep.push(o)\n        }\n      })\n    }\n  })\n  return deep\n}\n\nconst getTemplates = function(wiki) {\n  let list = findFlat(wiki)\n  return {\n    top: list,\n    nested: findNested(list)\n  }\n}\n\nmodule.exports = getTemplates\n\n// console.log(getTemplates('he is president. {{nowrap|he is {{age|1980}} years}} he lives in {{date}} texas'));\n","const Template = function(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  })\n}\nconst methods = {\n  text: function() {\n    return ''\n  },\n  json: function() {\n    return this.data\n  }\n}\nObject.keys(methods).forEach(k => {\n  Template.prototype[k] = methods[k]\n})\nmodule.exports = Template\n","//we explicitly ignore these, because they sometimes have resolve some data\nconst list = [\n  //https://en.wikipedia.org/wiki/category:templates_with_no_visible_output\n  'anchor',\n  'defaultsort',\n  'use list-defined references',\n  'void',\n  //https://en.wikipedia.org/wiki/Category:Protection_templates\n  'pp',\n  'pp-move-indef',\n  'pp-semi-indef',\n  'pp-vandalism',\n  //https://en.wikipedia.org/wiki/Template:R\n  'r',\n  //out-of-scope still - https://en.wikipedia.org/wiki/Template:Tag\n  '#tag',\n  //https://en.wikipedia.org/wiki/Template:Navboxes\n  'navboxes',\n  'reflist',\n  'ref-list',\n  'div col',\n  'authority control',\n  //https://en.wikipedia.org/wiki/Template:Citation_needed\n  // 'better source',\n  // 'citation needed',\n  // 'clarify',\n  // 'cite quote',\n  // 'dead link',\n  // 'by whom',\n  // 'dubious',\n  // 'when',\n  // 'who',\n  // 'quantify',\n  // 'refimprove',\n  // 'weasel inline',\n  //https://en.wikipedia.org/wiki/Template:End\n  'pope list end',\n  'shipwreck list end',\n  'starbox end',\n  'end box',\n  'end',\n  's-end'\n]\nconst ignore = list.reduce((h, str) => {\n  h[str] = true\n  return h\n}, {})\nmodule.exports = ignore\n","const fmtName = require('./_fmtName')\n//get the name of the template\n//templates are usually '{{name|stuff}}'\nconst getName = function(tmpl) {\n  let name = null\n  //{{name|foo}}\n  if (/^\\{\\{[^\\n]+\\|/.test(tmpl)) {\n    name = (tmpl.match(/^\\{\\{(.+?)\\|/) || [])[1]\n  } else if (tmpl.indexOf('\\n') !== -1) {\n    // {{name \\n...\n    name = (tmpl.match(/^\\{\\{(.+?)\\n/) || [])[1]\n  } else {\n    //{{name here}}\n    name = (tmpl.match(/^\\{\\{(.+?)\\}\\}$/) || [])[1]\n  }\n  if (name) {\n    name = name.replace(/:.*/, '')\n    name = fmtName(name)\n  }\n  return name || null\n}\n// console.log(templateName('{{name|foo}}'));\n// console.log(templateName('{{name here}}'));\n// console.log(templateName('{{CITE book |title=the killer and the cartoons }}'));\n// console.log(templateName(`{{name\n// |key=val}}`));\nmodule.exports = getName\n","const i18n = require('../_data/i18n')\nconst i18nReg = new RegExp('^(subst.)?(' + i18n.infoboxes.join('|') + ')[: \\n]', 'i')\n//some looser ones\nconst startReg = /^infobox /i\nconst endReg = / infobox$/i\nconst yearIn = /$Year in [A-Z]/i\n\n//some known ones from\n// https://en.wikipedia.org/wiki/Wikipedia:List_of_infoboxes\n// and https://en.wikipedia.org/wiki/Category:Infobox_templates\nconst known = {\n  'gnf protein box': true,\n  'automatic taxobox': true,\n  'chembox ': true,\n  editnotice: true,\n  geobox: true,\n  hybridbox: true,\n  ichnobox: true,\n  infraspeciesbox: true,\n  mycomorphbox: true,\n  oobox: true,\n  'paraphyletic group': true,\n  speciesbox: true,\n  subspeciesbox: true,\n  'starbox short': true,\n  taxobox: true,\n  nhlteamseason: true,\n  'asian games bid': true,\n  'canadian federal election results': true,\n  'dc thomson comic strip': true,\n  'daytona 24 races': true,\n  edencharacter: true,\n  'moldova national football team results': true,\n  samurai: true,\n  protein: true,\n  'sheet authority': true,\n  'order-of-approx': true,\n  'bacterial labs': true,\n  'medical resources': true,\n  ordination: true,\n  'hockey team coach': true,\n  'hockey team gm': true,\n  'hockey team player': true,\n  'hockey team start': true,\n  mlbbioret: true\n}\n//\nconst isInfobox = function(name) {\n  // known\n  if (known.hasOwnProperty(name) === true) {\n    return true\n  }\n  if (i18nReg.test(name)) {\n    return true\n  }\n  if (startReg.test(name) || endReg.test(name)) {\n    return true\n  }\n  //these are also infoboxes: 'Year in Belarus'\n  if (yearIn.test(name)) {\n    return true\n  }\n  return false\n}\n\n//turns template data into good inforbox data\nconst fmtInfobox = function(obj = {}) {\n  let m = obj.template.match(i18nReg)\n  let type = obj.template\n  if (m && m[0]) {\n    type = type.replace(m[0], '')\n  }\n  type = type.trim()\n  let infobox = {\n    template: 'infobox',\n    type: type,\n    data: obj\n  }\n  delete infobox.data.template // already have this.\n  delete infobox.data.list //just in case!\n  return infobox\n}\n\nmodule.exports = {\n  isInfobox: isInfobox,\n  format: fmtInfobox\n}\n","module.exports = [\n  undefined, //1-based months.. :/\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n]\n","//assorted parsing methods for date/time templates\nconst months = require('./_months')\n\nconst monthName = months.reduce((h, str, i) => {\n  if (i === 0) {\n    return h\n  }\n  h[str.toLowerCase()] = i\n  return h\n}, {})\n\n//parse year|month|date numbers\nconst ymd = function(arr) {\n  let obj = {}\n  let units = ['year', 'month', 'date', 'hour', 'minute', 'second']\n  //parse each unit in sequence..\n  for (let i = 0; i < units.length; i += 1) {\n    //skip it\n    if (!arr[i] && arr[1] !== 0) {\n      continue\n    }\n    let num = parseInt(arr[i], 10)\n    if (isNaN(num) === false) {\n      obj[units[i]] = num //we good.\n    } else if (units[i] === 'month' && monthName.hasOwnProperty(arr[i])) {\n      //try for month-name, like 'january\n      let month = monthName[arr[i]]\n      obj[units[i]] = month\n    } else {\n      //we dead. so skip this unit\n      delete obj[units[i]]\n    }\n  }\n  //try for timezone,too ftw\n  let last = arr[arr.length - 1] || ''\n  last = String(last)\n  if (last.toLowerCase() === 'z') {\n    obj.tz = 'UTC'\n  } else if (/[+-][0-9]+:[0-9]/.test(last)) {\n    obj.tz = arr[6]\n  }\n  return obj\n}\n\n//zero-pad a number\nconst pad = function(num) {\n  if (num < 10) {\n    return '0' + num\n  }\n  return String(num)\n}\n\nconst toText = function(date) {\n  //eg '1995'\n  let str = String(date.year || '')\n  if (date.month !== undefined && months.hasOwnProperty(date.month) === true) {\n    if (date.date === undefined) {\n      //January 1995\n      str = `${months[date.month]} ${date.year}`\n    } else {\n      //January 5, 1995\n      str = `${months[date.month]} ${date.date}, ${date.year}`\n      //add times, if available\n      if (date.hour !== undefined && date.minute !== undefined) {\n        let time = `${pad(date.hour)}:${pad(date.minute)}`\n        if (date.second !== undefined) {\n          time = time + ':' + pad(date.second)\n        }\n        str = time + ', ' + str\n        //add timezone, if there, at the end in brackets\n      }\n      if (date.tz) {\n        str += ` (${date.tz})`\n      }\n    }\n  }\n  return str\n}\n\nmodule.exports = {\n  toText: toText,\n  ymd: ymd\n}\n\n// console.log(toText(ymd([2018, 3, 28])));\n","const format = require('./_format')\nconst months = require('./_months')\nconst parse = require('../../_parsers/parse')\n\nconst misc = {\n  reign: tmpl => {\n    let order = ['start', 'end']\n    let obj = parse(tmpl, order)\n    return `(r. ${obj.start} – ${obj.end})`\n  },\n  circa: tmpl => {\n    let obj = parse(tmpl, ['year'])\n    return `c. ${obj.year}`\n  },\n  //we can't do timezones, so fake this one a little bit\n  //https://en.wikipedia.org/wiki/Template:Time\n  time: () => {\n    let d = new Date()\n    let obj = format.ymd([d.getFullYear(), d.getMonth(), d.getDate()])\n    return format.toText(obj)\n  },\n  monthname: tmpl => {\n    let obj = parse(tmpl, ['num'])\n    return months[obj.num] || ''\n  },\n  //https://en.wikipedia.org/wiki/Template:OldStyleDate\n  oldstyledate: tmpl => {\n    let order = ['date', 'year']\n    let obj = parse(tmpl, order)\n    let str = obj.date\n    if (obj.year) {\n      str += ' ' + obj.year\n    }\n    return str\n  }\n}\nmodule.exports = misc\n","//this is allowed to be rough\nconst day = 1000 * 60 * 60 * 24\nconst month = day * 30\nconst year = day * 365\n\nconst getEpoch = function(obj) {\n  return new Date(`${obj.year}-${obj.month || 0}-${obj.date || 1}`).getTime()\n}\n\n//very rough!\nconst delta = function(from, to) {\n  from = getEpoch(from)\n  to = getEpoch(to)\n  let diff = to - from\n  let obj = {}\n  //get years\n  let years = Math.floor(diff / year, 10)\n  if (years > 0) {\n    obj.years = years\n    diff -= obj.years * year\n  }\n  //get months\n  let months = Math.floor(diff / month, 10)\n  if (months > 0) {\n    obj.months = months\n    diff -= obj.months * month\n  }\n  //get days\n  let days = Math.floor(diff / day, 10)\n  if (days > 0) {\n    obj.days = days\n    // diff -= (obj.days * day);\n  }\n  return obj\n}\n\nmodule.exports = delta\n","const strip = require('../../_parsers/_strip')\nconst parse = require('../../_parsers/parse')\nconst delta = require('./_delta')\nconst fmt = require('./_format')\nconst ymd = fmt.ymd\nconst toText = fmt.toText\n\n//wrap it up as a template\nconst template = function(date) {\n  return {\n    template: 'date',\n    data: date\n  }\n}\n\nconst getBoth = function(tmpl) {\n  tmpl = strip(tmpl)\n  let arr = tmpl.split('|')\n  let from = ymd(arr.slice(1, 4))\n  let to = arr.slice(4, 7)\n  //assume now, if 'to' is empty\n  if (to.length === 0) {\n    let d = new Date()\n    to = [d.getFullYear(), d.getMonth(), d.getDate()]\n  }\n  to = ymd(to)\n  return {\n    from: from,\n    to: to\n  }\n}\n\nconst parsers = {\n  //generic {{date|year|month|date}} template\n  date: (tmpl, r) => {\n    let order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'timezone']\n    let obj = parse(tmpl, order)\n    let data = ymd([obj.year, obj.month, obj.date || obj.day])\n    obj.text = toText(data) //make the replacement string\n    if (obj.timezone) {\n      if (obj.timezone === 'Z') {\n        obj.timezone = 'UTC'\n      }\n      obj.text += ` (${obj.timezone})`\n    }\n    if (obj.hour && obj.minute) {\n      if (obj.second) {\n        obj.text = `${obj.hour}:${obj.minute}:${obj.second}, ` + obj.text\n      } else {\n        obj.text = `${obj.hour}:${obj.minute}, ` + obj.text\n      }\n    }\n    if (obj.text) {\n      r.templates.push(template(obj))\n    }\n    return obj.text\n  },\n\n  //support parsing of 'February 10, 1992'\n  natural_date: (tmpl, r) => {\n    let order = ['text']\n    let obj = parse(tmpl, order)\n    let str = obj.text || ''\n    // - just a year\n    let date = {}\n    if (/^[0-9]{4}$/.test(str)) {\n      date.year = parseInt(str, 10)\n    } else {\n      //parse the date, using the js date object (for now?)\n      let txt = str.replace(/[a-z]+\\/[a-z]+/i, '')\n      txt = txt.replace(/[0-9]+:[0-9]+(am|pm)?/i, '')\n      let d = new Date(txt)\n      if (isNaN(d.getTime()) === false) {\n        date.year = d.getFullYear()\n        date.month = d.getMonth() + 1\n        date.date = d.getDate()\n      }\n    }\n    r.templates.push(template(date))\n    return str.trim()\n  },\n\n  //just grab the first value, and assume it's a year\n  one_year: (tmpl, r) => {\n    let order = ['year']\n    let obj = parse(tmpl, order)\n    let year = Number(obj.year)\n    r.templates.push(\n      template({\n        year: year\n      })\n    )\n    return String(year)\n  },\n\n  //assume 'y|m|d' | 'y|m|d' // {{BirthDeathAge|B|1976|6|6|1990|8|8}}\n  two_dates: (tmpl, r) => {\n    let order = [\n      'b',\n      'birth_year',\n      'birth_month',\n      'birth_date',\n      'death_year',\n      'death_month',\n      'death_date'\n    ]\n    let obj = parse(tmpl, order)\n    //'b' means show birth-date, otherwise show death-date\n    if (obj.b && obj.b.toLowerCase() === 'b') {\n      let date = ymd([obj.birth_year, obj.birth_month, obj.birth_date])\n      r.templates.push(template(date))\n      return toText(date)\n    }\n    let date = ymd([obj.death_year, obj.death_month, obj.death_date])\n    r.templates.push(template(date))\n    return toText(date)\n  },\n\n  age: tmpl => {\n    let d = getBoth(tmpl)\n    let diff = delta(d.from, d.to)\n    return diff.years || 0\n  },\n\n  'diff-y': tmpl => {\n    let d = getBoth(tmpl)\n    let diff = delta(d.from, d.to)\n    if (diff.years === 1) {\n      return diff.years + ' year'\n    }\n    return (diff.years || 0) + ' years'\n  },\n  'diff-ym': tmpl => {\n    let d = getBoth(tmpl)\n    let diff = delta(d.from, d.to)\n    let arr = []\n    if (diff.years === 1) {\n      arr.push(diff.years + ' year')\n    } else if (diff.years && diff.years !== 0) {\n      arr.push(diff.years + ' years')\n    }\n    if (diff.months === 1) {\n      arr.push('1 month')\n    } else if (diff.months && diff.months !== 0) {\n      arr.push(diff.months + ' months')\n    }\n    return arr.join(', ')\n  },\n  'diff-ymd': tmpl => {\n    let d = getBoth(tmpl)\n    let diff = delta(d.from, d.to)\n    let arr = []\n    if (diff.years === 1) {\n      arr.push(diff.years + ' year')\n    } else if (diff.years && diff.years !== 0) {\n      arr.push(diff.years + ' years')\n    }\n    if (diff.months === 1) {\n      arr.push('1 month')\n    } else if (diff.months && diff.months !== 0) {\n      arr.push(diff.months + ' months')\n    }\n    if (diff.days === 1) {\n      arr.push('1 day')\n    } else if (diff.days && diff.days !== 0) {\n      arr.push(diff.days + ' days')\n    }\n    return arr.join(', ')\n  },\n  'diff-yd': tmpl => {\n    let d = getBoth(tmpl)\n    let diff = delta(d.from, d.to)\n    let arr = []\n    if (diff.years === 1) {\n      arr.push(diff.years + ' year')\n    } else if (diff.years && diff.years !== 0) {\n      arr.push(diff.years + ' years')\n    }\n    //ergh...\n    diff.days += (diff.months || 0) * 30\n    if (diff.days === 1) {\n      arr.push('1 day')\n    } else if (diff.days && diff.days !== 0) {\n      arr.push(diff.days + ' days')\n    }\n    return arr.join(', ')\n  },\n  'diff-d': tmpl => {\n    let d = getBoth(tmpl)\n    let diff = delta(d.from, d.to)\n    let arr = []\n    //ergh...\n    diff.days += (diff.years || 0) * 365\n    diff.days += (diff.months || 0) * 30\n    if (diff.days === 1) {\n      arr.push('1 day')\n    } else if (diff.days && diff.days !== 0) {\n      arr.push(diff.days + ' days')\n    }\n    return arr.join(', ')\n  }\n}\nmodule.exports = parsers\n","//not all too fancy - used in {{timesince}}\nconst timeSince = function(str) {\n  let d = new Date(str)\n  if (isNaN(d.getTime())) {\n    return ''\n  }\n  let now = new Date()\n  let delta = now.getTime() - d.getTime()\n  let predicate = 'ago'\n  if (delta < 0) {\n    predicate = 'from now'\n    delta = Math.abs(delta)\n  }\n  //figure out units\n  let hours = delta / 1000 / 60 / 60\n  let days = hours / 24\n  if (days < 365) {\n    return parseInt(days, 10) + ' days ' + predicate\n  }\n  let years = days / 365\n  return parseInt(years, 10) + ' years ' + predicate\n}\nmodule.exports = timeSince\n","const misc = require('./misc')\nconst parsers = require('./parsers')\nconst parse = require('../../_parsers/parse')\nconst timeSince = require('./_timeSince')\nconst format = require('./_format')\nconst date = parsers.date\nconst natural_date = parsers.natural_date\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n]\nconst days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n\n//date- templates we support\nlet dateTmpl = Object.assign({}, misc, {\n  currentday: () => {\n    let d = new Date()\n    return String(d.getDate())\n  },\n  currentdayname: () => {\n    let d = new Date()\n    return days[d.getDay()]\n  },\n  currentmonth: () => {\n    let d = new Date()\n    return months[d.getMonth()]\n  },\n  currentyear: () => {\n    let d = new Date()\n    return String(d.getFullYear())\n  },\n  monthyear: () => {\n    let d = new Date()\n    return months[d.getMonth()] + ' ' + d.getFullYear()\n  },\n  'monthyear-1': () => {\n    let d = new Date()\n    d.setMonth(d.getMonth() - 1)\n    return months[d.getMonth()] + ' ' + d.getFullYear()\n  },\n  'monthyear+1': () => {\n    let d = new Date()\n    d.setMonth(d.getMonth() + 1)\n    return months[d.getMonth()] + ' ' + d.getFullYear()\n  },\n  //Explictly-set dates - https://en.wikipedia.org/wiki/Template:Date\n  date: tmpl => {\n    let order = ['date', 'fmt']\n    return parse(tmpl, order).date\n  },\n  'time ago': tmpl => {\n    let order = ['date', 'fmt']\n    let time = parse(tmpl, order).date\n    return timeSince(time)\n  },\n  //https://en.wikipedia.org/wiki/Template:Birth_date_and_age\n  'birth date and age': (tmpl, r) => {\n    let order = ['year', 'month', 'day']\n    let obj = parse(tmpl, order)\n    //support 'one property' version\n    if (obj.year && /[a-z]/i.test(obj.year)) {\n      return natural_date(tmpl, r)\n    }\n    r.templates.push(obj)\n    obj = format.ymd([obj.year, obj.month, obj.day])\n    return format.toText(obj)\n  },\n  'birth year and age': (tmpl, r) => {\n    let order = ['birth_year', 'birth_month']\n    let obj = parse(tmpl, order)\n    //support 'one property' version\n    if (obj.death_year && /[a-z]/i.test(obj.death_year)) {\n      return natural_date(tmpl, r)\n    }\n    r.templates.push(obj)\n    let age = new Date().getFullYear() - parseInt(obj.birth_year, 10)\n    obj = format.ymd([obj.birth_year, obj.birth_month])\n    let str = format.toText(obj)\n    if (age) {\n      str += ` (age ${age})`\n    }\n    return str\n  },\n  'death year and age': (tmpl, r) => {\n    let order = ['death_year', 'birth_year', 'death_month']\n    let obj = parse(tmpl, order)\n    //support 'one property' version\n    if (obj.death_year && /[a-z]/i.test(obj.death_year)) {\n      return natural_date(tmpl, r)\n    }\n    r.templates.push(obj)\n    obj = format.ymd([obj.death_year, obj.death_month])\n    return format.toText(obj)\n  },\n  //https://en.wikipedia.org/wiki/Template:Birth_date_and_age2\n  'birth date and age2': (tmpl, r) => {\n    let order = ['at_year', 'at_month', 'at_day', 'birth_year', 'birth_month', 'birth_day']\n    let obj = parse(tmpl, order)\n    r.templates.push(obj)\n    obj = format.ymd([obj.birth_year, obj.birth_month, obj.birth_day])\n    return format.toText(obj)\n  },\n  //https://en.wikipedia.org/wiki/Template:Birth_based_on_age_as_of_date\n  'birth based on age as of date': (tmpl, r) => {\n    let order = ['age', 'year', 'month', 'day']\n    let obj = parse(tmpl, order)\n    r.templates.push(obj)\n    let age = parseInt(obj.age, 10)\n    let year = parseInt(obj.year, 10)\n    let born = year - age\n    if (born && age) {\n      return `${born} (age ${obj.age})`\n    }\n    return `(age ${obj.age})`\n  },\n  //https://en.wikipedia.org/wiki/Template:Death_date_and_given_age\n  'death date and given age': (tmpl, r) => {\n    let order = ['year', 'month', 'day', 'age']\n    let obj = parse(tmpl, order)\n    r.templates.push(obj)\n    obj = format.ymd([obj.year, obj.month, obj.day])\n    let str = format.toText(obj)\n    if (obj.age) {\n      str += ` (age ${obj.age})`\n    }\n    return str\n  },\n  //sortable dates -\n  dts: tmpl => {\n    //remove formatting stuff, ewww\n    tmpl = tmpl.replace(/\\|format=[ymd]+/i, '')\n    tmpl = tmpl.replace(/\\|abbr=(on|off)/i, '')\n    let order = ['year', 'month', 'date', 'bc']\n    let obj = parse(tmpl, order)\n    if (obj.date && obj.month && obj.year) {\n      //render 'june 5 2018'\n      if (/[a-z]/.test(obj.month) === true) {\n        return [obj.month, obj.date, obj.year].join(' ')\n      }\n      return [obj.year, obj.month, obj.date].join('-')\n    }\n    if (obj.month && obj.year) {\n      return [obj.year, obj.month].join('-')\n    }\n    if (obj.year) {\n      if (obj.year < 0) {\n        obj.year = Math.abs(obj.year) + ' BC'\n      }\n      return obj.year\n    }\n    return ''\n  },\n  //date/age/time templates\n  start: date,\n  end: date,\n  birth: date,\n  death: date,\n  'start date': date,\n  'end date': date,\n  'birth date': date,\n  'death date': date,\n  'start date and age': date,\n  'end date and age': date,\n  //this is insane (hyphen ones are different)\n  'start-date': natural_date,\n  'end-date': natural_date,\n  'birth-date': natural_date,\n  'death-date': natural_date,\n  'birth-date and age': natural_date,\n  'birth-date and given age': natural_date,\n  'death-date and age': natural_date,\n  'death-date and given age': natural_date,\n\n  birthdeathage: parsers.two_dates,\n  dob: date,\n  // 'birth date and age2': date,\n\n  age: parsers.age,\n  'age nts': parsers.age,\n  'age in years': parsers['diff-y'],\n  'age in years and months': parsers['diff-ym'],\n  'age in years, months and days': parsers['diff-ymd'],\n  'age in years and days': parsers['diff-yd'],\n  'age in days': parsers['diff-d']\n  // 'age in years, months, weeks and days': true,\n  // 'age as of date': true,\n})\n//aliases\ndateTmpl.localday = dateTmpl.currentday\ndateTmpl.localdayname = dateTmpl.currentdayname\ndateTmpl.localmonth = dateTmpl.currentmonth\ndateTmpl.localyear = dateTmpl.currentyear\ndateTmpl.currentmonthname = dateTmpl.currentmonth\ndateTmpl.currentmonthabbrev = dateTmpl.currentmonth\ndateTmpl['death date and age'] = dateTmpl['birth date and age']\ndateTmpl.bda = dateTmpl['birth date and age']\ndateTmpl['birth date based on age at death'] = dateTmpl['birth based on age as of date']\nmodule.exports = dateTmpl\n","const parse = require('../../_parsers/parse')\n\nlet templates = {\n  //a convulated way to make a xml tag - https://en.wikipedia.org/wiki/Template:Tag\n  tag: tmpl => {\n    let obj = parse(tmpl, ['tag', 'open'])\n    const ignore = {\n      span: true,\n      div: true,\n      p: true\n    }\n    //pair, empty, close, single\n    if (!obj.open || obj.open === 'pair') {\n      //just skip generating spans and things..\n      if (ignore[obj.tag]) {\n        return obj.content || ''\n      }\n      return `<${obj.tag} ${obj.attribs || ''}>${obj.content || ''}</${obj.tag}>`\n    }\n    return ''\n  },\n  //dumb inflector - https://en.wikipedia.org/wiki/Template:Plural\n  plural: tmpl => {\n    tmpl = tmpl.replace(/plural:/, 'plural|')\n    let order = ['num', 'word']\n    let obj = parse(tmpl, order)\n    let num = Number(obj.num)\n    let word = obj.word\n    if (num !== 1) {\n      if (/.y$/.test(word)) {\n        word = word.replace(/y$/, 'ies')\n      } else {\n        word += 's'\n      }\n    }\n    return num + ' ' + word\n  },\n  // https://en.wikipedia.org/wiki/Template:First_word\n  'first word': tmpl => {\n    let obj = parse(tmpl, ['text'])\n    let str = obj.text\n    if (obj.sep) {\n      return str.split(obj.sep)[0]\n    }\n    return str.split(' ')[0]\n  },\n  trunc: tmpl => {\n    let order = ['str', 'len']\n    let obj = parse(tmpl, order)\n    return obj.str.substr(0, obj.len)\n  },\n  'str mid': tmpl => {\n    let order = ['str', 'start', 'end']\n    let obj = parse(tmpl, order)\n    let start = parseInt(obj.start, 10) - 1\n    let end = parseInt(obj.end, 10)\n    return obj.str.substr(start, end)\n  },\n  //grab the first, second or third pipe\n  p1: tmpl => {\n    let order = ['one']\n    return parse(tmpl, order).one\n  },\n  p2: tmpl => {\n    let order = ['one', 'two']\n    return parse(tmpl, order).two\n  },\n  p3: tmpl => {\n    let order = ['one', 'two', 'three']\n    return parse(tmpl, order).three\n  },\n  //formatting things - https://en.wikipedia.org/wiki/Template:Nobold\n  braces: tmpl => {\n    let obj = parse(tmpl, ['text'])\n    let attrs = ''\n    if (obj.list) {\n      attrs = '|' + obj.list.join('|')\n    }\n    return '{{' + (obj.text || '') + attrs + '}}'\n  },\n  nobold: tmpl => {\n    return parse(tmpl, ['text']).text || ''\n  },\n  noitalic: tmpl => {\n    return parse(tmpl, ['text']).text || ''\n  },\n  nocaps: tmpl => {\n    return parse(tmpl, ['text']).text || ''\n  },\n  syntaxhighlight: (tmpl, r) => {\n    let obj = parse(tmpl)\n    r.templates.push(obj)\n    return obj.code || ''\n  },\n  samp: (tmpl, r) => {\n    let obj = parse(tmpl, ['1'])\n    r.templates.push(obj)\n    return obj['1'] || ''\n  },\n  //https://en.wikipedia.org/wiki/Template:Visible_anchor\n  vanchor: tmpl => {\n    return parse(tmpl, ['text']).text || ''\n  },\n  //https://en.wikipedia.org/wiki/Template:Resize\n  resize: tmpl => {\n    return parse(tmpl, ['size', 'text']).text || ''\n  },\n  //https://en.wikipedia.org/wiki/Template:Ra\n  ra: tmpl => {\n    let obj = parse(tmpl, ['hours', 'minutes', 'seconds'])\n    return [obj.hours || 0, obj.minutes || 0, obj.seconds || 0].join(':')\n  },\n  //https://en.wikipedia.org/wiki/Template:Deg2HMS\n  deg2hms: tmpl => {\n    //this template should do the conversion\n    let obj = parse(tmpl, ['degrees'])\n    return (obj.degrees || '') + '°'\n  },\n  hms2deg: tmpl => {\n    //this template should do the conversion too\n    let obj = parse(tmpl, ['hours', 'minutes', 'seconds'])\n    return [obj.hours || 0, obj.minutes || 0, obj.seconds || 0].join(':')\n  },\n  decdeg: tmpl => {\n    //this template should do the conversion too\n    let obj = parse(tmpl, ['deg', 'min', 'sec', 'hem', 'rnd'])\n    return (obj.deg || obj.degrees) + '°'\n  },\n  rnd: tmpl => {\n    //this template should do the conversion too\n    let obj = parse(tmpl, ['decimal'])\n    return obj.decimal || ''\n  },\n  //https://en.wikipedia.org/wiki/Template:DEC\n  dec: tmpl => {\n    let obj = parse(tmpl, ['degrees', 'minutes', 'seconds'])\n    let str = (obj.degrees || 0) + '°'\n    if (obj.minutes) {\n      str += obj.minutes + `′`\n    }\n    if (obj.seconds) {\n      str += obj.seconds + '″'\n    }\n    return str\n  },\n  //https://en.wikipedia.org/wiki/Template:Val\n  val: tmpl => {\n    let obj = parse(tmpl, ['number', 'uncertainty'])\n    let str = obj.number || ''\n    //prefix/suffix\n    if (obj.p) {\n      str = obj.p + str\n    }\n    if (obj.s) {\n      str = obj.s + str\n    }\n    //add units, too\n    if (obj.u || obj.ul || obj.upl) {\n      str = str + ' ' + (obj.u || obj.ul || obj.upl)\n    }\n    return str\n  }\n}\n\n//aliases\ntemplates['rndfrac'] = templates.rnd\ntemplates['rndnear'] = templates.rnd\ntemplates['unité'] = templates.val\n\n//templates that we simply grab their insides as plaintext\nlet inline = [\n  'nowrap',\n  'nobr',\n  'big',\n  'cquote',\n  'pull quote',\n  'small',\n  'smaller',\n  'midsize',\n  'larger',\n  'big',\n  'kbd',\n  'bigger',\n  'large',\n  'mono',\n  'strongbad',\n  'stronggood',\n  'huge',\n  'xt',\n  'xt2',\n  '!xt',\n  'xtn',\n  'xtd',\n  'dc',\n  'dcr',\n  'mxt',\n  '!mxt',\n  'mxtn',\n  'mxtd',\n  'bxt',\n  '!bxt',\n  'bxtn',\n  'bxtd',\n  'delink', //https://en.wikipedia.org/wiki/Template:Delink\n  //half-supported\n  'pre',\n  'var',\n  'mvar',\n  'pre2',\n  'code'\n]\ninline.forEach(k => {\n  templates[k] = tmpl => {\n    return parse(tmpl, ['text']).text || ''\n  }\n})\n\nmodule.exports = templates\n","const strip = require('../../_parsers/_strip')\nconst parse = require('../../_parsers/parse')\n\nconst tmpls = {\n  //a strange, newline-based list - https://en.wikipedia.org/wiki/Template:Plainlist\n  plainlist: tmpl => {\n    tmpl = strip(tmpl)\n    //remove the title\n    let arr = tmpl.split('|')\n    arr = arr.slice(1)\n    tmpl = arr.join('|')\n    //split on newline\n    arr = tmpl.split(/\\n ?\\* ?/)\n    arr = arr.filter(s => s)\n    return arr.join('\\n\\n')\n  },\n\n  //show/hide: https://en.wikipedia.org/wiki/Template:Collapsible_list\n  'collapsible list': (tmpl, r) => {\n    let obj = parse(tmpl)\n    r.templates.push(obj)\n    let str = ''\n    if (obj.title) {\n      str += `'''${obj.title}'''` + '\\n\\n'\n    }\n    if (!obj.list) {\n      obj.list = []\n      for (let i = 1; i < 10; i += 1) {\n        if (obj[i]) {\n          obj.list.push(obj[i])\n          delete obj[i]\n        }\n      }\n    }\n    obj.list = obj.list.filter(s => s)\n    str += obj.list.join('\\n\\n')\n    return str\n  },\n  // https://en.wikipedia.org/wiki/Template:Ordered_list\n  'ordered list': (tmpl, r) => {\n    let obj = parse(tmpl)\n    r.templates.push(obj)\n    obj.list = obj.list || []\n    let lines = obj.list.map((str, i) => `${i + 1}. ${str}`)\n    return lines.join('\\n\\n')\n  },\n  hlist: tmpl => {\n    let obj = parse(tmpl)\n    obj.list = obj.list || []\n    return obj.list.join(' · ')\n  },\n  pagelist: tmpl => {\n    let arr = parse(tmpl).list || []\n    return arr.join(', ')\n  },\n  //actually rendering these links removes the text.\n  //https://en.wikipedia.org/wiki/Template:Catlist\n  catlist: tmpl => {\n    let arr = parse(tmpl).list || []\n    return arr.join(', ')\n  },\n  //https://en.wikipedia.org/wiki/Template:Br_separated_entries\n  'br separated entries': tmpl => {\n    let arr = parse(tmpl).list || []\n    return arr.join('\\n\\n')\n  },\n  'comma separated entries': tmpl => {\n    let arr = parse(tmpl).list || []\n    return arr.join(', ')\n  },\n  //https://en.wikipedia.org/wiki/Template:Bare_anchored_list\n  'anchored list': tmpl => {\n    let arr = parse(tmpl).list || []\n    arr = arr.map((str, i) => `${i + 1}. ${str}`)\n    return arr.join('\\n\\n')\n  },\n  'bulleted list': tmpl => {\n    let arr = parse(tmpl).list || []\n    arr = arr.filter(f => f)\n    arr = arr.map(str => '• ' + str)\n    return arr.join('\\n\\n')\n  },\n  //https://en.wikipedia.org/wiki/Template:Columns-list\n  'columns-list': (tmpl, r) => {\n    let arr = parse(tmpl).list || []\n    let str = arr[0] || ''\n    let list = str.split(/\\n/)\n    list = list.filter(f => f)\n    list = list.map(s => s.replace(/\\*/, ''))\n    r.templates.push({\n      template: 'columns-list',\n      list: list\n    })\n    list = list.map(s => '• ' + s)\n    return list.join('\\n\\n')\n  }\n  // 'pagelist':(tmpl)=>{},\n}\n//aliases\ntmpls.flatlist = tmpls.plainlist\ntmpls.ublist = tmpls.plainlist\ntmpls['unbulleted list'] = tmpls['collapsible list']\ntmpls['ubl'] = tmpls['collapsible list']\ntmpls['bare anchored list'] = tmpls['anchored list']\ntmpls['plain list'] = tmpls['plainlist']\ntmpls.cmn = tmpls['columns-list']\ntmpls.collist = tmpls['columns-list']\ntmpls['col-list'] = tmpls['columns-list']\ntmpls.columnslist = tmpls['columns-list']\nmodule.exports = tmpls\n","const parse = require('../../_parsers/parse')\n\nconst inline = {\n  //https://en.wikipedia.org/wiki/Template:Convert#Ranges_of_values\n  convert: tmpl => {\n    let order = ['num', 'two', 'three', 'four']\n    let obj = parse(tmpl, order)\n    //todo: support plural units\n    if (obj.two === '-' || obj.two === 'to' || obj.two === 'and') {\n      if (obj.four) {\n        return `${obj.num} ${obj.two} ${obj.three} ${obj.four}`\n      }\n      return `${obj.num} ${obj.two} ${obj.three}`\n    }\n    return `${obj.num} ${obj.two}`\n  },\n  //https://en.wikipedia.org/wiki/Template:Term\n  term: tmpl => {\n    let obj = parse(tmpl, ['term'])\n    return `${obj.term}:`\n  },\n  defn: tmpl => {\n    let obj = parse(tmpl, ['desc'])\n    return obj.desc\n  },\n  //https://en.wikipedia.org/wiki/Template:Linum\n  lino: tmpl => {\n    let obj = parse(tmpl, ['num'])\n    return `${obj.num}`\n  },\n  linum: tmpl => {\n    let obj = parse(tmpl, ['num', 'text'])\n    return `${obj.num}. ${obj.text}`\n  },\n  //https://en.wikipedia.org/wiki/Template:Interlanguage_link\n  ill: tmpl => {\n    let order = ['text', 'lan1', 'text1', 'lan2', 'text2']\n    let obj = parse(tmpl, order)\n    return obj.text\n  },\n  //https://en.wikipedia.org/wiki/Template:Frac\n  frac: tmpl => {\n    let order = ['a', 'b', 'c']\n    let obj = parse(tmpl, order)\n    if (obj.c) {\n      return `${obj.a} ${obj.b}/${obj.c}`\n    }\n    if (obj.b) {\n      return `${obj.a}/${obj.b}`\n    }\n    return `1/${obj.b}`\n  },\n  //https://en.wikipedia.org/wiki/Template:Height - {{height|ft=6|in=1}}\n  height: (tmpl, r) => {\n    let obj = parse(tmpl)\n    r.templates.push(obj)\n    let result = []\n    let units = ['m', 'cm', 'ft', 'in'] //order matters\n    units.forEach(unit => {\n      if (obj.hasOwnProperty(unit) === true) {\n        result.push(obj[unit] + unit)\n      }\n    })\n    return result.join(' ')\n  },\n  'block indent': tmpl => {\n    let obj = parse(tmpl)\n    if (obj['1']) {\n      return '\\n' + obj['1'] + '\\n'\n    }\n    return ''\n  },\n  quote: (tmpl, r) => {\n    let order = ['text', 'author']\n    let obj = parse(tmpl, order)\n    r.templates.push(obj)\n    //create plaintext version\n    if (obj.text) {\n      let str = `\"${obj.text}\"`\n      if (obj.author) {\n        str += '\\n\\n'\n        str += `    - ${obj.author}`\n      }\n      return str + '\\n'\n    }\n    return ''\n  },\n\n  //https://en.wikipedia.org/wiki/Template:Lbs\n  lbs: tmpl => {\n    let obj = parse(tmpl, ['text'])\n    return `[[${obj.text} Lifeboat Station|${obj.text}]]`\n  },\n  //Foo-class\n  lbc: tmpl => {\n    let obj = parse(tmpl, ['text'])\n    return `[[${obj.text}-class lifeboat|${obj.text}-class]]`\n  },\n  lbb: tmpl => {\n    let obj = parse(tmpl, ['text'])\n    return `[[${obj.text}-class lifeboat|${obj.text}]]`\n  },\n  // https://en.wikipedia.org/wiki/Template:Own\n  own: tmpl => {\n    let obj = parse(tmpl, ['author'])\n    let str = 'Own work'\n    if (obj.author) {\n      str += ' by ' + obj.author\n    }\n    return str\n  },\n  //https://en.wikipedia.org/wiki/Template:Sic\n  sic: (tmpl, r) => {\n    let obj = parse(tmpl, ['one', 'two', 'three'])\n    let word = (obj.one || '') + (obj.two || '')\n    //support '[sic?]'\n    if (obj.one === '?') {\n      word = (obj.two || '') + (obj.three || '')\n    }\n    r.templates.push({\n      template: 'sic',\n      word: word\n    })\n    if (obj.nolink === 'y') {\n      return word\n    }\n    return `${word} [sic]`\n  },\n  //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n  formatnum: (tmpl = '') => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['number'])\n    let str = obj.number || ''\n    str = str.replace(/,/g, '')\n    let num = Number(str)\n    return num.toLocaleString() || ''\n  },\n  //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n  '#dateformat': (tmpl = '') => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['date', 'format'])\n    return obj.date\n  },\n  //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n  lc: (tmpl = '') => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['text'])\n    return (obj.text || '').toLowerCase()\n  },\n  lcfirst: (tmpl = '') => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['text'])\n    let text = obj.text\n    if (!text) {\n      return ''\n    }\n    return text[0].toLowerCase() + text.substr(1)\n  },\n  //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n  uc: (tmpl = '') => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['text'])\n    return (obj.text || '').toUpperCase()\n  },\n  ucfirst: (tmpl = '') => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['text'])\n    let text = obj.text\n    if (!text) {\n      return ''\n    }\n    return text[0].toUpperCase() + text.substr(1)\n  },\n  padleft: (tmpl = '') => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['text', 'num'])\n    let text = obj.text || ''\n    return text.padStart(obj.num, obj.str || '0')\n  },\n  padright: (tmpl = '') => {\n    tmpl = tmpl.replace(/:/, '|')\n    let obj = parse(tmpl, ['text', 'num'])\n    let text = obj.text || ''\n    return text.padEnd(obj.num, obj.str || '0')\n  },\n  //abbreviation/meaning\n  //https://en.wikipedia.org/wiki/Template:Abbr\n  abbr: (tmpl = '') => {\n    let obj = parse(tmpl, ['abbr', 'meaning', 'ipa'])\n    return obj.abbr\n  },\n  //https://en.wikipedia.org/wiki/Template:Abbrlink\n  abbrlink: (tmpl = '') => {\n    let obj = parse(tmpl, ['abbr', 'page'])\n    if (obj.page) {\n      return `[[${obj.page}|${obj.abbr}]]`\n    }\n    return `[[${obj.abbr}]]`\n  },\n  //https://en.wikipedia.org/wiki/Template:Hover_title\n  //technically 'h:title'\n  h: (tmpl = '') => {\n    let obj = parse(tmpl, ['title', 'text'])\n    return obj.text\n  },\n  //https://en.wikipedia.org/wiki/Template:Finedetail\n  finedetail: (tmpl = '') => {\n    let obj = parse(tmpl, ['text', 'detail']) //technically references\n    return obj.text\n  },\n  //https://en.wikipedia.org/wiki/Template:Sort\n  sort: tmpl => {\n    let order = ['sort', 'display']\n    return parse(tmpl, order).display\n  }\n}\n\n//aliases\ninline['str left'] = inline.trunc\ninline['str crop'] = inline.trunc\ninline['tooltip'] = inline.abbr\ninline['abbrv'] = inline.abbr\ninline['define'] = inline.abbr\n\nmodule.exports = inline\n","module.exports = Object.assign({}, require('./format'), require('./lists'), require('./misc'))\n","//converts DMS (decimal-minute-second) geo format to lat/lng format.\n//major thank you to https://github.com/gmaclennan/parse-dms\n//and https://github.com/WSDOT-GIS/dms-js 👏\n\n//accepts an array of descending Degree, Minute, Second values, with a hemisphere at the end\n//must have N/S/E/W as last thing\nfunction parseDms(arr) {\n  let hemisphere = arr.pop()\n  var degrees = Number(arr[0] || 0)\n  var minutes = Number(arr[1] || 0)\n  var seconds = Number(arr[2] || 0)\n  if (typeof hemisphere !== 'string' || isNaN(degrees)) {\n    return null\n  }\n  var sign = 1\n  if (/[SW]/i.test(hemisphere)) {\n    sign = -1\n  }\n  let decDeg = sign * (degrees + minutes / 60 + seconds / 3600)\n  return decDeg\n}\nmodule.exports = parseDms\n// console.log(parseDms([57, 18, 22, 'N']));\n// console.log(parseDms([4, 27, 32, 'W']));\n","const convertDMS = require('./dms-format')\nconst parse = require('../../_parsers/parse')\n\nconst round = function(num) {\n  if (typeof num !== 'number') {\n    return num\n  }\n  let places = 100000\n  return Math.round(num * places) / places\n}\n\n//these hemispheres mean negative decimals\nconst negative = {\n  s: true,\n  w: true\n}\n\nconst findLatLng = function(arr) {\n  const types = arr.map(s => typeof s).join('|')\n  //support {{lat|lng}}\n  if (arr.length === 2 && types === 'number|number') {\n    return {\n      lat: arr[0],\n      lon: arr[1]\n    }\n  }\n  //support {{dd|N/S|dd|E/W}}\n  if (arr.length === 4 && types === 'number|string|number|string') {\n    if (negative[arr[1].toLowerCase()]) {\n      arr[0] *= -1\n    }\n    if (arr[3].toLowerCase() === 'w') {\n      arr[2] *= -1\n    }\n    return {\n      lat: arr[0],\n      lon: arr[2]\n    }\n  }\n  //support {{dd|mm|N/S|dd|mm|E/W}}\n  if (arr.length === 6) {\n    return {\n      lat: convertDMS(arr.slice(0, 3)),\n      lon: convertDMS(arr.slice(3))\n    }\n  }\n  //support {{dd|mm|ss|N/S|dd|mm|ss|E/W}}\n  if (arr.length === 8) {\n    return {\n      lat: convertDMS(arr.slice(0, 4)),\n      lon: convertDMS(arr.slice(4))\n    }\n  }\n  return {}\n}\n\nconst parseParams = function(obj) {\n  obj.list = obj.list || []\n  obj.list = obj.list.map(str => {\n    let num = Number(str)\n    if (!isNaN(num)) {\n      return num\n    }\n    //these are weird\n    let split = str.split(/:/)\n    if (split.length > 1) {\n      obj.props = obj.props || {}\n      obj.props[split[0]] = split.slice(1).join(':')\n      return null\n    }\n    return str\n  })\n  obj.list = obj.list.filter(s => s !== null)\n  return obj\n}\n\nconst parseCoor = function(tmpl) {\n  let obj = parse(tmpl)\n  obj = parseParams(obj)\n  let tmp = findLatLng(obj.list)\n  obj.lat = round(tmp.lat)\n  obj.lon = round(tmp.lon)\n  obj.template = 'coord'\n  delete obj.list\n  return obj\n}\n\nmodule.exports = parseCoor\n// {{Coor title dms|dd|mm|ss|N/S|dd|mm|ss|E/W|template parameters}}\n// {{Coor title dec|latitude|longitude|template parameters}}\n// {{Coor dms|dd|mm|ss|N/S|dd|mm|ss|E/W|template parameters}}\n// {{Coor dm|dd|mm|N/S|dd|mm|E/W|template parameters}}\n// {{Coor dec|latitude|longitude|template parameters}}\n\n// {{coord|latitude|longitude|coordinate parameters|template parameters}}\n// {{coord|dd|N/S|dd|E/W|coordinate parameters|template parameters}}\n// {{coord|dd|mm|N/S|dd|mm|E/W|coordinate parameters|template parameters}}\n// {{coord|dd|mm|ss|N/S|dd|mm|ss|E/W|coordinate parameters|template parameters}}\n","const parseCoor = require('./coor')\n\nconst templates = {\n  coord: (tmpl, r) => {\n    let obj = parseCoor(tmpl)\n    r.templates.push(obj)\n    //display inline, by default\n    if (!obj.display || obj.display.indexOf('inline') !== -1) {\n      return `${obj.lat || ''}°N, ${obj.lon || ''}°W`\n    }\n    return ''\n  },\n  //https://en.wikivoyage.org/wiki/Template:Geo\n  geo: ['lat', 'lon', 'zoom']\n}\n// {{coord|latitude|longitude|coordinate parameters|template parameters}}\n// {{coord|dd|N/S|dd|E/W|coordinate parameters|template parameters}}\n// {{coord|dd|mm|N/S|dd|mm|E/W|coordinate parameters|template parameters}}\n// {{coord|dd|mm|ss|N/S|dd|mm|ss|E/W|coordinate parameters|template parameters}}\ntemplates['coor'] = templates.coord\n// these are from the nl wiki\ntemplates['coor title dms'] = templates.coord\ntemplates['coor title dec'] = templates.coord\ntemplates['coor dms'] = templates.coord\ntemplates['coor dm'] = templates.coord\ntemplates['coor dec'] = templates.coord\nmodule.exports = templates\n","const parse = require('../../_parsers/parse')\n\nlet templates = {\n  /* mostly wiktionary*/\n  etyl: tmpl => {\n    let order = ['lang', 'page']\n    return parse(tmpl, order).page || ''\n  },\n  mention: tmpl => {\n    let order = ['lang', 'page']\n    return parse(tmpl, order).page || ''\n  },\n  link: tmpl => {\n    let order = ['lang', 'page']\n    return parse(tmpl, order).page || ''\n  },\n  'la-verb-form': tmpl => {\n    let order = ['word']\n    return parse(tmpl, order).word || ''\n  },\n  'la-ipa': tmpl => {\n    let order = ['word']\n    return parse(tmpl, order).word || ''\n  },\n  //https://en.wikipedia.org/wiki/Template:Sortname\n  sortname: tmpl => {\n    let order = ['first', 'last', 'target', 'sort']\n    let obj = parse(tmpl, order)\n    let name = `${obj.first || ''} ${obj.last || ''}`\n    name = name.trim()\n    if (obj.nolink) {\n      return obj.target || name\n    }\n    if (obj.dab) {\n      name += ` (${obj.dab})`\n      if (obj.target) {\n        obj.target += ` (${obj.dab})`\n      }\n    }\n    if (obj.target) {\n      return `[[${obj.target}|${name}]]`\n    }\n    return `[[${name}]]`\n  }\n}\n\n//these are insane\n// https://en.wikipedia.org/wiki/Template:Tl\nconst links = [\n  'lts',\n  't',\n  'tfd links',\n  'tiw',\n  'tltt',\n  'tetl',\n  'tsetl',\n  'ti',\n  'tic',\n  'tiw',\n  'tlt',\n  'ttl',\n  'twlh',\n  'tl2',\n  'tlu',\n  'demo',\n  'hatnote',\n  'xpd',\n  'para',\n  'elc',\n  'xtag',\n  'mli',\n  'mlix',\n  '#invoke',\n  'url' //https://en.wikipedia.org/wiki/Template:URL\n]\n\n//keyValues\nlinks.forEach(k => {\n  templates[k] = tmpl => {\n    let order = ['first', 'second']\n    let obj = parse(tmpl, order)\n    return obj.second || obj.first\n  }\n})\n//aliases\ntemplates.m = templates.mention\ntemplates['m-self'] = templates.mention\ntemplates.l = templates.link\ntemplates.ll = templates.link\ntemplates['l-self'] = templates.link\nmodule.exports = templates\n","const parse = require('../../_parsers/parse')\nconst Image = require('../../../image/Image')\n\nconst sisterProjects = {\n  wikt: 'wiktionary',\n  commons: 'commons',\n  c: 'commons',\n  commonscat: 'commonscat',\n  n: 'wikinews',\n  q: 'wikiquote',\n  s: 'wikisource',\n  a: 'wikiauthor',\n  b: 'wikibooks',\n  voy: 'wikivoyage',\n  v: 'wikiversity',\n  d: 'wikidata',\n  species: 'wikispecies',\n  m: 'meta',\n  mw: 'mediawiki'\n}\n\nconst parsers = {\n  //https://en.wikipedia.org/wiki/Template:About\n  about: (tmpl, r) => {\n    let obj = parse(tmpl)\n    obj.pos = r.title\n    r.templates.push(obj)\n    return ''\n  },\n  //https://en.wikipedia.org/wiki/Template:Main\n  main: (tmpl, r) => {\n    let obj = parse(tmpl)\n    obj.pos = r.title\n    r.templates.push(obj)\n    return ''\n  },\n  'wide image': ['file', 'width', 'caption'],\n\n  //https://en.wikipedia.org/wiki/Template:Redirect\n  redirect: (tmpl, r) => {\n    let data = parse(tmpl, ['redirect'])\n    let list = data.list || []\n    let links = []\n    for (let i = 0; i < list.length; i += 2) {\n      links.push({\n        page: list[i + 1],\n        desc: list[i]\n      })\n    }\n    let obj = {\n      template: 'redirect',\n      redirect: data.redirect,\n      links: links\n    }\n    r.templates.push(obj)\n    return ''\n  },\n\n  //this one sucks - https://en.wikipedia.org/wiki/Template:GNIS\n  'cite gnis': (tmpl, r) => {\n    let order = ['id', 'name', 'type']\n    let obj = parse(tmpl, order)\n    obj.type = 'gnis'\n    obj.template = 'citation'\n    r.templates.push(obj)\n    return ''\n  },\n  sfn: ['author', 'year', 'location'],\n  audio: ['file', 'text', 'type'],\n\n  'spoken wikipedia': (tmpl, r) => {\n    let order = ['file', 'date']\n    let obj = parse(tmpl, order)\n    obj.template = 'audio'\n    r.templates.push(obj)\n    return ''\n  },\n\n  //https://en.wikipedia.org/wiki/Template:Sister_project_links\n  'sister project links': (tmpl, r) => {\n    let data = parse(tmpl)\n    //rename 'wd' to 'wikidata'\n    let links = {}\n    Object.keys(sisterProjects).forEach(k => {\n      if (data.hasOwnProperty(k) === true) {\n        links[sisterProjects[k]] = data[k] //.text();\n      }\n    })\n    let obj = {\n      template: 'sister project links',\n      links: links\n    }\n    r.templates.push(obj)\n    return ''\n  },\n\n  //https://en.wikipedia.org/wiki/Template:Subject_bar\n  'subject bar': (tmpl, r) => {\n    let data = parse(tmpl)\n    Object.keys(data).forEach(k => {\n      //rename 'voy' to 'wikivoyage'\n      if (sisterProjects.hasOwnProperty(k)) {\n        data[sisterProjects[k]] = data[k]\n        delete data[k]\n      }\n    })\n    let obj = {\n      template: 'subject bar',\n      links: data\n    }\n    r.templates.push(obj)\n    return ''\n  },\n\n  'short description': ['description'],\n  'coord missing': ['region'],\n  //amazingly, this one does not obey any known patterns\n  //https://en.wikipedia.org/wiki/Template:Gallery\n  gallery: (tmpl, r) => {\n    let obj = parse(tmpl)\n    let images = (obj.list || []).filter(line => /^ *File ?:/.test(line))\n    images = images.map(file => {\n      let img = {\n        file: file\n      }\n      return new Image(img).json()\n    })\n    obj = {\n      template: 'gallery',\n      images: images\n    }\n    r.templates.push(obj)\n    return ''\n  },\n  //https://en.wikipedia.org/wiki/Template:See_also\n  'see also': (tmpl, r) => {\n    let data = parse(tmpl)\n    data.pos = r.title\n    r.templates.push(data)\n    return ''\n  },\n  unreferenced: ['date']\n}\n//aliases\nparsers['cite'] = parsers.citation\nparsers['sfnref'] = parsers.sfn\nparsers['harvid'] = parsers.sfn\nparsers['harvnb'] = parsers.sfn\nparsers['unreferenced section'] = parsers.unreferenced\nparsers['redir'] = parsers.redirect\nparsers['sisterlinks'] = parsers['sister project links']\nparsers['main article'] = parsers['main']\n\nmodule.exports = parsers\n","//random misc for inline wikipedia templates\nconst parse = require('../../_parsers/parse')\n\nconst titlecase = str => {\n  return str.charAt(0).toUpperCase() + str.substring(1)\n}\n\n//https://en.wikipedia.org/wiki/Template:Yes\nlet templates = {}\nlet cells = [\n  'rh',\n  'rh2',\n  'yes',\n  'no',\n  'maybe',\n  'eliminated',\n  'lost',\n  'safe',\n  'active',\n  'site active',\n  'coming soon',\n  'good',\n  'won',\n  'nom',\n  'sho',\n  'longlisted',\n  'tba',\n  'success',\n  'operational',\n  'failure',\n  'partial',\n  'regional',\n  'maybecheck',\n  'partial success',\n  'partial failure',\n  'okay',\n  'yes-no',\n  'some',\n  'nonpartisan',\n  'pending',\n  'unofficial',\n  'unofficial2',\n  'usually',\n  'rarely',\n  'sometimes',\n  'any',\n  'varies',\n  'black',\n  'non-album single',\n  'unreleased',\n  'unknown',\n  'perhaps',\n  'depends',\n  'included',\n  'dropped',\n  'terminated',\n  'beta',\n  'table-experimental',\n  'free',\n  'proprietary',\n  'nonfree',\n  'needs',\n  'nightly',\n  'release-candidate',\n  'planned',\n  'scheduled',\n  'incorrect',\n  'no result',\n  'cmain',\n  'calso starring',\n  'crecurring',\n  'cguest',\n  'not yet',\n  'optional'\n]\ncells.forEach(str => {\n  templates[str] = tmpl => {\n    let data = parse(tmpl, ['text'])\n    return data.text || titlecase(data.template)\n  }\n})\n\n//these ones have a text result\nlet moreCells = [\n  ['active fire', 'Active'],\n  ['site active', 'Active'],\n  ['site inactive', 'Inactive'],\n  ['yes2', ''],\n  ['no2', ''],\n  ['ya', '✅'],\n  ['na', '❌'],\n  ['nom', 'Nominated'],\n  ['sho', 'Shortlisted'],\n  ['tba', 'TBA'],\n  ['maybecheck', '✔️'],\n  ['okay', 'Neutral'],\n  ['n/a', 'N/A'],\n  ['sdash', '—'],\n  ['dunno', '?'],\n  ['draw', ''],\n  ['cnone', ''],\n  ['nocontest', '']\n]\nmoreCells.forEach(a => {\n  templates[a[0]] = tmpl => {\n    let data = parse(tmpl, ['text'])\n    return data.text || a[1]\n  }\n})\n\n//this one's a little different\ntemplates.won = tmpl => {\n  let data = parse(tmpl, ['text'])\n  return data.place || data.text || titlecase(data.template)\n}\n\nmodule.exports = templates\n","module.exports = Object.assign({}, require('./links'), require('./page'), require('./table-cell'))\n","const parse = require('../_parsers/parse')\n\nconst zeroPad = function(num) {\n  num = String(num)\n  if (num.length === 1) {\n    num = '0' + num\n  }\n  return num\n}\n\nconst parseTeam = function(obj, round, team) {\n  if (obj[`rd${round}-team${zeroPad(team)}`]) {\n    team = zeroPad(team)\n  }\n  let score = obj[`rd${round}-score${team}`]\n  let num = Number(score)\n  if (isNaN(num) === false) {\n    score = num\n  }\n  return {\n    team: obj[`rd${round}-team${team}`],\n    score: score,\n    seed: obj[`rd${round}-seed${team}`]\n  }\n}\n\n//these are weird.\nconst playoffBracket = function(tmpl) {\n  let rounds = []\n  let obj = parse(tmpl)\n  //try some rounds\n  for (let i = 1; i < 7; i += 1) {\n    let round = []\n    for (let t = 1; t < 16; t += 2) {\n      let key = `rd${i}-team`\n      if (obj[key + t] || obj[key + zeroPad(t)]) {\n        let one = parseTeam(obj, i, t)\n        let two = parseTeam(obj, i, t + 1)\n        round.push([one, two])\n      } else {\n        break\n      }\n    }\n    if (round.length > 0) {\n      rounds.push(round)\n    }\n  }\n  return {\n    template: 'playoffbracket',\n    rounds: rounds\n  }\n}\n\nlet all = {\n  //playoff brackets\n  '4teambracket': function(tmpl, r) {\n    let obj = playoffBracket(tmpl)\n    r.templates.push(obj)\n    return ''\n  }\n}\n\n//a bunch of aliases for these ones:\n// https://en.wikipedia.org/wiki/Category:Tournament_bracket_templates\nconst brackets = [\n  '2teambracket',\n  '4team2elimbracket',\n  '8teambracket',\n  '16teambracket',\n  '32teambracket',\n\n  'cwsbracket',\n  'nhlbracket',\n  'nhlbracket-reseed',\n  '4teambracket-nhl',\n  '4teambracket-ncaa',\n  '4teambracket-mma',\n  '4teambracket-mlb',\n\n  '8teambracket-nhl',\n  '8teambracket-mlb',\n  '8teambracket-ncaa',\n  '8teambracket-afc',\n  '8teambracket-afl',\n  '8teambracket-tennis3',\n  '8teambracket-tennis5',\n\n  '16teambracket-nhl',\n  '16teambracket-nhl divisional',\n  '16teambracket-nhl-reseed',\n  '16teambracket-nba',\n  '16teambracket-swtc',\n  '16teambracket-afc',\n  '16teambracket-tennis3',\n  '16teambracket-tennis5'\n]\nbrackets.forEach(key => {\n  all[key] = all['4teambracket']\n})\n\nmodule.exports = all\n","const parse = require('../_parsers/parse')\n\nconst codes = {\n  '£': 'GB£', // https://en.wikipedia.org/wiki/Template:GBP\n  '¥': '¥', // https://en.wikipedia.org/wiki/Template:JPY\n  '৳': '৳', // https://en.wikipedia.org/wiki/Template:BDT\n  '₩': '₩', // https://en.wikipedia.org/wiki/Template:SK_won\n  '€': '€', // https://en.wikipedia.org/wiki/Template:€\n  '₱': '₱', // https://en.wikipedia.org/wiki/Template:Philippine_peso\n  '₹': '₹', // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n  '₽': '₽', // https://en.wikipedia.org/wiki/Template:RUB\n  'cn¥': 'CN¥', // https://en.wikipedia.org/wiki/Template:CNY\n  'gb£': 'GB£', // https://en.wikipedia.org/wiki/Template:GBP\n  'india rs': '₹', // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n  'indian rupee symbol': '₹', // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n  'indian rupee': '₹', // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n  'indian rupees': '₹', // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n  'philippine peso': '₱', // https://en.wikipedia.org/wiki/Template:Philippine_peso\n  'russian ruble': '₽', // https://en.wikipedia.org/wiki/Template:Russian_ruble\n  'SK won': '₩', // https://en.wikipedia.org/wiki/Template:SK_won\n  'turkish lira': 'TRY', //https://en.wikipedia.org/wiki/Template:Turkish_lira\n  a$: 'A$', // https://en.wikipedia.org/wiki/Template:AUD\n  au$: 'A$', //https://en.wikipedia.org/wiki/Template:AUD\n  aud: 'A$', //https://en.wikipedia.org/wiki/Template:AUD\n  bdt: 'BDT', //https://en.wikipedia.org/wiki/Template:BDT\n  brl: 'BRL', //https://en.wikipedia.org/wiki/Template:BRL\n  ca$: 'CA$', // https://en.wikipedia.org/wiki/Template:CAD\n  cad: 'CA$', // https://en.wikipedia.org/wiki/Template:CAD\n  chf: 'CHF', // https://en.wikipedia.org/wiki/Template:CHF\n  cny: 'CN¥', // https://en.wikipedia.org/wiki/Template:CNY\n  czk: 'czk', // https://en.wikipedia.org/wiki/Template:CZK\n  dkk: 'dkk', // https://en.wikipedia.org/wiki/Template:DKK\n  dkk2: 'dkk', // https://en.wikipedia.org/wiki/Template:DKK\n  euro: '€', // https://en.wikipedia.org/wiki/Template:€\n  gbp: 'GB£', // https://en.wikipedia.org/wiki/Template:GBP\n  hk$: 'HK$', // https://en.wikipedia.org/wiki/Template:HKD\n  hkd: 'HK$', // https://en.wikipedia.org/wiki/Template:HKD\n  ils: 'ILS', // https://en.wikipedia.org/wiki/Template:ILS\n  inr: '₹', // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n  jpy: '¥', // https://en.wikipedia.org/wiki/Template:JPY\n  myr: 'MYR', // https://en.wikipedia.org/wiki/Template:MYR\n  nis: 'ILS', // https://en.wikipedia.org/wiki/Template:ILS\n  nok: 'NOK', //https://en.wikipedia.org/wiki/Template:NOK\n  nok2: 'NOK', //https://en.wikipedia.org/wiki/Template:NOK\n  nz$: 'NZ$', //https://en.wikipedia.org/wiki/Template:NZD\n  nzd: 'NZ$', //https://en.wikipedia.org/wiki/Template:NZD\n  peso: 'peso', //https://en.wikipedia.org/wiki/Template:Peso\n  pkr: '₨', // https://en.wikipedia.org/wiki/Template:Pakistani_Rupee\n  r$: 'BRL', //https://en.wikipedia.org/wiki/Template:BRL\n  rmb: 'CN¥', // https://en.wikipedia.org/wiki/Template:CNY\n  rub: '₽', // https://en.wikipedia.org/wiki/Template:RUB\n  ruble: '₽', // https://en.wikipedia.org/wiki/Template:Ruble\n  rupee: '₹', // https://en.wikipedia.org/wiki/Template:Rupee\n  s$: 'sgd', // https://en.wikipedia.org/wiki/Template:SGD\n  sek: 'SEK', // https://en.wikipedia.org/wiki/Template:SEK\n  sek2: 'SEK', // https://en.wikipedia.org/wiki/Template:SEK\n  sfr: 'CHF', // https://en.wikipedia.org/wiki/Template:CHF\n  sgd: 'sgd', // https://en.wikipedia.org/wiki/Template:SGD\n  shekel: 'ILS', // https://en.wikipedia.org/wiki/Template:ILS\n  sheqel: 'ILS', // https://en.wikipedia.org/wiki/Template:ILS\n  ttd: 'TTD', //https://en.wikipedia.org/wiki/Template:TTD\n  us$: 'US$', // https://en.wikipedia.org/wiki/Template:US$\n  usd: 'US$', // https://en.wikipedia.org/wiki/Template:US$\n  yen: '¥', // https://en.wikipedia.org/wiki/Template:JPY\n  zar: 'R' //https://en.wikipedia.org/wiki/Template:ZAR\n}\n\nconst parseCurrency = (tmpl, r) => {\n  let o = parse(tmpl, ['amount', 'code'])\n  r.templates.push(o)\n  let code = o.template || ''\n  if (code === 'currency') {\n    code = o.code\n    if (!code) {\n      o.code = code = 'usd' //Special case when currency template has no code argument\n    }\n  } else if (\n    code === '' ||\n    code === 'monnaie' ||\n    code === 'unité' ||\n    code === 'nombre' ||\n    code === 'nb'\n  ) {\n    code = o.code\n  }\n  code = (code || '').toLowerCase()\n  switch (code) {\n    case 'us':\n      o.code = code = 'usd'\n      break\n    case 'uk':\n      o.code = code = 'gbp'\n      break\n  }\n  let out = codes[code] || ''\n  let str = `${out}${o.amount || ''}`\n  //support unknown currencies after the number - like '5 BTC'\n  if (o.code && !codes[o.code.toLowerCase()]) {\n    str += ' ' + o.code\n  }\n  return str\n}\n\nconst inrConvert = (tmpl, r) => {\n  let o = parse(tmpl, ['rupee_value', 'currency_formatting'])\n  r.templates.push(o)\n  let formatting = o.currency_formatting\n  if (formatting) {\n    let multiplier = 1\n    switch (formatting) {\n      case 'k':\n        multiplier = 1000\n        break\n      case 'm':\n        multiplier = 1000000\n        break\n      case 'b':\n        multiplier = 1000000000\n        break\n      case 't':\n        multiplier = 1000000000000\n        break\n      case 'l':\n        multiplier = 100000\n        break\n      case 'c':\n        multiplier = 10000000\n        break\n      case 'lc':\n        multiplier = 1000000000000\n        break\n    }\n    o.rupee_value = o.rupee_value * multiplier\n  }\n  let str = `inr ${o.rupee_value || ''}`\n  return str\n}\n\nconst currencies = {\n  //this one is generic https://en.wikipedia.org/wiki/Template:Currency\n  currency: parseCurrency,\n  monnaie: parseCurrency,\n  unité: parseCurrency,\n  nombre: parseCurrency,\n  nb: parseCurrency,\n  iso4217: parseCurrency,\n  inrconvert: inrConvert\n}\n//the others fit the same pattern..\nObject.keys(codes).forEach(k => {\n  currencies[k] = parseCurrency\n})\n\nmodule.exports = currencies\n","const parse = require('../_parsers/parse')\n\nlet templates = {\n  //https://en.wikipedia.org/wiki/Template:Election_box\n  'election box begin': (tmpl, r) => {\n    let data = parse(tmpl)\n    r.templates.push(data)\n    return ''\n  },\n  'election box candidate': (tmpl, r) => {\n    let data = parse(tmpl)\n    r.templates.push(data)\n    return ''\n  },\n  'election box hold with party link': (tmpl, r) => {\n    let data = parse(tmpl)\n    r.templates.push(data)\n    return ''\n  },\n  'election box gain with party link': (tmpl, r) => {\n    let data = parse(tmpl)\n    r.templates.push(data)\n    return ''\n  }\n}\n//aliases\ntemplates['election box begin no change'] = templates['election box begin']\ntemplates['election box begin no party'] = templates['election box begin']\ntemplates['election box begin no party no change'] = templates['election box begin']\ntemplates['election box inline begin'] = templates['election box begin']\ntemplates['election box inline begin no change'] = templates['election box begin']\n\ntemplates['election box candidate for alliance'] = templates['election box candidate']\ntemplates['election box candidate minor party'] = templates['election box candidate']\ntemplates['election box candidate no party link no change'] = templates['election box candidate']\ntemplates['election box candidate with party link'] = templates['election box candidate']\ntemplates['election box candidate with party link coalition 1918'] =\n  templates['election box candidate']\ntemplates['election box candidate with party link no change'] = templates['election box candidate']\ntemplates['election box inline candidate'] = templates['election box candidate']\ntemplates['election box inline candidate no change'] = templates['election box candidate']\ntemplates['election box inline candidate with party link'] = templates['election box candidate']\ntemplates['election box inline candidate with party link no change'] =\n  templates['election box candidate']\ntemplates['election box inline incumbent'] = templates['election box candidate']\nmodule.exports = templates\n","module.exports = [\n  ['🇦🇩', 'and', 'andorra'],\n  ['🇦🇪', 'are', 'united arab emirates'],\n  ['🇦🇫', 'afg', 'afghanistan'],\n  ['🇦🇬', 'atg', 'antigua and barbuda'],\n  ['🇦🇮', 'aia', 'anguilla'],\n  ['🇦🇱', 'alb', 'albania'],\n  ['🇦🇲', 'arm', 'armenia'],\n  ['🇦🇴', 'ago', 'angola'],\n  ['🇦🇶', 'ata', 'antarctica'],\n  ['🇦🇷', 'arg', 'argentina'],\n  ['🇦🇸', 'asm', 'american samoa'],\n  ['🇦🇹', 'aut', 'austria'],\n  ['🇦🇺', 'aus', 'australia'],\n  ['🇦🇼', 'abw', 'aruba'],\n  ['🇦🇽', 'ala', 'åland islands'],\n  ['🇦🇿', 'aze', 'azerbaijan'],\n  ['🇧🇦', 'bih', 'bosnia and herzegovina'],\n  ['🇧🇧', 'brb', 'barbados'],\n  ['🇧🇩', 'bgd', 'bangladesh'],\n  ['🇧🇪', 'bel', 'belgium'],\n  ['🇧🇫', 'bfa', 'burkina faso'],\n  ['🇧🇬', 'bgr', 'bulgaria'],\n  [\n    '🇧🇬',\n    'bul', //dupe\n    'bulgaria'\n  ],\n  ['🇧🇭', 'bhr', 'bahrain'],\n  ['🇧🇮', 'bdi', 'burundi'],\n  ['🇧🇯', 'ben', 'benin'],\n  ['🇧🇱', 'blm', 'saint barthélemy'],\n  ['🇧🇲', 'bmu', 'bermuda'],\n  ['🇧🇳', 'brn', 'brunei darussalam'],\n  ['🇧🇴', 'bol', 'bolivia'],\n  ['🇧🇶', 'bes', 'bonaire, sint eustatius and saba'],\n  ['🇧🇷', 'bra', 'brazil'],\n  ['🇧🇸', 'bhs', 'bahamas'],\n  ['🇧🇹', 'btn', 'bhutan'],\n  ['🇧🇻', 'bvt', 'bouvet island'],\n  ['🇧🇼', 'bwa', 'botswana'],\n  ['🇧🇾', 'blr', 'belarus'],\n  ['🇧🇿', 'blz', 'belize'],\n  ['🇨🇦', 'can', 'canada'],\n  ['🇨🇨', 'cck', 'cocos (keeling) islands'],\n  ['🇨🇩', 'cod', 'congo'],\n  ['🇨🇫', 'caf', 'central african republic'],\n  ['🇨🇬', 'cog', 'congo'],\n  ['🇨🇭', 'che', 'switzerland'],\n  ['🇨🇮', 'civ', \"côte d'ivoire\"],\n  ['🇨🇰', 'cok', 'cook islands'],\n  ['🇨🇱', 'chl', 'chile'],\n  ['🇨🇲', 'cmr', 'cameroon'],\n  ['🇨🇳', 'chn', 'china'],\n  ['🇨🇴', 'col', 'colombia'],\n  ['🇨🇷', 'cri', 'costa rica'],\n  ['🇨🇺', 'cub', 'cuba'],\n  ['🇨🇻', 'cpv', 'cape verde'],\n  ['🇨🇼', 'cuw', 'curaçao'],\n  ['🇨🇽', 'cxr', 'christmas island'],\n  ['🇨🇾', 'cyp', 'cyprus'],\n  ['🇨🇿', 'cze', 'czech republic'],\n  ['🇩🇪', 'deu', 'germany'],\n  [\n    '🇩🇪',\n    'ger', //alias\n    'germany'\n  ],\n  ['🇩🇯', 'dji', 'djibouti'],\n  ['🇩🇰', 'dnk', 'denmark'],\n  ['🇩🇲', 'dma', 'dominica'],\n  ['🇩🇴', 'dom', 'dominican republic'],\n  ['🇩🇿', 'dza', 'algeria'],\n  ['🇪🇨', 'ecu', 'ecuador'],\n  ['🇪🇪', 'est', 'estonia'],\n  ['🇪🇬', 'egy', 'egypt'],\n  ['🇪🇭', 'esh', 'western sahara'],\n  ['🇪🇷', 'eri', 'eritrea'],\n  ['🇪🇸', 'esp', 'spain'],\n  ['🇪🇹', 'eth', 'ethiopia'],\n  ['🇫🇮', 'fin', 'finland'],\n  ['🇫🇯', 'fji', 'fiji'],\n  ['🇫🇰', 'flk', 'falkland islands (malvinas)'],\n  ['🇫🇲', 'fsm', 'micronesia'],\n  ['🇫🇴', 'fro', 'faroe islands'],\n  ['🇫🇷', 'fra', 'france'],\n  ['🇬🇦', 'gab', 'gabon'],\n  ['🇬🇧', 'gbr', 'united kingdom'],\n  ['🇬🇩', 'grd', 'grenada'],\n  // ['🇬🇪', 'geo', 'georgia'],\n  ['🇬🇫', 'guf', 'french guiana'],\n  ['🇬🇬', 'ggy', 'guernsey'],\n  ['🇬🇭', 'gha', 'ghana'],\n  ['🇬🇮', 'gib', 'gibraltar'],\n  ['🇬🇱', 'grl', 'greenland'],\n  ['🇬🇲', 'gmb', 'gambia'],\n  ['🇬🇳', 'gin', 'guinea'],\n  ['🇬🇵', 'glp', 'guadeloupe'],\n  ['🇬🇶', 'gnq', 'equatorial guinea'],\n  ['🇬🇷', 'grc', 'greece'],\n  ['🇬🇸', 'sgs', 'south georgia'],\n  ['🇬🇹', 'gtm', 'guatemala'],\n  ['🇬🇺', 'gum', 'guam'],\n  ['🇬🇼', 'gnb', 'guinea-bissau'],\n  ['🇬🇾', 'guy', 'guyana'],\n  ['🇭🇰', 'hkg', 'hong kong'],\n  ['🇭🇲', 'hmd', 'heard island and mcdonald islands'],\n  ['🇭🇳', 'hnd', 'honduras'],\n  ['🇭🇷', 'hrv', 'croatia'],\n  ['🇭🇹', 'hti', 'haiti'],\n  ['🇭🇺', 'hun', 'hungary'],\n  ['🇮🇩', 'idn', 'indonesia'],\n  ['🇮🇪', 'irl', 'ireland'],\n  ['🇮🇱', 'isr', 'israel'],\n  ['🇮🇲', 'imn', 'isle of man'],\n  ['🇮🇳', 'ind', 'india'],\n  ['🇮🇴', 'iot', 'british indian ocean territory'],\n  ['🇮🇶', 'irq', 'iraq'],\n  ['🇮🇷', 'irn', 'iran'],\n  ['🇮🇸', 'isl', 'iceland'],\n  ['🇮🇹', 'ita', 'italy'],\n  ['🇯🇪', 'jey', 'jersey'],\n  ['🇯🇲', 'jam', 'jamaica'],\n  ['🇯🇴', 'jor', 'jordan'],\n  ['🇯🇵', 'jpn', 'japan'],\n  ['🇰🇪', 'ken', 'kenya'],\n  ['🇰🇬', 'kgz', 'kyrgyzstan'],\n  ['🇰🇭', 'khm', 'cambodia'],\n  ['🇰🇮', 'kir', 'kiribati'],\n  ['🇰🇲', 'com', 'comoros'],\n  ['🇰🇳', 'kna', 'saint kitts and nevis'],\n  ['🇰🇵', 'prk', 'north korea'],\n  ['🇰🇷', 'kor', 'south korea'],\n  ['🇰🇼', 'kwt', 'kuwait'],\n  ['🇰🇾', 'cym', 'cayman islands'],\n  ['🇰🇿', 'kaz', 'kazakhstan'],\n  ['🇱🇦', 'lao', \"lao people's democratic republic\"],\n  ['🇱🇧', 'lbn', 'lebanon'],\n  ['🇱🇨', 'lca', 'saint lucia'],\n  ['🇱🇮', 'lie', 'liechtenstein'],\n  ['🇱🇰', 'lka', 'sri lanka'],\n  ['🇱🇷', 'lbr', 'liberia'],\n  ['🇱🇸', 'lso', 'lesotho'],\n  ['🇱🇹', 'ltu', 'lithuania'],\n  ['🇱🇺', 'lux', 'luxembourg'],\n  ['🇱🇻', 'lva', 'latvia'],\n  ['🇱🇾', 'lby', 'libya'],\n  ['🇲🇦', 'mar', 'morocco'],\n  ['🇲🇨', 'mco', 'monaco'],\n  ['🇲🇩', 'mda', 'moldova'],\n  ['🇲🇪', 'mne', 'montenegro'],\n  ['🇲🇫', 'maf', 'saint martin (french part)'],\n  ['🇲🇬', 'mdg', 'madagascar'],\n  ['🇲🇭', 'mhl', 'marshall islands'],\n  ['🇲🇰', 'mkd', 'macedonia'],\n  ['🇲🇱', 'mli', 'mali'],\n  ['🇲🇲', 'mmr', 'myanmar'],\n  ['🇲🇳', 'mng', 'mongolia'],\n  ['🇲🇴', 'mac', 'macao'],\n  ['🇲🇵', 'mnp', 'northern mariana islands'],\n  ['🇲🇶', 'mtq', 'martinique'],\n  ['🇲🇷', 'mrt', 'mauritania'],\n  ['🇲🇸', 'msr', 'montserrat'],\n  ['🇲🇹', 'mlt', 'malta'],\n  ['🇲🇺', 'mus', 'mauritius'],\n  ['🇲🇻', 'mdv', 'maldives'],\n  ['🇲🇼', 'mwi', 'malawi'],\n  ['🇲🇽', 'mex', 'mexico'],\n  ['🇲🇾', 'mys', 'malaysia'],\n  ['🇲🇿', 'moz', 'mozambique'],\n  ['🇳🇦', 'nam', 'namibia'],\n  ['🇳🇨', 'ncl', 'new caledonia'],\n  ['🇳🇪', 'ner', 'niger'],\n  ['🇳🇫', 'nfk', 'norfolk island'],\n  ['🇳🇬', 'nga', 'nigeria'],\n  ['🇳🇮', 'nic', 'nicaragua'],\n  ['🇳🇱', 'nld', 'netherlands'],\n  ['🇳🇴', 'nor', 'norway'],\n  ['🇳🇵', 'npl', 'nepal'],\n  ['🇳🇷', 'nru', 'nauru'],\n  ['🇳🇺', 'niu', 'niue'],\n  ['🇳🇿', 'nzl', 'new zealand'],\n  ['🇴🇲', 'omn', 'oman'],\n  ['🇵🇦', 'pan', 'panama'],\n  ['🇵🇪', 'per', 'peru'],\n  ['🇵🇫', 'pyf', 'french polynesia'],\n  ['🇵🇬', 'png', 'papua new guinea'],\n  ['🇵🇭', 'phl', 'philippines'],\n  ['🇵🇰', 'pak', 'pakistan'],\n  ['🇵🇱', 'pol', 'poland'],\n  ['🇵🇲', 'spm', 'saint pierre and miquelon'],\n  ['🇵🇳', 'pcn', 'pitcairn'],\n  ['🇵🇷', 'pri', 'puerto rico'],\n  ['🇵🇸', 'pse', 'palestinian territory'],\n  ['🇵🇹', 'prt', 'portugal'],\n  ['🇵🇼', 'plw', 'palau'],\n  ['🇵🇾', 'pry', 'paraguay'],\n  ['🇶🇦', 'qat', 'qatar'],\n  ['🇷🇪', 'reu', 'réunion'],\n  ['🇷🇴', 'rou', 'romania'],\n  ['🇷🇸', 'srb', 'serbia'],\n  ['🇷🇺', 'rus', 'russia'],\n  ['🇷🇼', 'rwa', 'rwanda'],\n  ['🇸🇦', 'sau', 'saudi arabia'],\n  ['🇸🇧', 'slb', 'solomon islands'],\n  ['🇸🇨', 'syc', 'seychelles'],\n  ['🇸🇩', 'sdn', 'sudan'],\n  ['🇸🇪', 'swe', 'sweden'],\n  ['🇸🇬', 'sgp', 'singapore'],\n  ['🇸🇭', 'shn', 'saint helena, ascension and tristan da cunha'],\n  ['🇸🇮', 'svn', 'slovenia'],\n  ['🇸🇯', 'sjm', 'svalbard and jan mayen'],\n  ['🇸🇰', 'svk', 'slovakia'],\n  ['🇸🇱', 'sle', 'sierra leone'],\n  ['🇸🇲', 'smr', 'san marino'],\n  ['🇸🇳', 'sen', 'senegal'],\n  ['🇸🇴', 'som', 'somalia'],\n  ['🇸🇷', 'sur', 'suriname'],\n  ['🇸🇸', 'ssd', 'south sudan'],\n  ['🇸🇹', 'stp', 'sao tome and principe'],\n  ['🇸🇻', 'slv', 'el salvador'],\n  ['🇸🇽', 'sxm', 'sint maarten (dutch part)'],\n  ['🇸🇾', 'syr', 'syrian arab republic'],\n  ['🇸🇿', 'swz', 'swaziland'],\n  ['🇹🇨', 'tca', 'turks and caicos islands'],\n  ['🇹🇩', 'tcd', 'chad'],\n  ['🇹🇫', 'atf', 'french southern territories'],\n  ['🇹🇬', 'tgo', 'togo'],\n  ['🇹🇭', 'tha', 'thailand'],\n  ['🇹🇯', 'tjk', 'tajikistan'],\n  ['🇹🇰', 'tkl', 'tokelau'],\n  ['🇹🇱', 'tls', 'timor-leste'],\n  ['🇹🇲', 'tkm', 'turkmenistan'],\n  ['🇹🇳', 'tun', 'tunisia'],\n  ['🇹🇴', 'ton', 'tonga'],\n  ['🇹🇷', 'tur', 'turkey'],\n  ['🇹🇹', 'tto', 'trinidad and tobago'],\n  ['🇹🇻', 'tuv', 'tuvalu'],\n  ['🇹🇼', 'twn', 'taiwan'],\n  ['🇹🇿', 'tza', 'tanzania'],\n  ['🇺🇦', 'ukr', 'ukraine'],\n  ['🇺🇬', 'uga', 'uganda'],\n  ['🇺🇲', 'umi', 'united states minor outlying islands'],\n  ['🇺🇸', 'usa', 'united states'],\n  [\n    '🇺🇸',\n    'us', //alias\n    'united states'\n  ],\n  ['🇺🇾', 'ury', 'uruguay'],\n  ['🇺🇿', 'uzb', 'uzbekistan'],\n  ['🇻🇦', 'vat', 'vatican city'],\n  ['🇻🇨', 'vct', 'saint vincent and the grenadines'],\n  ['🇻🇪', 'ven', 'venezuela'],\n  ['🇻🇬', 'vgb', 'virgin islands, british'],\n  ['🇻🇮', 'vir', 'virgin islands, u.s.'],\n  ['🇻🇳', 'vnm', 'viet nam'],\n  ['🇻🇺', 'vut', 'vanuatu'],\n  ['', 'win', 'west indies'],\n  ['🇼🇫', 'wlf', 'wallis and futuna'],\n  ['🇼🇸', 'wsm', 'samoa'],\n  ['🇾🇪', 'yem', 'yemen'],\n  ['🇾🇹', 'myt', 'mayotte'],\n  ['🇿🇦', 'zaf', 'south africa'],\n  ['🇿🇲', 'zmb', 'zambia'],\n  ['🇿🇼 ', 'zwe', 'zimbabwe'],\n  //others (later unicode versions)\n  ['🇺🇳', 'un', 'united nations'],\n  ['🏴󠁧󠁢󠁥󠁮󠁧󠁿󠁧󠁢󠁥󠁮󠁧󠁿', 'eng', 'england'],\n  ['🏴󠁧󠁢󠁳󠁣󠁴󠁿', 'sct', 'scotland'],\n  ['🏴󠁧󠁢󠁷󠁬󠁳󠁿', 'wal', 'wales']\n]\n","const parse = require('../_parsers/parse')\nconst flags = require('../../_data/flags')\n\nlet templates = {\n  //https://en.wikipedia.org/wiki/Template:Flag\n  // {{flag|USA}} →  USA\n  flag: tmpl => {\n    let order = ['flag', 'variant']\n    let obj = parse(tmpl, order)\n    let name = obj.flag || ''\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]) || []\n    let flag = found[0] || ''\n    return `${flag} [[${found[2]}|${name}]]`\n  },\n  // {{flagcountry|USA}} →  United States\n  flagcountry: tmpl => {\n    let order = ['flag', 'variant']\n    let obj = parse(tmpl, order)\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]) || []\n    let flag = found[0] || ''\n    return `${flag} [[${found[2]}]]`\n  },\n  // (unlinked flag-country)\n  flagcu: tmpl => {\n    let order = ['flag', 'variant']\n    let obj = parse(tmpl, order)\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]) || []\n    let flag = found[0] || ''\n    return `${flag} ${found[2]}`\n  },\n  //https://en.wikipedia.org/wiki/Template:Flagicon\n  // {{flagicon|USA}} → United States\n  flagicon: tmpl => {\n    let order = ['flag', 'variant']\n    let obj = parse(tmpl, order)\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2])\n    if (!found) {\n      return ''\n    }\n    return `[[${found[2]}|${found[0]}]]`\n  },\n  //unlinked flagicon\n  flagdeco: tmpl => {\n    let order = ['flag', 'variant']\n    let obj = parse(tmpl, order)\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]) || []\n    return found[0] || ''\n  },\n  //same, but a soccer team\n  fb: tmpl => {\n    let order = ['flag', 'variant']\n    let obj = parse(tmpl, order)\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2])\n    if (!found) {\n      return ''\n    }\n    return `${found[0]} [[${found[2]} national football team|${found[2]}]]`\n  },\n  fbicon: tmpl => {\n    let order = ['flag', 'variant']\n    let obj = parse(tmpl, order)\n    obj.flag = (obj.flag || '').toLowerCase()\n    let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2])\n    if (!found) {\n      return ''\n    }\n    return ` [[${found[2]} national football team|${found[0]}]]`\n  }\n}\n//support {{can}}\nflags.forEach(a => {\n  templates[a[1]] = () => {\n    return a[0]\n  }\n})\n//cricket\ntemplates['cr'] = templates.flagcountry\ntemplates['cr-rt'] = templates.flagcountry\ntemplates['cricon'] = templates.flagicon\n\nmodule.exports = templates\n","const parse = require('../_parsers/parse')\nconst languages = require('../../_data/languages')\n\nconst getLang = function(name) {\n  //grab the language from the template name - 'ipa-de'\n  let lang = name.match(/ipac?-(.+)/)\n  if (lang !== null) {\n    if (languages.hasOwnProperty(lang[1]) === true) {\n      return languages[lang[1]].english_title\n    }\n    return lang[1]\n  }\n  return null\n}\n\n// pronounciation info\nconst templates = {\n  // https://en.wikipedia.org/wiki/Template:IPA\n  ipa: (tmpl, r) => {\n    let obj = parse(tmpl, ['transcription', 'lang', 'audio'])\n    obj.lang = getLang(obj.template)\n    obj.template = 'ipa'\n    r.templates.push(obj)\n    return ''\n  },\n  //https://en.wikipedia.org/wiki/Template:IPAc-en\n  ipac: (tmpl, r) => {\n    let obj = parse(tmpl)\n    obj.transcription = (obj.list || []).join(',')\n    delete obj.list\n    obj.lang = getLang(obj.template)\n    obj.template = 'ipac'\n    r.templates.push(obj)\n    return ''\n  }\n}\n// - other languages -\n// Polish, {{IPAc-pl}}\t{{IPAc-pl|'|sz|cz|e|ć|i|n}} → [ˈʂt͡ʂɛt͡ɕin]\n// Portuguese, {{IPAc-pt}}\t{{IPAc-pt|p|o|<|r|t|u|'|g|a|l|lang=pt}} and {{IPAc-pt|b|r|a|'|s|i|l|lang=br}} → [puɾtuˈɣaɫ] and [bɾaˈsiw]\nObject.keys(languages).forEach(lang => {\n  templates['ipa-' + lang] = templates.ipa\n  templates['ipac-' + lang] = templates.ipac\n})\n\nmodule.exports = templates\n","const languages = require('../../_data/languages')\nconst parse = require('../_parsers/parse')\n\nconst templates = {\n  lang: tmpl => {\n    let order = ['lang', 'text']\n    let obj = parse(tmpl, order)\n    return obj.text\n  },\n  //this one has a million variants\n  'lang-de': tmpl => {\n    let order = ['text']\n    let obj = parse(tmpl, order)\n    return obj.text\n  },\n  'rtl-lang': tmpl => {\n    let order = ['lang', 'text']\n    let obj = parse(tmpl, order)\n    return obj.text\n  },\n  //german keyboard letterscn\n  taste: tmpl => {\n    let obj = parse(tmpl, ['key'])\n    return obj.key || ''\n  },\n  //https://en.wikipedia.org/wiki/Template:Nihongo\n  nihongo: (tmpl, r) => {\n    let obj = parse(tmpl, ['english', 'kanji', 'romaji', 'extra'])\n    r.templates.push(obj)\n    let str = obj.english || obj.romaji || ''\n    if (obj.kanji) {\n      str += ` (${obj.kanji})`\n    }\n    return str\n  }\n}\n//https://en.wikipedia.org/wiki/Category:Lang-x_templates\nObject.keys(languages).forEach(k => {\n  templates['lang-' + k] = templates['lang-de']\n})\ntemplates['nihongo2'] = templates.nihongo\ntemplates['nihongo3'] = templates.nihongo\ntemplates['nihongo-s'] = templates.nihongo\ntemplates['nihongo foot'] = templates.nihongo\nmodule.exports = templates\n","const parse = require('../_parsers/parse')\n// const parseSentence = require('../../04-sentence').oneSentence;\n\n//simply num/denom * 100\nconst percentage = function(obj) {\n  if (!obj.numerator && !obj.denominator) {\n    return null\n  }\n  let perc = Number(obj.numerator) / Number(obj.denominator)\n  perc *= 100\n  let dec = Number(obj.decimals)\n  if (isNaN(dec)) {\n    dec = 1\n  }\n  perc = perc.toFixed(dec)\n  return Number(perc)\n}\n\nlet templates = {\n  // https://en.wikipedia.org/wiki/Template:Math\n  math: (tmpl, r) => {\n    let obj = parse(tmpl, ['formula'])\n    r.templates.push(obj)\n    return '\\n\\n' + (obj.formula || '') + '\\n\\n'\n  },\n\n  //fraction - https://en.wikipedia.org/wiki/Template:Sfrac\n  frac: (tmpl, r) => {\n    let order = ['a', 'b', 'c']\n    let obj = parse(tmpl, order)\n    let data = {\n      template: 'sfrac'\n    }\n    if (obj.c) {\n      data.integer = obj.a\n      data.numerator = obj.b\n      data.denominator = obj.c\n    } else if (obj.b) {\n      data.numerator = obj.a\n      data.denominator = obj.b\n    } else {\n      data.numerator = 1\n      data.denominator = obj.a\n    }\n    r.templates.push(data)\n    if (data.integer) {\n      return `${data.integer} ${data.numerator}⁄${data.denominator}`\n    }\n    return `${data.numerator}⁄${data.denominator}`\n  },\n  //https://en.wikipedia.org/wiki/Template:Radic\n  radic: tmpl => {\n    let order = ['after', 'before']\n    let obj = parse(tmpl, order)\n    return `${obj.before || ''}√${obj.after || ''}`\n  },\n  //{{percentage | numerator | denominator | decimals to round to (zero or greater) }}\n  percentage: (tmpl = '') => {\n    let obj = parse(tmpl, ['numerator', 'denominator', 'decimals'])\n    let num = percentage(obj)\n    if (num === null) {\n      return ''\n    }\n    return num + '%'\n  },\n  // {{Percent-done|done=N|total=N|digits=N}}\n  'percent-done': (tmpl = '') => {\n    let obj = parse(tmpl, ['done', 'total', 'digits'])\n    let num = percentage({\n      numerator: obj.done,\n      denominator: obj.total,\n      decimals: obj.digits\n    })\n    if (num === null) {\n      return ''\n    }\n    return `${obj.done} (${num}%) done`\n  },\n  'winning percentage': (tmpl = '', r) => {\n    let obj = parse(tmpl, ['wins', 'losses', 'ties'])\n    r.templates.push(obj)\n    let wins = Number(obj.wins)\n    let losses = Number(obj.losses)\n    let ties = Number(obj.ties) || 0\n    let games = wins + losses + ties\n    if (obj.ignore_ties === 'y') {\n      ties = 0\n    }\n    if (ties) {\n      wins += ties / 2\n    }\n    let num = percentage({\n      numerator: wins,\n      denominator: games,\n      decimals: 1\n    })\n    if (num === null) {\n      return ''\n    }\n    return `.${num * 10}`\n  },\n  winlosspct: (tmpl = '', r) => {\n    let obj = parse(tmpl, ['wins', 'losses'])\n    r.templates.push(obj)\n    let wins = Number(obj.wins)\n    let losses = Number(obj.losses)\n    let num = percentage({\n      numerator: wins,\n      denominator: wins + losses,\n      decimals: 1\n    })\n    if (num === null) {\n      return ''\n    }\n    num = `.${num * 10}`\n    return `${wins || 0} || ${losses || 0} || ${num || '-'}`\n  }\n}\n//aliases\ntemplates['sfrac'] = templates.frac\ntemplates['sqrt'] = templates.radic\ntemplates['pct'] = templates.percentage\ntemplates['percent'] = templates.percentage\ntemplates['winpct'] = templates['winning percentage']\ntemplates['winperc'] = templates['winning percentage']\n\nmodule.exports = templates\n","const parse = require('../_parsers/parse')\n\nconst misc = {\n  uss: ['ship', 'id'],\n  isbn: (tmpl, r) => {\n    let order = ['id', 'id2', 'id3']\n    let obj = parse(tmpl, order)\n    r.templates.push(obj)\n    return 'ISBN: ' + (obj.id || '')\n  },\n  //https://en.wikipedia.org/wiki/Template:Marriage\n  //this one creates a template, and an inline response\n  marriage: (tmpl, r) => {\n    let data = parse(tmpl, ['spouse', 'from', 'to', 'end'])\n    r.templates.push(data)\n    let str = `${data.spouse || ''}`\n    if (data.from) {\n      if (data.to) {\n        str += ` (m. ${data.from}-${data.to})`\n      } else {\n        str += ` (m. ${data.from})`\n      }\n    }\n    return str\n  },\n  //https://en.wikipedia.org/wiki/Template:Based_on\n  'based on': (tmpl, r) => {\n    let obj = parse(tmpl, ['title', 'author'])\n    r.templates.push(obj)\n    return `${obj.title} by ${obj.author || ''}`\n  },\n  //https://en.wikipedia.org/wiki/Template:Video_game_release\n  'video game release': (tmpl, r) => {\n    let order = ['region', 'date', 'region2', 'date2', 'region3', 'date3', 'region4', 'date4']\n    let obj = parse(tmpl, order)\n    let template = {\n      template: 'video game release',\n      releases: []\n    }\n    for (let i = 0; i < order.length; i += 2) {\n      if (obj[order[i]]) {\n        template.releases.push({\n          region: obj[order[i]],\n          date: obj[order[i + 1]]\n        })\n      }\n    }\n    r.templates.push(template)\n    let str = template.releases.map(o => `${o.region}: ${o.date || ''}`).join('\\n\\n')\n    return '\\n' + str + '\\n'\n  },\n  //barrels of oil https://en.wikipedia.org/wiki/Template:Bbl_to_t\n  'bbl to t': (tmpl, r) => {\n    let obj = parse(tmpl, ['barrels'])\n    r.templates.push(obj)\n    if (obj.barrels === '0') {\n      return obj.barrels + ' barrel'\n    }\n    return obj.barrels + ' barrels'\n  },\n  //https://en.wikipedia.org/wiki/Template:Historical_populations\n  'historical populations': (tmpl, r) => {\n    let data = parse(tmpl)\n    data.list = data.list || []\n    let years = []\n    for (let i = 0; i < data.list.length; i += 2) {\n      let num = data.list[i + 1]\n      years.push({\n        year: data.list[i],\n        val: Number(num) || num\n      })\n    }\n    data.data = years\n    delete data.list\n    r.templates.push(data)\n    return ''\n  }\n}\nmodule.exports = misc\n","// okay, these just hurts my feelings\n// https://www.mediawiki.org/wiki/Help:Magic_words#Other\nlet punctuation = [\n  // https://en.wikipedia.org/wiki/Template:%C2%B7\n  ['·', '·'],\n  ['·', '·'],\n  ['dot', '·'],\n  ['middot', '·'],\n  ['•', ' • '],\n  //yup, oxford comma template\n  [',', ','],\n  ['1/2', '1⁄2'],\n  ['1/3', '1⁄3'],\n  ['2/3', '2⁄3'],\n  ['1/4', '1⁄4'],\n  ['3/4', '3⁄4'],\n  ['–', '–'],\n  ['ndash', '–'],\n  ['en dash', '–'],\n  ['spaced ndash', ' – '],\n\n  ['—', '—'],\n  ['mdash', '—'],\n  ['em dash', '—'],\n\n  ['number sign', '#'],\n  ['ibeam', 'I'],\n  ['&', '&'],\n  [';', ';'],\n  ['ampersand', '&'],\n  ['snds', ' – '],\n  ['snd', ' – '],\n  // these '{{^}}' things are nuts, and used as some ilicit spacing thing.\n  ['^', ' '],\n  ['!', '|'],\n  ['\\\\', ' /'],\n  ['`', '`'],\n  ['=', '='],\n  ['bracket', '['],\n  ['[', '['],\n  ['*', '*'],\n  ['asterisk', '*'],\n  ['long dash', '———'],\n  ['clear', '\\n\\n'],\n  ['h.', 'ḥ']\n]\nconst templates = {}\npunctuation.forEach(a => {\n  templates[a[0]] = () => {\n    return a[1]\n  }\n})\nmodule.exports = templates\n","const parse = require('../_parsers/parse')\n\nlet templates = {\n  //https://en.wikipedia.org/wiki/Template:Taxon_info\n  'taxon info': ['taxon', 'item'],\n\n  //minor planet - https://en.wikipedia.org/wiki/Template:MPC\n  mpc: (tmpl, r) => {\n    let obj = parse(tmpl, ['number', 'text'])\n    r.templates.push(obj)\n    return `[https://minorplanetcenter.net/db_search/show_object?object_id=P/2011+NO1 ${obj.text ||\n      obj.number}]`\n  },\n  //https://en.wikipedia.org/wiki/Template:Chem2\n  chem2: (tmpl, r) => {\n    let obj = parse(tmpl, ['equation'])\n    r.templates.push(obj)\n    return obj.equation\n  }, //https://en.wikipedia.org/wiki/Template:Sky\n  sky: (tmpl, r) => {\n    let obj = parse(tmpl, [\n      'asc_hours',\n      'asc_minutes',\n      'asc_seconds',\n      'dec_sign',\n      'dec_degrees',\n      'dec_minutes',\n      'dec_seconds',\n      'distance'\n    ])\n    let template = {\n      template: 'sky',\n      ascension: {\n        hours: obj.asc_hours,\n        minutes: obj.asc_minutes,\n        seconds: obj.asc_seconds\n      },\n      declination: {\n        sign: obj.dec_sign,\n        degrees: obj.dec_degrees,\n        minutes: obj.dec_minutes,\n        seconds: obj.dec_seconds\n      },\n      distance: obj.distance\n    }\n    r.templates.push(template)\n    return ''\n  }\n}\nmodule.exports = templates\n","const parse = require('../_parsers/parse')\nconst flags = require('../../_data/flags')\n\nlet sports = {\n  player: (tmpl, r) => {\n    let res = parse(tmpl, ['number', 'country', 'name', 'dl'])\n    r.templates.push(res)\n    let str = `[[${res.name}]]`\n    if (res.country) {\n      let country = (res.country || '').toLowerCase()\n      let flag = flags.find(a => country === a[1] || country === a[2]) || []\n      if (flag && flag[0]) {\n        str = flag[0] + '  ' + str\n      }\n    }\n    if (res.number) {\n      str = res.number + ' ' + str\n    }\n    return str\n  },\n\n  //https://en.wikipedia.org/wiki/Template:Goal\n  goal: (tmpl, r) => {\n    let res = parse(tmpl)\n    let obj = {\n      template: 'goal',\n      data: []\n    }\n    let arr = res.list || []\n    for (let i = 0; i < arr.length; i += 2) {\n      obj.data.push({\n        min: arr[i],\n        note: arr[i + 1] || ''\n      })\n    }\n    r.templates.push(obj)\n    //generate a little text summary\n    let summary = '⚽ '\n    summary += obj.data\n      .map(o => {\n        let note = o.note\n        if (note) {\n          note = ` (${note})`\n        }\n        return o.min + \"'\" + note\n      })\n      .join(', ')\n    return summary\n  },\n  //yellow card\n  yel: (tmpl, r) => {\n    let obj = parse(tmpl, ['min'])\n    r.templates.push(obj)\n    if (obj.min) {\n      return `yellow: ${obj.min || ''}'` //no yellow-card emoji\n    }\n    return ''\n  },\n  subon: (tmpl, r) => {\n    let obj = parse(tmpl, ['min'])\n    r.templates.push(obj)\n    if (obj.min) {\n      return `sub on: ${obj.min || ''}'` //no yellow-card emoji\n    }\n    return ''\n  },\n  suboff: (tmpl, r) => {\n    let obj = parse(tmpl, ['min'])\n    r.templates.push(obj)\n    if (obj.min) {\n      return `sub off: ${obj.min || ''}'` //no yellow-card emoji\n    }\n    return ''\n  },\n  pengoal: (tmpl, r) => {\n    r.templates.push({\n      template: 'pengoal'\n    })\n    return '✅'\n  },\n  penmiss: (tmpl, r) => {\n    r.templates.push({\n      template: 'penmiss'\n    })\n    return '❌'\n  },\n  //'red' card - {{sent off|cards|min1|min2}}\n  'sent off': (tmpl, r) => {\n    let obj = parse(tmpl, ['cards'])\n    let result = {\n      template: 'sent off',\n      cards: obj.cards,\n      minutes: obj.list || []\n    }\n    r.templates.push(result)\n    let mins = result.minutes.map(m => m + \"'\").join(', ')\n    return 'sent off: ' + mins\n  }\n}\nmodule.exports = sports\n","const parse = require('../_parsers/parse')\n\nconst misc = {\n  'baseball secondary style': function(tmpl) {\n    let obj = parse(tmpl, ['name'])\n    return obj.name\n  },\n  mlbplayer: function(tmpl, r) {\n    let obj = parse(tmpl, ['number', 'name', 'dl'])\n    r.templates.push(obj)\n    return obj.name\n  }\n}\n\nmodule.exports = Object.assign({}, misc, require('./brackets'), require('./soccer'))\n","const parse = require('../_parsers/parse')\n\nconst codes = {\n  adx: 'adx', //https://en.wikipedia.org/wiki/Template:Abu_Dhabi_Securities_Exchange\n  aim: 'aim', //https://en.wikipedia.org/wiki/Template:Alternative_Investment_Market\n  bvpasa: 'bvpasa', //https://en.wikipedia.org/wiki/Template:BVPASA\n  asx: 'asx', //https://en.wikipedia.org/wiki/Template:Australian_Securities_Exchange\n  athex: 'athex', //https://en.wikipedia.org/wiki/Template:Athens_Exchange\n  bhse: 'bhse', //https://en.wikipedia.org/wiki/Template:Bahrain_Bourse\n  bvb: 'bvb', //https://en.wikipedia.org/wiki/Template:Bucharest_Stock_Exchange\n  bbv: 'bbv', //https://en.wikipedia.org/wiki/Template:BBV\n  bsx: 'bsx', //https://en.wikipedia.org/wiki/Template:Bermuda_Stock_Exchange\n  b3: 'b3', //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n  'bm&f': 'b3', //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n  'bm&f bovespa': 'b3', //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n  bwse: 'bwse', //https://en.wikipedia.org/wiki/Template:Botswana_Stock_Exchange\n  'botswana stock exchange': 'botswana stock exchange', //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n  bse: 'bse', //https://en.wikipedia.org/wiki/Template:Bombay_Stock_Exchange\n  'bombay stock exchange': 'bombay stock exchange', //https://en.wikipedia.org/wiki/Template:Bombay_Stock_Exchange\n  bpse: 'bpse', //https://en.wikipedia.org/wiki/Template:Budapest_Stock_Exchange\n  bcba: 'bcba', //https://en.wikipedia.org/wiki/Template:Buenos_Aires_Stock_Exchange\n  'canadian securities exchange': 'canadian securities exchange', //https://en.wikipedia.org/wiki/Template:Canadian_Securities_Exchange\n  bvc: 'bvc', //https://en.wikipedia.org/wiki/Template:Colombian_Securities_Exchange\n  cse: 'cse', //https://en.wikipedia.org/wiki/Template:Chittagong_Stock_Exchange\n  darse: 'darse', //https://en.wikipedia.org/wiki/Template:Dar_es_Salaam_Stock_Exchange\n  dse: 'dse', //https://en.wikipedia.org/wiki/Template:Dhaka_Stock_Exchange\n  dfm: 'dfm', //https://en.wikipedia.org/wiki/Template:Dubai_Financial_Market\n  euronext: 'euronext', //https://en.wikipedia.org/wiki/Template:Euronext\n  fwb: 'fwb', //https://en.wikipedia.org/wiki/Template:Frankfurt_Stock_Exchange\n  fse: 'fse', //https://en.wikipedia.org/wiki/Template:Fukuoka_Stock_Exchange\n  gse: 'gse', //https://en.wikipedia.org/wiki/Template:Ghana_Stock_Exchange\n  gtsm: 'gtsm', //https://en.wikipedia.org/wiki/Template:Gre_Tai_Securities_Market\n  sehk: 'sehk', //https://en.wikipedia.org/wiki/Template:Hong_Kong_Stock_Exchange\n  idx: 'idx', //https://en.wikipedia.org/wiki/Template:Indonesia_Stock_Exchange\n  nse: 'nse', //https://en.wikipedia.org/wiki/Template:National_Stock_Exchange_of_India\n  ise: 'ise', //https://en.wikipedia.org/wiki/Template:Irish_Stock_Exchange\n  isin: 'isin', //https://en.wikipedia.org/wiki/Template:ISIN\n  bist: 'bist', //https://en.wikipedia.org/wiki/Template:Borsa_Istanbul\n  bit: 'bit', //https://en.wikipedia.org/wiki/Template:Borsa_Italiana\n  jasdaq: 'jasdaq', //https://en.wikipedia.org/wiki/Template:JASDAQ\n  jse: 'jse', //https://en.wikipedia.org/wiki/Template:Johannesburg_Stock_Exchange\n  kase: 'kase', //https://en.wikipedia.org/wiki/Template:Kazakhstan_Stock_Exchange\n  krx: 'krx', //https://en.wikipedia.org/wiki/Template:Korea_Exchange\n  bvl: 'bvl', //https://en.wikipedia.org/wiki/Template:Lima_Stock_Exchange\n  lse: 'lse', //https://en.wikipedia.org/wiki/Template:London_Stock_Exchange\n  luxse: 'luxse', //https://en.wikipedia.org/wiki/Template:Luxembourg_Stock_Exchange\n  bmad: 'bmad', //https://en.wikipedia.org/wiki/Template:Bolsa_de_Madrid\n  myx: 'myx', //https://en.wikipedia.org/wiki/Template:Bursa_Malaysia\n  bmv: 'bmv', //https://en.wikipedia.org/wiki/Template:Mexican_Stock_Exchange\n  mcx: 'mcx', //https://en.wikipedia.org/wiki/Template:Moscow_Exchange\n  mutf: 'mutf', //https://en.wikipedia.org/wiki/Template:Mutual_fund\n  nag: 'nag', //https://en.wikipedia.org/wiki/Template:Nagoya_Stock_Exchange\n  kn: 'kn', //https://en.wikipedia.org/wiki/Template:Nairobi_Securities_Exchange\n  'nasdaq dubai': 'nasdaq dubai', //https://en.wikipedia.org/wiki/Template:NASDAQ_Dubai\n  nasdaq: 'nasdaq', //https://en.wikipedia.org/wiki/Template:NASDAQ\n  neeq: 'neeq', //https://en.wikipedia.org/wiki/Template:NEEQ\n  nepse: 'nepse', //https://en.wikipedia.org/wiki/Template:Nepal_Stock_Exchange\n  nyse: 'nyse', //https://en.wikipedia.org/wiki/Template:New_York_Stock_Exchange\n  nzx: 'nzx', //https://en.wikipedia.org/wiki/Template:New_Zealand_Exchange\n  amex: 'amex', //https://en.wikipedia.org/wiki/Template:NYSE_American\n  'nyse arca': 'nyse arca', //https://en.wikipedia.org/wiki/Template:NYSE_Arca\n  omx: 'omx', //https://en.wikipedia.org/wiki/Template:OMX\n  'omx baltic': 'omx baltic', //https://en.wikipedia.org/wiki/Template:OMX_Baltic\n  ose: 'ose', //https://en.wikipedia.org/wiki/Template:Oslo_Stock_Exchange\n  'otc pink': 'otc pink', //https://en.wikipedia.org/wiki/Template:OTC_Pink\n  otcqb: 'otcqb', //https://en.wikipedia.org/wiki/Template:OTCQB\n  otcqx: 'otcqx', //https://en.wikipedia.org/wiki/Template:OTCQX\n  'philippine stock exchange': 'philippine stock exchange', //https://en.wikipedia.org/wiki/Template:Philippine_Stock_Exchange\n  prse: 'prse', //https://en.wikipedia.org/wiki/Template:Prague_Stock_Exchange\n  qe: 'qe', //https://en.wikipedia.org/wiki/Template:Qatar_Stock_Exchange\n  bcs: 'bcs', //https://en.wikipedia.org/wiki/Template:Santiago_Stock_Exchange\n  'saudi stock exchange': 'saudi stock exchange', //https://en.wikipedia.org/wiki/Template:Saudi_Stock_Exchange\n  sgx: 'sgx', //https://en.wikipedia.org/wiki/Template:Singapore_Exchange\n  sse: 'sse', //https://en.wikipedia.org/wiki/Template:Shanghai_Stock_Exchange\n  szse: 'szse', //https://en.wikipedia.org/wiki/Template:Shenzhen_Stock_Exchange\n  swx: 'swx', //https://en.wikipedia.org/wiki/Template:SIX_Swiss_Exchange\n  set: 'set', //https://en.wikipedia.org/wiki/Template:Stock_Exchange_of_Thailand\n  tase: 'tase', //https://en.wikipedia.org/wiki/Template:Tel_Aviv_Stock_Exchange\n  tyo: 'tyo', //https://en.wikipedia.org/wiki/Template:Tokyo_Stock_Exchange\n  tsx: 'tsx', //https://en.wikipedia.org/wiki/Template:Toronto_Stock_Exchange\n  twse: 'twse', //https://en.wikipedia.org/wiki/Template:Taiwan_Stock_Exchange\n  'tsx-v': 'tsx-v', //https://en.wikipedia.org/wiki/Template:TSX_Venture_Exchange\n  tsxv: 'tsxv', //https://en.wikipedia.org/wiki/Template:TSX_Venture_Exchange\n  nex: 'nex', //https://en.wikipedia.org/wiki/Template:TSXV_NEX\n  ttse: 'ttse', //https://en.wikipedia.org/wiki/Template:Trinidad_and_Tobago_Stock_Exchange\n  'pfts ukraine stock exchange': 'pfts ukraine stock exchange', //https://en.wikipedia.org/wiki/Template:PFTS_Ukraine_Stock_Exchange\n  wse: 'wse', //https://en.wikipedia.org/wiki/Template:Warsaw_Stock_Exchange\n  wbag: 'wbag', //https://en.wikipedia.org/wiki/Template:Wiener_B%C3%B6rse\n  zse: 'zse', //https://en.wikipedia.org/wiki/Template:Zagreb_Stock_Exchange\n  'zagreb stock exchange': 'zagreb stock exchange', //https://en.wikipedia.org/wiki/Template:Zagreb_Stock_Exchange\n  'zimbabwe stock exchange': 'zimbabwe stock exchange' //https://en.wikipedia.org/wiki/Template:Zimbabwe_Stock_Exchange\n}\n\nconst parseStockExchange = (tmpl, r) => {\n  let o = parse(tmpl, ['ticketnumber', 'code'])\n  r.templates.push(o)\n  let code = o.template || ''\n  if (code === '') {\n    code = o.code\n  }\n  code = (code || '').toLowerCase()\n  let out = codes[code] || ''\n  let str = out\n  if (o.ticketnumber) {\n    str = `${str}: ${o.ticketnumber}`\n  }\n  if (o.code && !codes[o.code.toLowerCase()]) {\n    str += ' ' + o.code\n  }\n  return str\n}\n\nconst currencies = {}\n//the others fit the same pattern..\nObject.keys(codes).forEach(k => {\n  currencies[k] = parseStockExchange\n})\n\nmodule.exports = currencies\n","const parse = require('../_parsers/parse')\nconst hasMonth = /^jan /i\nconst isYear = /^year /i\n\nconst monthList = [\n  'jan',\n  'feb',\n  'mar',\n  'apr',\n  'may',\n  'jun',\n  'jul',\n  'aug',\n  'sep',\n  'oct',\n  'nov',\n  'dec'\n]\n\nconst toNumber = function(str) {\n  str = str.replace(/,/g, '')\n  str = str.replace(/−/g, '-')\n  let num = Number(str)\n  if (isNaN(num)) {\n    return str\n  }\n  return num\n}\n\nlet templates = {\n  // this one is a handful!\n  //https://en.wikipedia.org/wiki/Template:Weather_box\n  'weather box': (tmpl, r) => {\n    let obj = parse(tmpl)\n    //collect all month-based data\n    let byMonth = {}\n    let properties = Object.keys(obj).filter(k => hasMonth.test(k))\n    properties = properties.map(k => k.replace(hasMonth, ''))\n    properties.forEach(prop => {\n      byMonth[prop] = []\n      monthList.forEach(m => {\n        let key = `${m} ${prop}`\n        if (obj.hasOwnProperty(key)) {\n          let num = toNumber(obj[key])\n          delete obj[key]\n          byMonth[prop].push(num)\n        }\n      })\n    })\n    //add these to original\n    obj.byMonth = byMonth\n\n    //collect year-based data\n    let byYear = {}\n    Object.keys(obj).forEach(k => {\n      if (isYear.test(k)) {\n        let prop = k.replace(isYear, '')\n        byYear[prop] = obj[k]\n        delete obj[k]\n      }\n    })\n    obj.byYear = byYear\n\n    r.templates.push(obj)\n    return ''\n  },\n\n  //The 36 parameters are: 12 monthly highs (C), 12 lows (total 24) plus an optional 12 monthly rain/precipitation\n  //https://en.wikipedia.org/wiki/Template:Weather_box/concise_C\n  'weather box/concise c': (tmpl, r) => {\n    let obj = parse(tmpl)\n    obj.list = obj.list.map(s => toNumber(s))\n    obj.byMonth = {\n      'high c': obj.list.slice(0, 12),\n      'low c': obj.list.slice(12, 24),\n      'rain mm': obj.list.slice(24, 36)\n    }\n    delete obj.list\n    obj.template = 'weather box'\n    r.templates.push(obj)\n    return ''\n  },\n  'weather box/concise f': (tmpl, r) => {\n    let obj = parse(tmpl)\n    obj.list = obj.list.map(s => toNumber(s))\n    obj.byMonth = {\n      'high f': obj.list.slice(0, 12),\n      'low f': obj.list.slice(12, 24),\n      'rain inch': obj.list.slice(24, 36)\n    }\n    delete obj.list\n    obj.template = 'weather box'\n    r.templates.push(obj)\n    return ''\n  },\n\n  //https://en.wikipedia.org/wiki/Template:Climate_chart\n  'climate chart': (tmpl, r) => {\n    let list = parse(tmpl).list || []\n    let title = list[0]\n    let source = list[38]\n    list = list.slice(1)\n    //amazingly, they use '−' symbol here instead of negatives...\n    list = list.map(str => {\n      if (str && str[0] === '−') {\n        str = str.replace(/−/, '-')\n      }\n      return str\n    })\n    let months = []\n    //groups of three, for 12 months\n    for (let i = 0; i < 36; i += 3) {\n      months.push({\n        low: toNumber(list[i]),\n        high: toNumber(list[i + 1]),\n        precip: toNumber(list[i + 2])\n      })\n    }\n    let obj = {\n      template: 'climate chart',\n      data: {\n        title: title,\n        source: source,\n        months: months\n      }\n    }\n    r.templates.push(obj)\n    return ''\n  }\n}\n\nmodule.exports = templates\n","//this format seems to be a pattern for these\nconst generic = ['id', 'title', 'description', 'section']\nconst idName = ['id', 'name']\n\n//https://en.wikipedia.org/wiki/Category:External_link_templates\nconst externals = {\n  //https://en.wikipedia.org/wiki/Template:IMDb_title\n  'imdb title': generic,\n  'imdb name': generic,\n  'imdb episode': generic,\n  'imdb event': generic,\n  'afi film': generic,\n  'allmovie title': generic,\n  allgame: generic,\n  'tcmdb title': generic,\n  'discogs artist': generic,\n  'discogs label': generic,\n  'discogs release': generic,\n  'discogs master': generic,\n  'librivox author': generic,\n  'musicbrainz artist': generic,\n  'musicbrainz label': generic,\n  'musicbrainz recording': generic,\n  'musicbrainz release': generic,\n  'musicbrainz work': generic,\n  youtube: generic,\n  'goodreads author': idName,\n  'goodreads book': generic,\n  twitter: idName,\n  facebook: idName,\n  instagram: idName,\n  tumblr: idName,\n  pinterest: idName,\n  'espn nfl': idName,\n  'espn nhl': idName,\n  'espn fc': idName,\n  hockeydb: idName,\n  'fifa player': idName,\n  worldcat: idName,\n  'worldcat id': idName,\n  'nfl player': idName,\n  'ted speaker': idName,\n  playmate: idName,\n  //https://en.wikipedia.org/wiki/Template:DMOZ\n  dmoz: generic,\n\n  'find a grave': ['id', 'name', 'work', 'last', 'first', 'date', 'accessdate'],\n\n  congbio: ['id', 'name', 'date'],\n\n  'hollywood walk of fame': ['name']\n}\n//alias\nexternals.imdb = externals['imdb name']\nexternals['imdb episodess'] = externals['imdb episode']\nmodule.exports = externals\n","const parse = require('../_parsers/parse')\n// const strip = require('./_parsers/_strip');\n\n//wiktionary... who knows. we should atleast try.\nconst templates = {\n  //{{inflection of|avoir||3|p|pres|ind|lang=fr}}\n  //https://en.wiktionary.org/wiki/Template:inflection_of\n  inflection: (tmpl, r) => {\n    let obj = parse(tmpl, ['lemma'])\n    obj.tags = obj.list\n    delete obj.list\n    obj.type = 'form-of'\n    r.templates.push(obj)\n    return obj.lemma || ''\n  },\n\n  //latin verbs\n  'la-verb-form': (tmpl, r) => {\n    let obj = parse(tmpl, ['word'])\n    r.templates.push(obj)\n    return obj.word || ''\n  },\n  'feminine plural': (tmpl, r) => {\n    let obj = parse(tmpl, ['word'])\n    r.templates.push(obj)\n    return obj.word || ''\n  },\n  'male plural': (tmpl, r) => {\n    let obj = parse(tmpl, ['word'])\n    r.templates.push(obj)\n    return obj.word || ''\n  },\n  rhymes: (tmpl, r) => {\n    let obj = parse(tmpl, ['word'])\n    r.templates.push(obj)\n    return 'Rhymes: -' + (obj.word || '')\n  }\n}\n\n//https://en.wiktionary.org/wiki/Category:Form-of_templates\nlet conjugations = [\n  'abbreviation',\n  'abessive plural',\n  'abessive singular',\n  'accusative plural',\n  'accusative singular',\n  'accusative',\n  'acronym',\n  'active participle',\n  'agent noun',\n  'alternative case form',\n  'alternative form',\n  'alternative plural',\n  'alternative reconstruction',\n  'alternative spelling',\n  'alternative typography',\n  'aphetic form',\n  'apocopic form',\n  'archaic form',\n  'archaic spelling',\n  'aspirate mutation',\n  'associative plural',\n  'associative singular',\n  'attributive form',\n  'attributive form',\n  'augmentative',\n  'benefactive plural',\n  'benefactive singular',\n  'causative plural',\n  'causative singular',\n  'causative',\n  'clipping',\n  'combining form',\n  'comitative plural',\n  'comitative singular',\n  'comparative plural',\n  'comparative singular',\n  'comparative',\n  'contraction',\n  'dated form',\n  'dated spelling',\n  'dative plural definite',\n  'dative plural indefinite',\n  'dative plural',\n  'dative singular',\n  'dative',\n  'definite',\n  'deliberate misspelling',\n  'diminutive',\n  'distributive plural',\n  'distributive singular',\n  'dual',\n  'early form',\n  'eclipsis',\n  'elative',\n  'ellipsis',\n  'equative',\n  'euphemistic form',\n  'euphemistic spelling',\n  'exclusive plural',\n  'exclusive singular',\n  'eye dialect',\n  'feminine noun',\n  'feminine plural past participle',\n  'feminine plural',\n  'feminine singular past participle',\n  'feminine singular',\n  'feminine',\n  'form',\n  'former name',\n  'frequentative',\n  'future participle',\n  'genitive plural definite',\n  'genitive plural indefinite',\n  'genitive plural',\n  'genitive singular definite',\n  'genitive singular indefinite',\n  'genitive singular',\n  'genitive',\n  'gerund',\n  'h-prothesis',\n  'hard mutation',\n  'harmonic variant',\n  'imperative',\n  'imperfective form',\n  'inflected form',\n  'inflection',\n  'informal form',\n  'informal spelling',\n  'initialism',\n  'ja-form',\n  'jyutping reading',\n  'late form',\n  'lenition',\n  'masculine plural past participle',\n  'masculine plural',\n  'medieval spelling',\n  'misconstruction',\n  'misromanization',\n  'misspelling',\n  'mixed mutation',\n  'monotonic form',\n  'mutation',\n  'nasal mutation',\n  'negative',\n  'neuter plural past participle',\n  'neuter plural',\n  'neuter singular past participle',\n  'neuter singular',\n  'nominalization',\n  'nominative plural',\n  'nominative singular',\n  'nonstandard form',\n  'nonstandard spelling',\n  'oblique plural',\n  'oblique singular',\n  'obsolete form',\n  'obsolete spelling',\n  'obsolete typography',\n  'official form',\n  'participle',\n  'passive participle',\n  'passive',\n  'past active participle',\n  'past participle',\n  'past passive participle',\n  'past tense',\n  'perfective form',\n  'plural definite',\n  'plural indefinite',\n  'plural',\n  'polytonic form',\n  'present active participle',\n  'present participle',\n  'present tense',\n  'pronunciation spelling',\n  'rare form',\n  'rare spelling',\n  'reflexive',\n  'second-person singular past',\n  'short for',\n  'singular definite',\n  'singular',\n  'singulative',\n  'soft mutation',\n  'spelling',\n  'standard form',\n  'standard spelling',\n  'substantivisation',\n  'superlative',\n  'superseded spelling',\n  'supine',\n  'syncopic form',\n  'synonym',\n  'terminative plural',\n  'terminative singular',\n  'uncommon form',\n  'uncommon spelling',\n  'verbal noun',\n  'vocative plural',\n  'vocative singular'\n]\nconjugations.forEach(name => {\n  templates[name + ' of'] = (tmpl, r) => {\n    let obj = parse(tmpl, ['lemma'])\n    obj.tags = obj.list\n    delete obj.list\n    obj.type = 'form-of'\n    r.templates.push(obj)\n    return obj.lemma || ''\n  }\n})\nmodule.exports = templates\n","module.exports = Object.assign(\n  {},\n  require('./dates'),\n  require('./formatting'),\n  require('./geo'),\n  require('./wikipedia'),\n\n  require('./brackets'),\n  require('./currency'),\n  require('./elections'),\n  require('./flags'),\n  require('./ipa'),\n  require('./languages'),\n  require('./math'),\n  require('./misc'),\n  require('./punctuation'),\n  require('./science'),\n  require('./soccer'),\n  require('./sports'),\n  require('./stock-exchanges'),\n  require('./weather'),\n  require('./websites'),\n  require('./wiktionary')\n)\n","const ignore = require('./_ignore')\nconst getName = require('./_parsers/_getName')\nconst parse = require('./_parsers/parse')\nconst inf = require('./_infobox')\nconst templates = require('./templates')\nconst generic = require('./_parsers/parse')\n\nconst isArray = function(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\n// console.log(Object.keys(templates).length + ' Templates!');\n\n//this gets all the {{template}} strings and decides how to parse them\nconst parseTemplate = function(tmpl, wiki, data) {\n  let name = getName(tmpl)\n  //we explicitly ignore these templates\n  if (ignore.hasOwnProperty(name) === true) {\n    wiki = wiki.replace(tmpl, '')\n    return wiki\n  }\n\n  //match any known template forms (~1,000!)\n  if (templates.hasOwnProperty(name) === true) {\n    // handle generic shortened array-sytax\n    if (isArray(templates[name]) === true) {\n      let order = templates[name]\n      let obj = generic(tmpl, order)\n      data.templates.push(obj)\n      wiki = wiki.replace(tmpl, '')\n      return wiki\n    }\n    //do full function syntax\n    let str = templates[name](tmpl, data)\n    wiki = wiki.replace(tmpl, str)\n    return wiki\n  }\n  // {{infobox settlement...}}\n  if (inf.isInfobox(name) === true) {\n    let obj = parse(tmpl, data, 'raw')\n    let infobox = inf.format(obj)\n    data.templates.push(infobox)\n    wiki = wiki.replace(tmpl, '')\n    return wiki\n  }\n  //cite book, cite arxiv...\n  if (/^cite [a-z]/.test(name) === true) {\n    let obj = parse(tmpl, data)\n    data.templates.push(obj)\n    wiki = wiki.replace(tmpl, '')\n    return wiki\n  }\n  //fallback parser\n  let obj = parse(tmpl)\n  if (obj !== null && Object.keys(obj).length > 0) {\n    data.templates.push(obj)\n  }\n  wiki = wiki.replace(tmpl, '')\n  return wiki\n}\nmodule.exports = parseTemplate\n","const Infobox = require('../infobox/Infobox')\nconst Reference = require('../reference/Reference')\nconst getTemplates = require('./_getTemplates')\nconst Template = require('./Template')\nconst parseTemplate = require('./parse')\nconst isCitation = new RegExp('^(cite |citation)', 'i')\nconst citations = {\n  citation: true,\n  refn: true,\n  harvnb: true\n}\n//ensure references and infoboxes at least look valid\nconst isObject = function(x) {\n  return typeof x === 'object' && x !== null && x.constructor.toString().indexOf('Array') === -1\n}\n\n//reduce the scary recursive situations\nconst parseTemplates = function(wiki, data, options) {\n  let templates = getTemplates(wiki)\n  //first, do the nested (second level) ones\n  templates.nested.forEach(tmpl => {\n    wiki = parseTemplate(tmpl, wiki, data, options)\n  })\n  //then, reparse wiki for the top-level ones\n  templates = getTemplates(wiki)\n\n  //okay if we have a 3-level-deep template, do it again (but no further)\n  if (templates.nested.length > 0) {\n    templates.nested.forEach(tmpl => {\n      wiki = parseTemplate(tmpl, wiki, data, options)\n    })\n    templates = getTemplates(wiki) //this is getting crazy.\n  }\n  //okay, top-level\n  templates.top.forEach(tmpl => {\n    wiki = parseTemplate(tmpl, wiki, data, options)\n  })\n  //lastly, move citations + infoboxes out of our templates list\n  let clean = []\n  data.templates.forEach(o => {\n    //it's possible that we've parsed a reference, that we missed earlier\n    if (citations[o.template] === true || isCitation.test(o.template) === true) {\n      data.references = data.references || []\n      data.references.push(new Reference(o))\n      return\n    }\n    if (o.template === 'infobox' && o.data && isObject(o.data)) {\n      data.infoboxes = data.infoboxes || []\n      data.infoboxes.push(new Infobox(o))\n      return\n    }\n    clean.push(new Template(o))\n  })\n  data.templates = clean\n  return wiki\n}\n\nmodule.exports = parseTemplates\n","const parseSentence = require('../../04-sentence/').oneSentence\nconst Image = require('../../image/Image')\n//okay, <gallery> is a xml-tag, with newline-seperated data, somehow pivoted by '|'...\n//all deities help us. truly -> https://en.wikipedia.org/wiki/Help:Gallery_tag\n// - not to be confused with https://en.wikipedia.org/wiki/Template:Gallery...\nconst parseGallery = function(wiki, section) {\n  wiki = wiki.replace(/<gallery([^>]*?)>([\\s\\S]+?)<\\/gallery>/g, (_, attrs, inside) => {\n    let images = inside.split(/\\n/g)\n    images = images.filter(str => str && str.trim() !== '')\n    //parse the line, which has an image and sometimes a caption\n    images = images.map(str => {\n      let arr = str.split(/\\|/)\n      let obj = {\n        file: arr[0].trim()\n      }\n      let img = new Image(obj).json()\n      let caption = arr.slice(1).join('|')\n      if (caption !== '') {\n        img.caption = parseSentence(caption)\n      }\n      return img\n    })\n    //add it to our templates list\n    if (images.length > 0) {\n      section.templates.push({\n        template: 'gallery',\n        images: images,\n        pos: section.title\n      })\n    }\n    return ''\n  })\n  return wiki\n}\nmodule.exports = parseGallery\n","const parseTemplates = require('../../template')\n//this is a non-traditional template, for some reason\n//https://en.wikipedia.org/wiki/Template:Election_box\nconst parseElection = function(wiki, section) {\n  wiki = wiki.replace(/\\{\\{election box begin([\\s\\S]+?)\\{\\{election box end\\}\\}/gi, tmpl => {\n    let data = {\n      templates: []\n    }\n    //put it through our full template parser..\n    parseTemplates(tmpl, data, {})\n    //okay, pull it apart into something sensible..\n    let templates = data.templates.map(t => t.json())\n    let start = templates.find(t => t.template === 'election box') || {}\n    let candidates = templates.filter(t => t.template === 'election box candidate')\n    let summary =\n      templates.find(\n        t => t.template === 'election box gain' || t.template === 'election box hold'\n      ) || {}\n    if (candidates.length > 0 || summary) {\n      section.templates.push({\n        template: 'election box',\n        title: start.title,\n        candidates: candidates,\n        summary: summary.data\n      })\n    }\n    //remove it all\n    return ''\n  })\n  return wiki\n}\nmodule.exports = parseElection\n","const tableParser = require('../../table/parse')\nconst keys = {\n  coach: ['team', 'year', 'g', 'w', 'l', 'w-l%', 'finish', 'pg', 'pw', 'pl', 'pw-l%'],\n  player: [\n    'year',\n    'team',\n    'gp',\n    'gs',\n    'mpg',\n    'fg%',\n    '3p%',\n    'ft%',\n    'rpg',\n    'apg',\n    'spg',\n    'bpg',\n    'ppg'\n  ],\n  roster: ['player', 'gp', 'gs', 'mpg', 'fg%', '3fg%', 'ft%', 'rpg', 'apg', 'spg', 'bpg', 'ppg']\n}\n\n//https://en.wikipedia.org/wiki/Template:NBA_player_statistics_start\nconst parseNBA = function(wiki, section) {\n  wiki = wiki.replace(\n    /\\{\\{nba (coach|player|roster) statistics start([\\s\\S]+?)\\{\\{s-end\\}\\}/gi,\n    (tmpl, name) => {\n      tmpl = tmpl.replace(/^\\{\\{.*?\\}\\}/, '')\n      tmpl = tmpl.replace(/\\{\\{s-end\\}\\}/, '')\n      name = name.toLowerCase().trim()\n      let headers = '! ' + keys[name].join(' !! ')\n      let table = '{|\\n' + headers + '\\n' + tmpl + '\\n|}'\n      let rows = tableParser(table)\n\n      rows = rows.map(row => {\n        Object.keys(row).forEach(k => {\n          row[k] = row[k].text()\n        })\n        return row\n      })\n      section.templates.push({\n        template: 'NBA ' + name + ' statistics',\n        data: rows\n      })\n      return ''\n    }\n  )\n  return wiki\n}\nmodule.exports = parseNBA\n","const tableParser = require('../../table/parse')\n//https://en.wikipedia.org/wiki/Template:MLB_game_log_section\n\n//this is pretty nuts\nconst whichHeadings = function(tmpl) {\n  let headings = ['#', 'date', 'opponent', 'score', 'win', 'loss', 'save', 'attendance', 'record']\n  if (/\\|stadium=y/i.test(tmpl) === true) {\n    headings.splice(7, 0, 'stadium') //save, stadium, attendance\n  }\n  if (/\\|time=y/i.test(tmpl) === true) {\n    headings.splice(7, 0, 'time') //save, time, stadium, attendance\n  }\n  if (/\\|box=y/i.test(tmpl) === true) {\n    headings.push('box') //record, box\n  }\n  return headings\n}\n\nconst parseMlb = function(wiki, section) {\n  wiki = wiki.replace(\n    /\\{\\{mlb game log (section|month)[\\s\\S]+?\\{\\{mlb game log (section|month) end\\}\\}/gi,\n    tmpl => {\n      let headings = whichHeadings(tmpl)\n      tmpl = tmpl.replace(/^\\{\\{.*?\\}\\}/, '')\n      tmpl = tmpl.replace(/\\{\\{mlb game log (section|month) end\\}\\}/i, '')\n      let headers = '! ' + headings.join(' !! ')\n      let table = '{|\\n' + headers + '\\n' + tmpl + '\\n|}'\n      let rows = tableParser(table)\n      rows = rows.map(row => {\n        Object.keys(row).forEach(k => {\n          row[k] = row[k].text()\n        })\n        return row\n      })\n      section.templates.push({\n        template: 'mlb game log section',\n        data: rows\n      })\n      return ''\n    }\n  )\n  return wiki\n}\nmodule.exports = parseMlb\n","const tableParser = require('../../table/parse')\nlet headings = [\n  'res',\n  'record',\n  'opponent',\n  'method',\n  'event',\n  'date',\n  'round',\n  'time',\n  'location',\n  'notes'\n]\n\n//https://en.wikipedia.org/wiki/Template:MMA_record_start\nconst parseMMA = function(wiki, section) {\n  wiki = wiki.replace(/\\{\\{mma record start[\\s\\S]+?\\{\\{end\\}\\}/gi, tmpl => {\n    tmpl = tmpl.replace(/^\\{\\{.*?\\}\\}/, '')\n    tmpl = tmpl.replace(/\\{\\{end\\}\\}/i, '')\n    let headers = '! ' + headings.join(' !! ')\n    let table = '{|\\n' + headers + '\\n' + tmpl + '\\n|}'\n    let rows = tableParser(table)\n    rows = rows.map(row => {\n      Object.keys(row).forEach(k => {\n        row[k] = row[k].text()\n      })\n      return row\n    })\n    section.templates.push({\n      template: 'mma record start',\n      data: rows\n    })\n    return ''\n  })\n  return wiki\n}\nmodule.exports = parseMMA\n","const parseSentence = require('../../04-sentence/').oneSentence\n//xml <math>y=mx+b</math> support\n//https://en.wikipedia.org/wiki/Help:Displaying_a_formula\nconst parseMath = function(wiki, section) {\n  wiki = wiki.replace(/<math([^>]*?)>([\\s\\S]+?)<\\/math>/g, (_, attrs, inside) => {\n    //clean it up a little?\n    let formula = parseSentence(inside).text()\n    section.templates.push({\n      template: 'math',\n      formula: formula,\n      raw: inside\n    })\n    //should we atleast try to render it in plaintext? :/\n    if (formula && formula.length < 12) {\n      return formula\n    }\n    return ''\n  })\n  //try chemistry version too\n  wiki = wiki.replace(/<chem([^>]*?)>([\\s\\S]+?)<\\/chem>/g, (_, attrs, inside) => {\n    section.templates.push({\n      template: 'chem',\n      data: inside\n    })\n    return ''\n  })\n  return wiki\n}\nmodule.exports = parseMath\n","const parseGallery = require('./gallery')\nconst parseElection = require('./election')\nconst parseNBA = require('./nba')\nconst parseMlb = require('./mlb')\nconst parseMMA = require('./mma')\nconst parseMath = require('./math')\n// Most templates are '{{template}}', but then, some are '<template></template>'.\n// ... others are {{start}}...{{end}}\n// -> these are those ones.\nconst xmlTemplates = function(section, wiki) {\n  wiki = parseGallery(wiki, section)\n  wiki = parseElection(wiki, section)\n  wiki = parseMath(wiki, section)\n  wiki = parseNBA(wiki, section)\n  wiki = parseMMA(wiki, section)\n  wiki = parseMlb(wiki, section)\n  return wiki\n}\n\nmodule.exports = xmlTemplates\n","const Section = require('./Section')\nconst isReference = /^(references?|einzelnachweise|referencias|références|notes et références|脚注|referenser|bronnen|примечания):?/i //todo support more languages\nconst section_reg = /(?:\\n|^)(={2,5}.{1,200}?={2,5})/g\n\n//interpret ==heading== lines\nconst parse = {\n  heading: require('./heading'),\n  table: require('../table'),\n  paragraphs: require('../03-paragraph'),\n  templates: require('../template'),\n  references: require('../reference'),\n  startEndTemplates: require('./start-to-end')\n}\n\nconst oneSection = function(wiki, data, options) {\n  wiki = parse.startEndTemplates(data, wiki, options)\n  //parse-out the <ref></ref> tags\n  wiki = parse.references(wiki, data)\n  //parse-out all {{templates}}\n  wiki = parse.templates(wiki, data, options)\n  // //parse the tables\n  wiki = parse.table(data, wiki)\n  //now parse all double-newlines\n  let res = parse.paragraphs(wiki, options)\n  data.paragraphs = res.paragraphs\n  wiki = res.wiki\n  data = new Section(data, wiki)\n  return data\n}\n\nconst removeReferenceSection = function(sections) {\n  return sections.filter((s, i) => {\n    if (isReference.test(s.title()) === true) {\n      if (s.paragraphs().length > 0) {\n        return true\n      }\n      //does it have some wacky templates?\n      if (s.templates().length > 0) {\n        return true\n      }\n      //what it has children? awkward\n      if (sections[i + 1] && sections[i + 1].depth > s.depth) {\n        sections[i + 1].depth -= 1 //move it up a level?...\n      }\n      return false\n    }\n    return true\n  })\n}\n\nconst parseSections = function(wiki, options) {\n  let split = wiki.split(section_reg)\n  let sections = []\n  for (let i = 0; i < split.length; i += 2) {\n    let heading = split[i - 1] || ''\n    let content = split[i] || ''\n    if (content === '' && heading === '') {\n      //usually an empty 'intro' section\n      continue\n    }\n    let data = {\n      title: '',\n      depth: null,\n      templates: [],\n      infoboxes: [],\n      references: []\n    }\n    //figure-out title/depth\n    parse.heading(data, heading)\n    //parse it up\n    let s = oneSection(content, data, options)\n    sections.push(s)\n  }\n  //remove empty references section\n  sections = removeReferenceSection(sections)\n\n  return sections\n}\n\nmodule.exports = parseSections\n","const i18n = require('../_data/i18n')\nconst cat_reg = new RegExp(\n  '\\\\[\\\\[:?(' + i18n.categories.join('|') + '):(.{2,178}?)]](w{0,10})',\n  'ig'\n)\nconst cat_remove_reg = new RegExp('^\\\\[\\\\[:?(' + i18n.categories.join('|') + '):', 'ig')\n\nconst parse_categories = function(r, wiki) {\n  r.categories = []\n  let tmp = wiki.match(cat_reg) //regular links\n  if (tmp) {\n    tmp.forEach(function(c) {\n      c = c.replace(cat_remove_reg, '')\n      c = c.replace(/\\|?[ \\*]?\\]\\]$/i, '') //parse fancy onces..\n      c = c.replace(/\\|.*/, '') //everything after the '|' is metadata\n      if (c && !c.match(/[\\[\\]]/)) {\n        r.categories.push(c.trim())\n      }\n    })\n  }\n  wiki = wiki.replace(cat_reg, '')\n  return wiki\n}\nmodule.exports = parse_categories\n","const Document = require('./Document')\nconst redirects = require('./redirects')\nconst disambig = require('./disambig')\nconst preProcess = require('./preProcess')\nconst parse = {\n  section: require('../02-section'),\n  categories: require('./categories')\n}\n\n//convert wikiscript markup lang to json\nconst main = function(wiki, options) {\n  options = options || {}\n  wiki = wiki || ''\n  let data = {\n    type: 'page',\n    title: '',\n    sections: [],\n    categories: [],\n    coordinates: []\n  }\n  //detect if page is just redirect, and return it\n  if (redirects.isRedirect(wiki) === true) {\n    data.type = 'redirect'\n    data.redirectTo = redirects.parse(wiki)\n    parse.categories(data, wiki)\n    return new Document(data, options)\n  }\n  //detect if page is just disambiguator page, and return\n  if (disambig.isDisambig(wiki) === true) {\n    data.type = 'disambiguation'\n  }\n  if (options.page_identifier) {\n    data.page_identifier = options.page_identifier\n  }\n  if (options.lang_or_wikiid) {\n    data.lang_or_wikiid = options.lang_or_wikiid\n  }\n  //give ourselves a little head-start\n  wiki = preProcess(data, wiki, options)\n  //pull-out [[category:whatevers]]\n  wiki = parse.categories(data, wiki)\n  //parse all the headings, and their texts/sentences\n  data.sections = parse.section(wiki, options) || []\n  //all together now\n  return new Document(data, options)\n}\n\nmodule.exports = main\n","const wtf = require('../01-document')\n\n// flip response object into proper Doc objs\nconst parseDoc = function(res) {\n  let docs = res.map(o => {\n    return wtf(o.wiki, o.meta)\n  })\n  if (docs.length === 1) {\n    return docs[0]\n  }\n  return docs\n}\nmodule.exports = parseDoc\n","const https = require('https')\n\n// use the native nodejs request function\nconst request = function(url) {\n  return new Promise((resolve, reject) => {\n    https\n      .get(url, resp => {\n        let data = ''\n        // A chunk of data has been recieved.\n        resp.on('data', chunk => {\n          data += chunk\n        })\n        // The whole response has been received. Print out the result.\n        resp.on('end', () => {\n          try {\n            let json = JSON.parse(data)\n            resolve(json)\n          } catch (e) {\n            reject(e)\n          }\n        })\n      })\n      .on('error', err => {\n        reject(err)\n      })\n  })\n}\nmodule.exports = request\n","const parseUrl = require('./00-parseUrl')\nconst makeUrl = require('./01-makeUrl')\nconst getResult = require('./02-getResult')\nconst parseDoc = require('./03-parseDoc')\nconst http = require('./http/server')\nconst isUrl = /^https?:\\/\\//\n\nconst defaults = {\n  lang: 'en',\n  wiki: 'wikipedia',\n  domain: null,\n  follow_redirects: true,\n  path: 'api.php' //some 3rd party sites use a weird path\n}\n\nconst fetch = function(title, options) {\n  //support lang 2nd param\n  if (typeof options === 'string') {\n    options = { lang: options }\n  }\n  options = options || {}\n  options = Object.assign(defaults, options)\n  options.title = title\n\n  // parse url input\n  if (isUrl.test(title)) {\n    options = Object.assign(options, parseUrl(title))\n  }\n  const url = makeUrl(options)\n  return http(url)\n    .then(res => {\n      let data = getResult(res)\n      return parseDoc(data)\n    })\n    .catch(e => console.error(e))\n}\nmodule.exports = fetch\n\n// console.log(fetch(`? (Enuff Z'nuff album)`))\n// console.log(fetch(`& Juliet`))\n// console.log(fetch('Toronto Raptors', 'fr'))\n// console.log(fetch(['Toronto', 'Montreal'], 'fr'))\n// console.log(fetch('https://en.m.wikipedia.org/wiki/Freebase'))\n// console.log(fetch('https://fr.wikipedia.org/wiki/Toronto_Raptors'))\n// console.log(fetch('https://dota2.gamepedia.com/Abaddon'))\n// console.log(fetch('https://muppet.fandom.com/wiki/Debra_Spinney'))\n"],"names":["parseUrl","url","parsed","URL","title","pathname","replace","decodeURIComponent","domain","host","isInterWiki","defaults","action","prop","rvprop","maxlag","rvslots","origin","format","redirects","toQueryString","obj","Object","entries","map","key","value","encodeURIComponent","join","isArray","arr","prototype","toString","call","cleanTitle","page","trim","makeUrl","options","params","assign","lang","wiki","path","test","follow_redirects","pageids","titles","console","log","getResult","data","pages","keys","query","docs","id","hasOwnProperty","text","revisions","slots","main","meta","pageid","namespace","ns","e","error","sectionMap","doc","fn","clue","sections","forEach","sec","list","t","push","setDefaults","pageID","categories","toJSON","i","json","isRedirect","redirectTo","coordinates","infoboxes","images","plaintext","citations","references","aliasList","wikiscript","original","caption","alt","links","thumb","toJson","img","file","thumbnail","server","encodeTitle","charAt","toUpperCase","substring","makeSrc","Image","defineProperty","enumerable","methods","str","size","split","length","toLowerCase","k","src","tables","lists","paragraphs","Document","undefined","guess","sen","sentences","bolds","type","isDisambiguation","find","s","n","concat","paragraph","info","image","unshift","templates","template","interwiki","sort","a","b","debug","indent","depth","plurals","sing","isDisambig","redirectsTo","redirect","i18n","files","specials","users","disambigs","sources","dictionary","w","module","exports","aa","english_title","direction","local_title","ab","af","ak","als","am","an","ang","ar","arc","as","ast","av","ay","az","ba","bar","bcl","be","bg","bh","bi","bm","bn","bo","bpy","br","bs","bug","bxr","ca","cdo","ce","ceb","ch","cho","chr","chy","co","cr","cs","csb","cu","cv","cy","da","de","diq","dsb","dv","dz","ee","far","el","en","eo","es","et","eu","ext","ff","fi","fj","fo","fr","frp","fur","fy","ga","gan","gd","gil","gl","gn","got","gu","gv","ha","hak","haw","he","hi","ho","hr","ht","hu","hy","hz","ia","ie","ig","ii","ik","ilo","io","is","it","iu","ja","jbo","jv","ka","kg","ki","kj","kk","kl","km","kn","khw","ko","kr","ks","ksh","ku","kv","kw","ky","la","lad","lan","lb","lg","li","lij","lmo","ln","lo","lt","lv","mg","man","mh","mi","min","mk","ml","mn","mo","mr","ms","mt","mus","my","na","nah","nap","nd","nds","ne","ng","nl","nn","no","nr","nso","nrm","nv","ny","oc","oj","om","or","os","pa","pag","pam","pap","pdc","pi","pih","pl","pms","ps","pt","qu","rm","rmy","rn","ro","ru","rw","sa","sc","scn","sco","sd","se","sg","sh","si","simple","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tet","tg","th","ti","tk","tl","tlh","tn","to","tpi","tr","ts","tt","tum","tw","ty","udm","ug","uk","ur","uz","ve","vi","vec","vls","vo","wa","war","wo","xal","xh","yi","yo","za","zh","zu","interwikis","allowed","reduce","h","wik","languages","parseInterwiki","indexOf","m","match","site","ignore_links","external_link","link_reg","external_links","all","protocol","link","internal_links","_","apostrophe","txt","anchor","parse_interwiki","parse_links","REDIRECT_REGEX","RegExp","parse","parseLink","getReg","allowedCharacters","templateReg","d","english","enDisambigs","ignore","openTag","closeTag","anyChar","noThanks","kill_xml","preProcess","r","specialChar","encodeStr","encodeObj","headers","section","p","encode","ref","Section","_title","index","indentation","templ","o","filter","name","num","remove","bads","children","nextSibling","lastSibling","parent","pList","next","last","previousSibling","previous","helpers","capitalise","slice","onlyUnique","self","trim_whitespace","Link","cat_reg","removeLinks","line","getLinks","parseLinks","formatting","italics","fmt","bold","italic","isNumber","dates","numbers","Number","isNaN","number","Sentence","l","abbreviations","literalAbbreviations","abbrev_reg","acronym_reg","elipses_reg","hasWord","flatten","naiive_split","splits","isBalanced","open","closed","quotes","sentence_parser","chunks","isSentence","hmm","postprocess","oneSentence","parseFmt","parseSentences","sentenceParser","addSentences","strip","tmpl","fmtName","pipeSplitter","pop","hasKey","reserved","parseKey","parts","val","keyMaker","order","res","whoCares","classname","style","align","margin","left","boxsize","framestyle","item_style","collapsible","list_style_type","colwidth","cleanup","parseSentence","require$$0","makeFormat","parser","shift","v","Reference","encyclopedia","author","hasCitation","parseCitation","parseInline","inline","parseRefs","heading_reg","parseHeading","heading","parseReferences","fns","lines","findRows","rows","row","getRowSpan","getColSpan","doColSpan","c","parseInt","splice","doRowSpan","handleSpans","headings","age","born","date","year","city","country","population","count","cleanText","findHeaders","first","Boolean","parseRow","firstRowHeader","parseTable","want","table","Table","keyValue","keyvalue","keyval","openReg","closeReg","findTables","stack","Paragraph","find_recursive","opener","closer","out","chars","open_count","close_count","j","isFile","fileNames","file_reg","imgLayouts","border","right","center","top","bottom","none","upright","baseline","middle","sub","oneImage","imgData","parseTemplate","parseImages","matches","toText","List","list_reg","bullet_reg","number_reg","has_word","isList","cleanList","grabList","parseList","theRest","twoNewLines","require$$1","require$$2","parseParagraphs","infobox","Infobox","_type","get","tmp","close","findFlat","carry","findNested","deep","substr","getTemplates","nested","Template","getName","i18nReg","startReg","endReg","yearIn","known","editnotice","geobox","hybridbox","ichnobox","infraspeciesbox","mycomorphbox","oobox","speciesbox","subspeciesbox","taxobox","nhlteamseason","edencharacter","samurai","protein","ordination","mlbbioret","isInfobox","fmtInfobox","monthName","months","ymd","units","month","String","tz","pad","hour","minute","time","second","misc","reign","start","end","circa","Date","getFullYear","getMonth","getDate","monthname","oldstyledate","day","getEpoch","getTime","delta","from","diff","years","Math","floor","days","getBoth","parsers","timezone","natural_date","one_year","two_dates","birth_year","birth_month","birth_date","death_year","death_month","death_date","timeSince","now","predicate","abs","hours","dateTmpl","currentday","currentdayname","getDay","currentmonth","currentyear","monthyear","setMonth","birth_day","dts","birth","death","birthdeathage","dob","localday","localdayname","localmonth","localyear","currentmonthname","currentmonthabbrev","bda","tag","span","div","content","attribs","plural","word","sep","trunc","len","p1","one","p2","two","p3","three","braces","attrs","nobold","noitalic","nocaps","syntaxhighlight","code","samp","vanchor","resize","ra","minutes","seconds","deg2hms","degrees","hms2deg","decdeg","deg","rnd","decimal","dec","u","ul","upl","tmpls","plainlist","hlist","pagelist","catlist","f","flatlist","ublist","cmn","collist","columnslist","convert","four","term","defn","desc","lino","linum","ill","frac","height","result","unit","quote","lbs","lbc","lbb","own","sic","nolink","formatnum","toLocaleString","lc","lcfirst","uc","ucfirst","padleft","padStart","padright","padEnd","abbr","abbrlink","finedetail","display","parseDms","hemisphere","sign","decDeg","round","places","negative","findLatLng","types","lat","lon","convertDMS","parseParams","props","parseCoor","coord","geo","etyl","mention","sortname","target","dab","ll","sisterProjects","wikt","commons","commonscat","q","voy","species","mw","about","pos","sfn","audio","gallery","unreferenced","citation","titlecase","cells","moreCells","won","place","zeroPad","parseTeam","team","score","seed","playoffBracket","rounds","brackets","codes","a$","au$","aud","bdt","brl","ca$","cad","chf","cny","czk","dkk","dkk2","euro","gbp","hk$","hkd","ils","inr","jpy","myr","nis","nok","nok2","nz$","nzd","peso","pkr","r$","rmb","rub","ruble","rupee","s$","sek","sek2","sfr","sgd","shekel","sheqel","ttd","us$","usd","yen","zar","parseCurrency","amount","inrConvert","currency_formatting","multiplier","rupee_value","currencies","currency","monnaie","unité","nombre","nb","iso4217","inrconvert","flag","found","flags","flagcountry","flagcu","flagicon","flagdeco","fb","fbicon","getLang","ipa","ipac","transcription","taste","nihongo","romaji","kanji","percentage","numerator","denominator","perc","decimals","toFixed","math","formula","integer","radic","before","after","done","total","digits","wins","losses","ties","games","ignore_ties","winlosspct","uss","isbn","marriage","spouse","releases","region","barrels","punctuation","mpc","chem2","equation","sky","ascension","asc_hours","asc_minutes","asc_seconds","declination","dec_sign","dec_degrees","dec_minutes","dec_seconds","distance","sports","player","goal","note","summary","yel","subon","suboff","pengoal","penmiss","cards","mins","mlbplayer","adx","aim","bvpasa","asx","athex","bhse","bvb","bbv","bsx","b3","bwse","bse","bpse","bcba","bvc","cse","darse","dse","dfm","euronext","fwb","fse","gse","gtsm","sehk","idx","nse","ise","isin","bist","bit","jasdaq","jse","kase","krx","bvl","lse","luxse","bmad","myx","bmv","mcx","mutf","nag","nasdaq","neeq","nepse","nyse","nzx","amex","omx","ose","otcqb","otcqx","prse","qe","bcs","sgx","sse","szse","swx","set","tase","tyo","tsx","twse","tsxv","nex","ttse","wse","wbag","zse","parseStockExchange","ticketnumber","hasMonth","isYear","monthList","toNumber","byMonth","properties","byYear","source","low","high","precip","generic","idName","externals","allgame","youtube","twitter","facebook","instagram","tumblr","pinterest","hockeydb","worldcat","playmate","dmoz","congbio","imdb","inflection","tags","lemma","rhymes","conjugations","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","inf","isCitation","refn","harvnb","isObject","x","constructor","parseTemplates","clean","parseGallery","inside","parseElection","candidates","coach","roster","parseNBA","tableParser","whichHeadings","parseMlb","parseMMA","parseMath","raw","xmlTemplates","isReference","section_reg","startEndTemplates","oneSection","removeReferenceSection","parseSections","cat_remove_reg","parse_categories","disambig","page_identifier","lang_or_wikiid","parseDoc","wtf","request","Promise","resolve","reject","https","resp","on","chunk","JSON","err","isUrl","fetch","http","then"],"mappings":"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"}