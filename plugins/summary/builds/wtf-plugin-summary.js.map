{"version":3,"file":"wtf-plugin-summary.js","sources":["../src/fromTemplate.js","../src/fromText/methods.js","../src/fromText/noName.js","../src/fromText/index.js","../src/index.js"],"sourcesContent":["const isObject = function(obj) {\n  return obj && Object.prototype.toString.call(obj) === '[object Object]'\n}\nconst fromTemplate = function(doc) {\n  let tmpl = doc.template('short description')\n  if (tmpl && isObject(tmpl) && tmpl.description) {\n    return tmpl.description\n  }\n  return null\n}\nmodule.exports = fromTemplate\n","//use commas, etc\nexports.byClause = function(s, options) {\n  let clauses = s.clauses()\n  // remove any clause with 'is/was'\n  clauses.ifNo('#Copula')\n  // try just removing the last clause\n  if (clauses.length > 1 && clauses.text().length > options.max) {\n    clauses.pop()\n  }\n  return clauses.join()\n}\n\n// truncate a list of descriptions\nexports.popList = function(s) {\n  if (s.has('#Noun and (a|an|the)')) {\n    s = s.remove('and .*')\n  }\n  return s\n}\n\nexports.byTemplate = function(s, options) {\n  s.remove('born in .*')\n  s.remove('(first|initially|originally)? (located|founded|started|based|formed) in .*')\n  s.remove('born #Date+ in? #Place+?')\n  s.remove('(which|who|that) (is|was) .*')\n  s.remove('^the name of')\n  s.remove('(located|situated|sited|found|discovered) (in|on) .*')\n  let txt = s.text()\n  let almostMax = options.max * 0.75\n  if (txt.length > almostMax) {\n    // in california\n    s.remove('in #Place+')\n  }\n  return s\n}\n\nexports.byWord = function(s, options) {\n  let txt = s.text()\n  let almostMax = options.max * 0.8\n  if (txt.length > almostMax) {\n    s.remove('#Demonym') //'american'\n    s.remove('(retired|former|professional|amateur)')\n  }\n  return s\n}\n\nexports.popArticle = function(doc) {\n  doc.remove('^(a|an|the)')\n  return doc\n}\n\nexports.noSuperlative = function(s, options) {\n  let txt = s.text()\n  let almostMax = options.max * 0.7\n  if (txt.length > almostMax) {\n    s.remove('^one of (the|many|several|#Value)+')\n    s.remove('^(a|an|the) #Ordinal? #Superlative')\n    s.remove('^(a|an|the) #Ordinal? most #Adjective')\n  }\n  return s\n}\n","// remove the first part of the sentence\nconst removeTitle = function(s, sentence, title) {\n  s.remove('^.+ #Copula+')\n  //remove bolds (longest-first)\n  let bolds = sentence.bolds().sort((a, b) => {\n    if (a.length > b.length) {\n      return -1\n    }\n    return 1\n  })\n  bolds.forEach(b => {\n    s = s.not(b)\n  })\n  s = s.not('^#Noun+ #Copula')\n  s = s.not(`^${title}`)\n  return s\n}\nmodule.exports = removeTitle\n","const nlp = require('compromise')\nconst fn = require('./methods')\nconst noName = require('./noName')\n\nnlp.extend(Doc => {\n  Doc.prototype.pop = function() {\n    this.list.pop()\n    return this\n  }\n})\n\nconst defaults = {\n  max: 90,\n  min: 8\n}\n\n//check text is appropriate length\nconst isGood = function(text, options) {\n  if (text && text.length > options.min && text.length < options.max) {\n    return true\n  }\n  return false\n}\n\n//\nconst extract = function(doc, options) {\n  options = options || {}\n  options = Object.assign({}, defaults, options)\n  let sentence = doc.sentences(0)\n  if (!sentence) {\n    return ''\n  }\n  let s = nlp(sentence.text())\n  let title = doc.title() || ''\n  //remove 'born-in' stuff\n  s.parentheses().remove()\n  //remove 'Toronto' from beginning\n  s = noName(s, sentence, title)\n  //by comma-section\n  s = fn.byClause(s, options)\n  //remove end period\n  s.post('')\n  // truncate a list\n  s = fn.popList(s, options)\n  // remove known sub-phrases\n  s = fn.byTemplate(s, options)\n  // remove needless words\n  s = fn.byWord(s, options)\n  // remove 'the largest'\n  s = fn.noSuperlative(s, options)\n  //remove article\n  if (options.article === false) {\n    s = fn.popArticle(s)\n  }\n  //spit-out the text\n  let text = s.trim().text()\n  if (isGood(text, options) === true) {\n    return text\n  }\n  return ''\n}\nmodule.exports = extract\n","const nlp = require('compromise')\nconst fromTemplate = require('./fromTemplate')\nconst fromText = require('./fromText')\n\nconst defaults = {\n  article: true\n}\n\nconst seemsGood = function(txt) {\n  return txt && txt.length > 5 && txt.length < 55\n}\n\nconst plugin = function(models) {\n  // add a new method to main class\n  models.Doc.prototype.summary = function(options) {\n    let doc = this\n    options = options || {}\n    options = Object.assign({}, defaults, options)\n\n    // generate from {{short description}} template\n    let txt = fromTemplate(doc, options)\n    if (seemsGood(txt)) {\n      return txt.trim()\n    }\n    // generate from first-sentence\n    return fromText(doc, options)\n  }\n\n  // should we use 'it', 'he', 'they'...\n  models.Doc.prototype.article = function() {\n    let txt = ''\n    // prefer the 2nd sentence\n    if (this.sentences(1)) {\n      txt = this.sentences(1).text()\n    } else {\n      txt = this.sentences(0).text()\n    }\n    let doc = nlp(txt)\n    let found = doc\n      .match('(#Pronoun|#Article)')\n      .eq(0)\n      .text()\n      .toLowerCase()\n    return found || 'it'\n  }\n\n  // was event in past? is person dead?\n  models.Doc.prototype.tense = function() {\n    let txt = this.sentence().text()\n    let doc = nlp(txt)\n    let copula = doc.match('#Copula+').first()\n    if (copula.has('was')) {\n      return 'Past'\n    }\n    let vb = doc.verbs(0)\n    if (vb.has('#PastTense')) {\n      return 'Past'\n    }\n    if (doc.has('will #Adverb? be') || doc.has('(a|an) (upcoming|planned)')) {\n      return 'Future'\n    }\n    return 'Present'\n  }\n}\nmodule.exports = plugin\n"],"names":["isObject","obj","Object","prototype","toString","call","fromTemplate","doc","tmpl","template","description","s","options","clauses","ifNo","length","text","max","pop","join","has","remove","txt","almostMax","removeTitle","sentence","title","bolds","sort","a","b","forEach","not","nlp","extend","Doc","list","defaults","min","isGood","extract","assign","sentences","parentheses","noName","fn","byClause","post","popList","byTemplate","byWord","noSuperlative","article","popArticle","trim","seemsGood","plugin","models","summary","fromText","found","match","eq","toLowerCase","tense","copula","first","vb","verbs"],"mappings":"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"}