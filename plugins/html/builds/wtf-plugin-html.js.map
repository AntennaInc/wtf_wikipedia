{"version":3,"file":"wtf-plugin-html.js","sources":["../src/01-doc.js","../src/02-section.js","../src/03-paragraph.js","../src/_lib/smartReplace.js","../src/04-sentence.js","../src/infobox/_skip-keys.js","../src/infobox/index.js","../src/image.js","../src/index.js"],"sourcesContent":["const defaults = {\n  title: true,\n  infoboxes: true,\n  headers: true,\n  sections: true,\n  links: true\n}\n// we should try to make this look like the wikipedia does, i guess.\nconst softRedirect = function(doc) {\n  let link = doc.redirectTo()\n  let href = link.page\n  href = './' + href.replace(/ /g, '_')\n  if (link.anchor) {\n    href += '#' + link.anchor\n  }\n  return `  <div class=\"redirect\">\n  â†³ <a class=\"link\" href=\"./${href}\">${link.text}</a>\n  </div>`\n}\n\n//turn a Doc object into a HTML string\nconst toHtml = function(options) {\n  options = Object.assign({}, defaults, options)\n  let data = this.data\n  let html = ''\n  html += '<!DOCTYPE html>\\n'\n  html += '<html>\\n'\n  html += '<head>\\n'\n  //add page title\n  if (options.title === true && data.title) {\n    html += '<title>' + data.title + '</title>\\n'\n  }\n  html += '</head>\\n'\n  html += '<body>\\n'\n\n  //if it's a redirect page, give it a 'soft landing':\n  if (this.isRedirect() === true) {\n    html += softRedirect(this)\n    return html + '\\n</body>\\n</html>' //end it here.\n  }\n  //render infoboxes (up at the top)\n  if (options.infoboxes === true) {\n    html += this.infoboxes()\n      .map(i => i.html(options))\n      .join('\\n')\n  }\n  //render each section\n  if (options.sections === true && (options.paragraphs === true || options.sentences === true)) {\n    html += data.sections.map(s => s.html(options)).join('\\n')\n  }\n  //default off\n  if (options.references === true) {\n    html += '<h2>References</h2>'\n    html += this.references()\n      .map(c => c.json(options))\n      .join('\\n')\n  }\n  html += '</body>\\n'\n  html += '</html>'\n  return html\n}\nmodule.exports = toHtml\n","const defaults = {\n  headers: true,\n  images: true,\n  tables: true,\n  lists: true,\n  paragraphs: true\n}\nconst doSection = function(options) {\n  options = Object.assign({}, defaults, options)\n  let html = ''\n  //make the header\n  if (options.headers === true && this.title()) {\n    let num = 1 + this.depth\n    html += '  <h' + num + '>' + this.title() + '</h' + num + '>'\n    html += '\\n'\n  }\n  //put any images under the header\n  if (options.images === true) {\n    let imgs = this.images()\n    if (imgs.length > 0) {\n      html += imgs.map(image => image.html(options)).join('\\n')\n    }\n  }\n  //make a html table\n  if (options.tables === true) {\n    html += this.tables()\n      .map(t => t.html(options))\n      .join('\\n')\n  }\n  // //make a html bullet-list\n  if (options.lists === true) {\n    html += this.lists()\n      .map(list => list.html(options))\n      .join('\\n')\n  }\n  //finally, write the sentence text.\n  if (options.paragraphs === true && this.paragraphs().length > 0) {\n    html += '  <div class=\"text\">\\n'\n    this.paragraphs().forEach(p => {\n      html += '    <p class=\"paragraph\">\\n'\n      html +=\n        '      ' +\n        p\n          .sentences()\n          .map(s => s.html(options))\n          .join(' ')\n      html += '\\n    </p>\\n'\n    })\n    html += '  </div>\\n'\n  } else if (options.sentences === true) {\n    html +=\n      '      ' +\n      this.sentences()\n        .map(s => s.html(options))\n        .join(' ')\n  }\n  return '<div class=\"section\">\\n' + html + '</div>\\n'\n}\nmodule.exports = doSection\n","const defaults = {\n  sentences: true\n}\n\nconst toHtml = function(options) {\n  options = Object.assign({}, defaults, options)\n  let html = ''\n  if (options.sentences === true) {\n    html += this.sentences()\n      .map(s => s.html(options))\n      .join('\\n')\n  }\n  return html\n}\nmodule.exports = toHtml\n","//escape a string like 'fun*2.Co' for a regExpr\nfunction escapeRegExp(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&')\n}\n\n//sometimes text-replacements can be ambiguous - words used multiple times..\nconst smartReplace = function(all, text, result) {\n  if (!text || !all) {\n    return all\n  }\n\n  if (typeof all === 'number') {\n    all = String(all)\n  }\n  text = escapeRegExp(text)\n  //try a word-boundary replace\n  let reg = new RegExp('\\\\b' + text + '\\\\b')\n  if (reg.test(all) === true) {\n    all = all.replace(reg, result)\n  } else {\n    //otherwise, fall-back to a much messier, dangerous replacement\n    // console.warn('missing \\'' + text + '\\'');\n    all = all.replace(text, result)\n  }\n  return all\n}\n\nmodule.exports = smartReplace\n","const smartReplace = require('./_lib/smartReplace')\n\nconst defaults = {\n  links: true,\n  formatting: true\n}\n// create links, bold, italic in html\nconst doSentence = function(options) {\n  options = Object.assign({}, defaults, options)\n  let text = this.text()\n  //turn links into <a href>\n  if (options.links === true) {\n    this.links().forEach(link => {\n      let str = this.text || this.page\n      let tag = link.html()\n      text = smartReplace(text, str, tag)\n    })\n  }\n  if (options.formatting === true) {\n    //support bolds\n    this.bold().forEach(str => {\n      let tag = '<b>' + str + '</b>'\n      text = smartReplace(text, str, tag)\n    })\n    //do italics\n    this.italic().forEach(str => {\n      let tag = '<i>' + str + '</i>'\n      text = smartReplace(text, str, tag)\n    })\n  }\n  return '<span class=\"sentence\">' + text + '</span>'\n}\nmodule.exports = doSentence\n","module.exports = {\n  image: true,\n  caption: true,\n  alt: true,\n  signature: true,\n  'signature alt': true\n}\n","const dontDo = require('./_skip-keys')\nconst defaults = {\n  images: true\n}\n\n//\nconst infobox = function(obj, options) {\n  options = Object.assign({}, defaults, options)\n  let html = '<table class=\"infobox\">\\n'\n  html += '  <thead>\\n'\n  html += '  </thead>\\n'\n  html += '  <tbody>\\n'\n  //put image and caption on the top\n  if (options.images === true && obj.data.image) {\n    html += '    <tr>\\n'\n    html += '       <td colspan=\"2\" style=\"text-align:center\">\\n'\n    html += '       ' + obj.image().html() + '\\n'\n    html += '       </td>\\n'\n    if (obj.data.caption || obj.data.alt) {\n      let caption = obj.data.caption ? obj.data.caption.html(options) : obj.data.alt.html(options)\n      html += '       <td colspan=\"2\" style=\"text-align:center\">\\n'\n      html += '         ' + caption + '\\n'\n      html += '       </td>\\n'\n    }\n    html += '    </tr>\\n'\n  }\n  Object.keys(obj.data).forEach(k => {\n    if (dontDo[k] === true) {\n      return\n    }\n    let s = obj.data[k]\n    let key = k.replace(/_/g, ' ')\n    key = key.charAt(0).toUpperCase() + key.substring(1) //titlecase it\n    let val = s.html(options)\n    html += '    <tr>\\n'\n    html += '      <td>' + key + '</td>\\n'\n    html += '      <td>' + val + '</td>\\n'\n    html += '    </tr>\\n'\n  })\n  html += '  </tbody>\\n'\n  html += '</table>\\n'\n  return html\n}\nmodule.exports = infobox\n","const makeImage = function() {\n  return '  <img src=\"' + this.thumbnail() + '\" alt=\"' + this.alt() + '\"/>'\n}\nmodule.exports = makeImage\n","const doc = require('./01-doc')\nconst section = require('./02-section')\nconst paragraph = require('./03-paragraph')\nconst sentence = require('./04-sentence')\n// const link = require('./05-link')\nconst infobox = require('./infobox')\nconst image = require('./image')\n\nconst plugin = function(models) {\n  models.Doc.html = doc\n\n  models.Section.html = section\n\n  models.Paragraph.html = paragraph\n\n  models.Sentence.html = sentence\n\n  models.Image.html = image\n\n  models.Infobox.html = infobox\n  // models.Template.html = function(opts) {}\n  // models.Link.html = link\n}\nmodule.exports = plugin\n"],"names":["defaults","title","infoboxes","headers","sections","links","softRedirect","doc","link","redirectTo","href","page","replace","anchor","text","toHtml","options","Object","assign","data","html","isRedirect","map","i","join","paragraphs","sentences","s","references","c","json","images","tables","lists","doSection","num","depth","imgs","length","image","t","list","forEach","p","escapeRegExp","str","smartReplace","all","result","String","reg","RegExp","test","formatting","doSentence","tag","bold","italic","caption","alt","signature","infobox","obj","keys","k","dontDo","key","charAt","toUpperCase","substring","val","makeImage","thumbnail","plugin","models","Doc","Section","section","Paragraph","paragraph","Sentence","sentence","Image","Infobox"],"mappings":"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"}